
adc_hw_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00000850  000008e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000850  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080012e  0080012e  00000912  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000912  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000970  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000009b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e6c  00000000  00000000  00000a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b8d  00000000  00000000  000018dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000066a  00000000  00000000  00002469  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00002ad4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050f  00000000  00000000  00002c38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000264  00000000  00000000  00003147  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000033ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	9a c0       	rjmp	.+308    	; 0x14a <__vector_5>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	dd c0       	rjmp	.+442    	; 0x204 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e5       	ldi	r30, 0x50	; 80
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 32       	cpi	r26, 0x2E	; 46
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e2       	ldi	r26, 0x2E	; 46
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 33       	cpi	r26, 0x3C	; 60
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	79 d0       	rcall	.+242    	; 0x1b6 <main>
  c4:	c3 c3       	rjmp	.+1926   	; 0x84c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <adc_init>:

int cur_ch;
int change_channel_flag;

void adc_init(unsigned char ch) {
	ADMUX |= ch | (1<<REFS0);
  c8:	97 b1       	in	r25, 0x07	; 7
  ca:	90 64       	ori	r25, 0x40	; 64
  cc:	98 2b       	or	r25, r24
  ce:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= ((1 << ADEN) | (1 << ADSC) | (1 << ADFR) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0));
  d0:	96 b1       	in	r25, 0x06	; 6
  d2:	97 6e       	ori	r25, 0xE7	; 231
  d4:	96 b9       	out	0x06, r25	; 6
	cur_ch = ch;
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
  dc:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
  e0:	08 95       	ret

000000e2 <adc_read>:
}

int adc_read(void) {
	while(!(ADCSRA & (1<<ADIF)));
  e2:	34 9b       	sbis	0x06, 4	; 6
  e4:	fe cf       	rjmp	.-4      	; 0xe2 <adc_read>
	// return (ADCH << 8) | ADCL;
	return ADC;
  e6:	84 b1       	in	r24, 0x04	; 4
  e8:	95 b1       	in	r25, 0x05	; 5
}
  ea:	08 95       	ret

000000ec <print_adc_value>:

void print_adc_value(int adc_value) {
	if(change_channel_flag) {
  ec:	20 91 30 01 	lds	r18, 0x0130	; 0x800130 <change_channel_flag>
  f0:	30 91 31 01 	lds	r19, 0x0131	; 0x800131 <change_channel_flag+0x1>
  f4:	23 2b       	or	r18, r19
  f6:	29 f0       	breq	.+10     	; 0x102 <print_adc_value+0x16>
		change_channel_flag = 0;
  f8:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <change_channel_flag+0x1>
  fc:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <change_channel_flag>
		return;
 100:	08 95       	ret
	}
	printf("adc_value : %d\r\n", adc_value);
 102:	9f 93       	push	r25
 104:	8f 93       	push	r24
 106:	8c e1       	ldi	r24, 0x1C	; 28
 108:	91 e0       	ldi	r25, 0x01	; 1
 10a:	9f 93       	push	r25
 10c:	8f 93       	push	r24
 10e:	de d0       	rcall	.+444    	; 0x2cc <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 110:	2f ef       	ldi	r18, 0xFF	; 255
 112:	89 e6       	ldi	r24, 0x69	; 105
 114:	98 e1       	ldi	r25, 0x18	; 24
 116:	21 50       	subi	r18, 0x01	; 1
 118:	80 40       	sbci	r24, 0x00	; 0
 11a:	90 40       	sbci	r25, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <print_adc_value+0x2a>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <print_adc_value+0x34>
 120:	00 00       	nop
 122:	0f 90       	pop	r0
 124:	0f 90       	pop	r0
 126:	0f 90       	pop	r0
 128:	0f 90       	pop	r0
 12a:	08 95       	ret

0000012c <adc_change_channel>:
	_delay_ms(500);
}

void adc_change_channel(unsigned char ch) {
	ADMUX = ch | (1<<REFS0);
 12c:	80 64       	ori	r24, 0x40	; 64
 12e:	87 b9       	out	0x07, r24	; 7
 130:	8f e9       	ldi	r24, 0x9F	; 159
 132:	9f e0       	ldi	r25, 0x0F	; 15
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <adc_change_channel+0x8>
 138:	00 c0       	rjmp	.+0      	; 0x13a <adc_change_channel+0xe>
 13a:	00 00       	nop
	_delay_ms(1);
	change_channel_flag = 1;
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <change_channel_flag+0x1>
 144:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <change_channel_flag>
 148:	08 95       	ret

0000014a <__vector_5>:

#include "interrupt.h"

volatile int flag;

ISR(INT4_vect) {
 14a:	1f 92       	push	r1
 14c:	0f 92       	push	r0
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	0f 92       	push	r0
 152:	11 24       	eor	r1, r1
 154:	2f 93       	push	r18
 156:	8f 93       	push	r24
 158:	9f 93       	push	r25
 15a:	2f ef       	ldi	r18, 0xFF	; 255
 15c:	89 ef       	ldi	r24, 0xF9	; 249
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	21 50       	subi	r18, 0x01	; 1
 162:	80 40       	sbci	r24, 0x00	; 0
 164:	90 40       	sbci	r25, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <__vector_5+0x16>
 168:	00 c0       	rjmp	.+0      	; 0x16a <__vector_5+0x20>
 16a:	00 00       	nop
	_delay_ms(20);
	flag = 1;
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <flag+0x1>
 174:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <flag>
	while(!(PINE & (1<<4)));
 178:	0c 9b       	sbis	0x01, 4	; 1
 17a:	fe cf       	rjmp	.-4      	; 0x178 <__vector_5+0x2e>
 17c:	2f ef       	ldi	r18, 0xFF	; 255
 17e:	89 ef       	ldi	r24, 0xF9	; 249
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	21 50       	subi	r18, 0x01	; 1
 184:	80 40       	sbci	r24, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <__vector_5+0x38>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <__vector_5+0x42>
 18c:	00 00       	nop
	_delay_ms(20);
	EIFR |= (1<<4);
 18e:	88 b7       	in	r24, 0x38	; 56
 190:	80 61       	ori	r24, 0x10	; 16
 192:	88 bf       	out	0x38, r24	; 56
}
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	2f 91       	pop	r18
 19a:	0f 90       	pop	r0
 19c:	0f be       	out	0x3f, r0	; 63
 19e:	0f 90       	pop	r0
 1a0:	1f 90       	pop	r1
 1a2:	18 95       	reti

000001a4 <int4_init>:

void int4_init(void) {
	PORTE |= (1<<4);
 1a4:	1c 9a       	sbi	0x03, 4	; 3
	EIMSK |= (1<<INT4);
 1a6:	89 b7       	in	r24, 0x39	; 57
 1a8:	80 61       	ori	r24, 0x10	; 16
 1aa:	89 bf       	out	0x39, r24	; 57
	EICRB |= (1<<ISC41);
 1ac:	8a b7       	in	r24, 0x3a	; 58
 1ae:	82 60       	ori	r24, 0x02	; 2
 1b0:	8a bf       	out	0x3a, r24	; 58
	sei();
 1b2:	78 94       	sei
 1b4:	08 95       	ret

000001b6 <main>:
extern volatile int flag;
extern int cur_ch;

int main(void)
{
	int4_init();
 1b6:	f6 df       	rcall	.-20     	; 0x1a4 <int4_init>
	uart0_init();
 1b8:	71 d0       	rcall	.+226    	; 0x29c <uart0_init>
	adc_init(0x01);
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	85 df       	rcall	.-246    	; 0xc8 <adc_init>
	
    while (1) 
    {
		print_adc_value(adc_read());
		if(flag) {
			cur_ch = 2 ? cur_ch == 1 : cur_ch == 2;
 1be:	c1 e0       	ldi	r28, 0x01	; 1
	uart0_init();
	adc_init(0x01);
	
    while (1) 
    {
		print_adc_value(adc_read());
 1c0:	d0 e0       	ldi	r29, 0x00	; 0
 1c2:	8f df       	rcall	.-226    	; 0xe2 <adc_read>
 1c4:	93 df       	rcall	.-218    	; 0xec <print_adc_value>
 1c6:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <flag>
		if(flag) {
 1ca:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <flag+0x1>
 1ce:	89 2b       	or	r24, r25
 1d0:	c1 f3       	breq	.-16     	; 0x1c2 <main+0xc>
 1d2:	8c 2f       	mov	r24, r28
			cur_ch = 2 ? cur_ch == 1 : cur_ch == 2;
 1d4:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
 1d8:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
 1dc:	21 30       	cpi	r18, 0x01	; 1
 1de:	31 05       	cpc	r19, r1
 1e0:	09 f0       	breq	.+2      	; 0x1e4 <main+0x2e>
 1e2:	8d 2f       	mov	r24, r29
 1e4:	28 2f       	mov	r18, r24
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <__data_end+0x1>
 1ec:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <__data_end>
			adc_change_channel(cur_ch);
 1f0:	9d df       	rcall	.-198    	; 0x12c <adc_change_channel>
 1f2:	e7 cf       	rjmp	.-50     	; 0x1c2 <main+0xc>

000001f4 <uart0_trasnmit>:
	 stdin = &INPUT;
	 stdout = &OUTPUT;
 }

 void uart0_trasnmit(char data) {
	 while(!(UCSR0A & (1 << UDRE0)));
 1f4:	5d 9b       	sbis	0x0b, 5	; 11
 1f6:	fe cf       	rjmp	.-4      	; 0x1f4 <uart0_trasnmit>
	 UDR0 = data;
 1f8:	8c b9       	out	0x0c, r24	; 12
 1fa:	08 95       	ret

000001fc <uart0_receive>:
 }

 unsigned char uart0_receive(void) {
	 while(!(UCSR0A & (1 << RXC0)));
 1fc:	5f 9b       	sbis	0x0b, 7	; 11
 1fe:	fe cf       	rjmp	.-4      	; 0x1fc <uart0_receive>
	 return UDR0;
 200:	8c b1       	in	r24, 0x0c	; 12
 }
 202:	08 95       	ret

00000204 <__vector_18>:
FILE INPUT = FDEV_SETUP_STREAM(uart0_receive, NULL, _FDEV_SETUP_READ);

volatile int flag;
volatile int rxdata;

ISR(USART0_RX_vect) {
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	11 24       	eor	r1, r1
 20e:	2f 93       	push	r18
 210:	3f 93       	push	r19
 212:	4f 93       	push	r20
 214:	5f 93       	push	r21
 216:	8f 93       	push	r24
 218:	9f 93       	push	r25
	unsigned char tmp = UDR0;
 21a:	8c b1       	in	r24, 0x0c	; 12
	if(tmp >= '0' && tmp <= '9') {
 21c:	90 ed       	ldi	r25, 0xD0	; 208
 21e:	98 0f       	add	r25, r24
 220:	9a 30       	cpi	r25, 0x0A	; 10
 222:	58 f5       	brcc	.+86     	; 0x27a <__vector_18+0x76>
		if(flag) {
 224:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <flag>
 228:	30 91 33 01 	lds	r19, 0x0133	; 0x800133 <flag+0x1>
 22c:	23 2b       	or	r18, r19
 22e:	c1 f0       	breq	.+48     	; 0x260 <__vector_18+0x5c>
			rxdata = rxdata * 10 + tmp - '0';
 230:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <rxdata>
 234:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <rxdata+0x1>
 238:	a9 01       	movw	r20, r18
 23a:	44 0f       	add	r20, r20
 23c:	55 1f       	adc	r21, r21
 23e:	22 0f       	add	r18, r18
 240:	33 1f       	adc	r19, r19
 242:	22 0f       	add	r18, r18
 244:	33 1f       	adc	r19, r19
 246:	22 0f       	add	r18, r18
 248:	33 1f       	adc	r19, r19
 24a:	24 0f       	add	r18, r20
 24c:	35 1f       	adc	r19, r21
 24e:	28 0f       	add	r18, r24
 250:	31 1d       	adc	r19, r1
 252:	20 53       	subi	r18, 0x30	; 48
 254:	31 09       	sbc	r19, r1
 256:	30 93 35 01 	sts	0x0135, r19	; 0x800135 <rxdata+0x1>
 25a:	20 93 34 01 	sts	0x0134, r18	; 0x800134 <rxdata>
 25e:	13 c0       	rjmp	.+38     	; 0x286 <__vector_18+0x82>
		}
		else {
			rxdata = tmp - '0';
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	c0 97       	sbiw	r24, 0x30	; 48
 264:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <rxdata+0x1>
 268:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <rxdata>
			flag = 1;
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <flag+0x1>
 274:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <flag>
 278:	06 c0       	rjmp	.+12     	; 0x286 <__vector_18+0x82>
		}
	}
	else if(tmp == '\r') {
 27a:	8d 30       	cpi	r24, 0x0D	; 13
 27c:	21 f4       	brne	.+8      	; 0x286 <__vector_18+0x82>
		flag = 0;
 27e:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <flag+0x1>
 282:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <flag>
	}
}
 286:	9f 91       	pop	r25
 288:	8f 91       	pop	r24
 28a:	5f 91       	pop	r21
 28c:	4f 91       	pop	r20
 28e:	3f 91       	pop	r19
 290:	2f 91       	pop	r18
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <uart0_init>:

 void uart0_init(void) {
	 UBRR0H = 0x00;
 29c:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	 UBRR0L = 16;
 2a0:	80 e1       	ldi	r24, 0x10	; 16
 2a2:	89 b9       	out	0x09, r24	; 9
	 
	 UCSR0A |= (1<<U2X0);
 2a4:	59 9a       	sbi	0x0b, 1	; 11
	 UCSR0C |= 0x06;
 2a6:	e5 e9       	ldi	r30, 0x95	; 149
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	80 81       	ld	r24, Z
 2ac:	86 60       	ori	r24, 0x06	; 6
 2ae:	80 83       	st	Z, r24

	 UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
 2b0:	8a b1       	in	r24, 0x0a	; 10
 2b2:	88 61       	ori	r24, 0x18	; 24
 2b4:	8a b9       	out	0x0a, r24	; 10

	 stdin = &INPUT;
 2b6:	e6 e3       	ldi	r30, 0x36	; 54
 2b8:	f1 e0       	ldi	r31, 0x01	; 1
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	91 e0       	ldi	r25, 0x01	; 1
 2be:	91 83       	std	Z+1, r25	; 0x01
 2c0:	80 83       	st	Z, r24
	 stdout = &OUTPUT;
 2c2:	8e e0       	ldi	r24, 0x0E	; 14
 2c4:	91 e0       	ldi	r25, 0x01	; 1
 2c6:	93 83       	std	Z+3, r25	; 0x03
 2c8:	82 83       	std	Z+2, r24	; 0x02
 2ca:	08 95       	ret

000002cc <printf>:
 2cc:	cf 93       	push	r28
 2ce:	df 93       	push	r29
 2d0:	cd b7       	in	r28, 0x3d	; 61
 2d2:	de b7       	in	r29, 0x3e	; 62
 2d4:	ae 01       	movw	r20, r28
 2d6:	4b 5f       	subi	r20, 0xFB	; 251
 2d8:	5f 4f       	sbci	r21, 0xFF	; 255
 2da:	fa 01       	movw	r30, r20
 2dc:	61 91       	ld	r22, Z+
 2de:	71 91       	ld	r23, Z+
 2e0:	af 01       	movw	r20, r30
 2e2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__iob+0x2>
 2e6:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__iob+0x3>
 2ea:	03 d0       	rcall	.+6      	; 0x2f2 <vfprintf>
 2ec:	df 91       	pop	r29
 2ee:	cf 91       	pop	r28
 2f0:	08 95       	ret

000002f2 <vfprintf>:
 2f2:	2f 92       	push	r2
 2f4:	3f 92       	push	r3
 2f6:	4f 92       	push	r4
 2f8:	5f 92       	push	r5
 2fa:	6f 92       	push	r6
 2fc:	7f 92       	push	r7
 2fe:	8f 92       	push	r8
 300:	9f 92       	push	r9
 302:	af 92       	push	r10
 304:	bf 92       	push	r11
 306:	cf 92       	push	r12
 308:	df 92       	push	r13
 30a:	ef 92       	push	r14
 30c:	ff 92       	push	r15
 30e:	0f 93       	push	r16
 310:	1f 93       	push	r17
 312:	cf 93       	push	r28
 314:	df 93       	push	r29
 316:	cd b7       	in	r28, 0x3d	; 61
 318:	de b7       	in	r29, 0x3e	; 62
 31a:	2b 97       	sbiw	r28, 0x0b	; 11
 31c:	0f b6       	in	r0, 0x3f	; 63
 31e:	f8 94       	cli
 320:	de bf       	out	0x3e, r29	; 62
 322:	0f be       	out	0x3f, r0	; 63
 324:	cd bf       	out	0x3d, r28	; 61
 326:	6c 01       	movw	r12, r24
 328:	7b 01       	movw	r14, r22
 32a:	8a 01       	movw	r16, r20
 32c:	fc 01       	movw	r30, r24
 32e:	17 82       	std	Z+7, r1	; 0x07
 330:	16 82       	std	Z+6, r1	; 0x06
 332:	83 81       	ldd	r24, Z+3	; 0x03
 334:	81 ff       	sbrs	r24, 1
 336:	bf c1       	rjmp	.+894    	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 338:	ce 01       	movw	r24, r28
 33a:	01 96       	adiw	r24, 0x01	; 1
 33c:	3c 01       	movw	r6, r24
 33e:	f6 01       	movw	r30, r12
 340:	93 81       	ldd	r25, Z+3	; 0x03
 342:	f7 01       	movw	r30, r14
 344:	93 fd       	sbrc	r25, 3
 346:	85 91       	lpm	r24, Z+
 348:	93 ff       	sbrs	r25, 3
 34a:	81 91       	ld	r24, Z+
 34c:	7f 01       	movw	r14, r30
 34e:	88 23       	and	r24, r24
 350:	09 f4       	brne	.+2      	; 0x354 <vfprintf+0x62>
 352:	ad c1       	rjmp	.+858    	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 354:	85 32       	cpi	r24, 0x25	; 37
 356:	39 f4       	brne	.+14     	; 0x366 <vfprintf+0x74>
 358:	93 fd       	sbrc	r25, 3
 35a:	85 91       	lpm	r24, Z+
 35c:	93 ff       	sbrs	r25, 3
 35e:	81 91       	ld	r24, Z+
 360:	7f 01       	movw	r14, r30
 362:	85 32       	cpi	r24, 0x25	; 37
 364:	21 f4       	brne	.+8      	; 0x36e <vfprintf+0x7c>
 366:	b6 01       	movw	r22, r12
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	d6 d1       	rcall	.+940    	; 0x718 <fputc>
 36c:	e8 cf       	rjmp	.-48     	; 0x33e <vfprintf+0x4c>
 36e:	91 2c       	mov	r9, r1
 370:	21 2c       	mov	r2, r1
 372:	31 2c       	mov	r3, r1
 374:	ff e1       	ldi	r31, 0x1F	; 31
 376:	f3 15       	cp	r31, r3
 378:	d8 f0       	brcs	.+54     	; 0x3b0 <vfprintf+0xbe>
 37a:	8b 32       	cpi	r24, 0x2B	; 43
 37c:	79 f0       	breq	.+30     	; 0x39c <vfprintf+0xaa>
 37e:	38 f4       	brcc	.+14     	; 0x38e <vfprintf+0x9c>
 380:	80 32       	cpi	r24, 0x20	; 32
 382:	79 f0       	breq	.+30     	; 0x3a2 <vfprintf+0xb0>
 384:	83 32       	cpi	r24, 0x23	; 35
 386:	a1 f4       	brne	.+40     	; 0x3b0 <vfprintf+0xbe>
 388:	23 2d       	mov	r18, r3
 38a:	20 61       	ori	r18, 0x10	; 16
 38c:	1d c0       	rjmp	.+58     	; 0x3c8 <vfprintf+0xd6>
 38e:	8d 32       	cpi	r24, 0x2D	; 45
 390:	61 f0       	breq	.+24     	; 0x3aa <vfprintf+0xb8>
 392:	80 33       	cpi	r24, 0x30	; 48
 394:	69 f4       	brne	.+26     	; 0x3b0 <vfprintf+0xbe>
 396:	23 2d       	mov	r18, r3
 398:	21 60       	ori	r18, 0x01	; 1
 39a:	16 c0       	rjmp	.+44     	; 0x3c8 <vfprintf+0xd6>
 39c:	83 2d       	mov	r24, r3
 39e:	82 60       	ori	r24, 0x02	; 2
 3a0:	38 2e       	mov	r3, r24
 3a2:	e3 2d       	mov	r30, r3
 3a4:	e4 60       	ori	r30, 0x04	; 4
 3a6:	3e 2e       	mov	r3, r30
 3a8:	2a c0       	rjmp	.+84     	; 0x3fe <vfprintf+0x10c>
 3aa:	f3 2d       	mov	r31, r3
 3ac:	f8 60       	ori	r31, 0x08	; 8
 3ae:	1d c0       	rjmp	.+58     	; 0x3ea <vfprintf+0xf8>
 3b0:	37 fc       	sbrc	r3, 7
 3b2:	2d c0       	rjmp	.+90     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3b4:	20 ed       	ldi	r18, 0xD0	; 208
 3b6:	28 0f       	add	r18, r24
 3b8:	2a 30       	cpi	r18, 0x0A	; 10
 3ba:	40 f0       	brcs	.+16     	; 0x3cc <vfprintf+0xda>
 3bc:	8e 32       	cpi	r24, 0x2E	; 46
 3be:	b9 f4       	brne	.+46     	; 0x3ee <vfprintf+0xfc>
 3c0:	36 fc       	sbrc	r3, 6
 3c2:	75 c1       	rjmp	.+746    	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 3c4:	23 2d       	mov	r18, r3
 3c6:	20 64       	ori	r18, 0x40	; 64
 3c8:	32 2e       	mov	r3, r18
 3ca:	19 c0       	rjmp	.+50     	; 0x3fe <vfprintf+0x10c>
 3cc:	36 fe       	sbrs	r3, 6
 3ce:	06 c0       	rjmp	.+12     	; 0x3dc <vfprintf+0xea>
 3d0:	8a e0       	ldi	r24, 0x0A	; 10
 3d2:	98 9e       	mul	r9, r24
 3d4:	20 0d       	add	r18, r0
 3d6:	11 24       	eor	r1, r1
 3d8:	92 2e       	mov	r9, r18
 3da:	11 c0       	rjmp	.+34     	; 0x3fe <vfprintf+0x10c>
 3dc:	ea e0       	ldi	r30, 0x0A	; 10
 3de:	2e 9e       	mul	r2, r30
 3e0:	20 0d       	add	r18, r0
 3e2:	11 24       	eor	r1, r1
 3e4:	22 2e       	mov	r2, r18
 3e6:	f3 2d       	mov	r31, r3
 3e8:	f0 62       	ori	r31, 0x20	; 32
 3ea:	3f 2e       	mov	r3, r31
 3ec:	08 c0       	rjmp	.+16     	; 0x3fe <vfprintf+0x10c>
 3ee:	8c 36       	cpi	r24, 0x6C	; 108
 3f0:	21 f4       	brne	.+8      	; 0x3fa <vfprintf+0x108>
 3f2:	83 2d       	mov	r24, r3
 3f4:	80 68       	ori	r24, 0x80	; 128
 3f6:	38 2e       	mov	r3, r24
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <vfprintf+0x10c>
 3fa:	88 36       	cpi	r24, 0x68	; 104
 3fc:	41 f4       	brne	.+16     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3fe:	f7 01       	movw	r30, r14
 400:	93 fd       	sbrc	r25, 3
 402:	85 91       	lpm	r24, Z+
 404:	93 ff       	sbrs	r25, 3
 406:	81 91       	ld	r24, Z+
 408:	7f 01       	movw	r14, r30
 40a:	81 11       	cpse	r24, r1
 40c:	b3 cf       	rjmp	.-154    	; 0x374 <vfprintf+0x82>
 40e:	98 2f       	mov	r25, r24
 410:	9f 7d       	andi	r25, 0xDF	; 223
 412:	95 54       	subi	r25, 0x45	; 69
 414:	93 30       	cpi	r25, 0x03	; 3
 416:	28 f4       	brcc	.+10     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 418:	0c 5f       	subi	r16, 0xFC	; 252
 41a:	1f 4f       	sbci	r17, 0xFF	; 255
 41c:	9f e3       	ldi	r25, 0x3F	; 63
 41e:	99 83       	std	Y+1, r25	; 0x01
 420:	0d c0       	rjmp	.+26     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 422:	83 36       	cpi	r24, 0x63	; 99
 424:	31 f0       	breq	.+12     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 426:	83 37       	cpi	r24, 0x73	; 115
 428:	71 f0       	breq	.+28     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 42a:	83 35       	cpi	r24, 0x53	; 83
 42c:	09 f0       	breq	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42e:	55 c0       	rjmp	.+170    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 430:	20 c0       	rjmp	.+64     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 432:	f8 01       	movw	r30, r16
 434:	80 81       	ld	r24, Z
 436:	89 83       	std	Y+1, r24	; 0x01
 438:	0e 5f       	subi	r16, 0xFE	; 254
 43a:	1f 4f       	sbci	r17, 0xFF	; 255
 43c:	88 24       	eor	r8, r8
 43e:	83 94       	inc	r8
 440:	91 2c       	mov	r9, r1
 442:	53 01       	movw	r10, r6
 444:	12 c0       	rjmp	.+36     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 446:	28 01       	movw	r4, r16
 448:	f2 e0       	ldi	r31, 0x02	; 2
 44a:	4f 0e       	add	r4, r31
 44c:	51 1c       	adc	r5, r1
 44e:	f8 01       	movw	r30, r16
 450:	a0 80       	ld	r10, Z
 452:	b1 80       	ldd	r11, Z+1	; 0x01
 454:	36 fe       	sbrs	r3, 6
 456:	03 c0       	rjmp	.+6      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 458:	69 2d       	mov	r22, r9
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	02 c0       	rjmp	.+4      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45e:	6f ef       	ldi	r22, 0xFF	; 255
 460:	7f ef       	ldi	r23, 0xFF	; 255
 462:	c5 01       	movw	r24, r10
 464:	4e d1       	rcall	.+668    	; 0x702 <strnlen>
 466:	4c 01       	movw	r8, r24
 468:	82 01       	movw	r16, r4
 46a:	f3 2d       	mov	r31, r3
 46c:	ff 77       	andi	r31, 0x7F	; 127
 46e:	3f 2e       	mov	r3, r31
 470:	15 c0       	rjmp	.+42     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 472:	28 01       	movw	r4, r16
 474:	22 e0       	ldi	r18, 0x02	; 2
 476:	42 0e       	add	r4, r18
 478:	51 1c       	adc	r5, r1
 47a:	f8 01       	movw	r30, r16
 47c:	a0 80       	ld	r10, Z
 47e:	b1 80       	ldd	r11, Z+1	; 0x01
 480:	36 fe       	sbrs	r3, 6
 482:	03 c0       	rjmp	.+6      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 484:	69 2d       	mov	r22, r9
 486:	70 e0       	ldi	r23, 0x00	; 0
 488:	02 c0       	rjmp	.+4      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 48a:	6f ef       	ldi	r22, 0xFF	; 255
 48c:	7f ef       	ldi	r23, 0xFF	; 255
 48e:	c5 01       	movw	r24, r10
 490:	2d d1       	rcall	.+602    	; 0x6ec <strnlen_P>
 492:	4c 01       	movw	r8, r24
 494:	f3 2d       	mov	r31, r3
 496:	f0 68       	ori	r31, 0x80	; 128
 498:	3f 2e       	mov	r3, r31
 49a:	82 01       	movw	r16, r4
 49c:	33 fc       	sbrc	r3, 3
 49e:	19 c0       	rjmp	.+50     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4a0:	82 2d       	mov	r24, r2
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	88 16       	cp	r8, r24
 4a6:	99 06       	cpc	r9, r25
 4a8:	a0 f4       	brcc	.+40     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4aa:	b6 01       	movw	r22, r12
 4ac:	80 e2       	ldi	r24, 0x20	; 32
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	33 d1       	rcall	.+614    	; 0x718 <fputc>
 4b2:	2a 94       	dec	r2
 4b4:	f5 cf       	rjmp	.-22     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 4b6:	f5 01       	movw	r30, r10
 4b8:	37 fc       	sbrc	r3, 7
 4ba:	85 91       	lpm	r24, Z+
 4bc:	37 fe       	sbrs	r3, 7
 4be:	81 91       	ld	r24, Z+
 4c0:	5f 01       	movw	r10, r30
 4c2:	b6 01       	movw	r22, r12
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	28 d1       	rcall	.+592    	; 0x718 <fputc>
 4c8:	21 10       	cpse	r2, r1
 4ca:	2a 94       	dec	r2
 4cc:	21 e0       	ldi	r18, 0x01	; 1
 4ce:	82 1a       	sub	r8, r18
 4d0:	91 08       	sbc	r9, r1
 4d2:	81 14       	cp	r8, r1
 4d4:	91 04       	cpc	r9, r1
 4d6:	79 f7       	brne	.-34     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4d8:	e1 c0       	rjmp	.+450    	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 4da:	84 36       	cpi	r24, 0x64	; 100
 4dc:	11 f0       	breq	.+4      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4de:	89 36       	cpi	r24, 0x69	; 105
 4e0:	39 f5       	brne	.+78     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 4e2:	f8 01       	movw	r30, r16
 4e4:	37 fe       	sbrs	r3, 7
 4e6:	07 c0       	rjmp	.+14     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4e8:	60 81       	ld	r22, Z
 4ea:	71 81       	ldd	r23, Z+1	; 0x01
 4ec:	82 81       	ldd	r24, Z+2	; 0x02
 4ee:	93 81       	ldd	r25, Z+3	; 0x03
 4f0:	0c 5f       	subi	r16, 0xFC	; 252
 4f2:	1f 4f       	sbci	r17, 0xFF	; 255
 4f4:	08 c0       	rjmp	.+16     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4f6:	60 81       	ld	r22, Z
 4f8:	71 81       	ldd	r23, Z+1	; 0x01
 4fa:	07 2e       	mov	r0, r23
 4fc:	00 0c       	add	r0, r0
 4fe:	88 0b       	sbc	r24, r24
 500:	99 0b       	sbc	r25, r25
 502:	0e 5f       	subi	r16, 0xFE	; 254
 504:	1f 4f       	sbci	r17, 0xFF	; 255
 506:	f3 2d       	mov	r31, r3
 508:	ff 76       	andi	r31, 0x6F	; 111
 50a:	3f 2e       	mov	r3, r31
 50c:	97 ff       	sbrs	r25, 7
 50e:	09 c0       	rjmp	.+18     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 510:	90 95       	com	r25
 512:	80 95       	com	r24
 514:	70 95       	com	r23
 516:	61 95       	neg	r22
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	8f 4f       	sbci	r24, 0xFF	; 255
 51c:	9f 4f       	sbci	r25, 0xFF	; 255
 51e:	f0 68       	ori	r31, 0x80	; 128
 520:	3f 2e       	mov	r3, r31
 522:	2a e0       	ldi	r18, 0x0A	; 10
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	a3 01       	movw	r20, r6
 528:	33 d1       	rcall	.+614    	; 0x790 <__ultoa_invert>
 52a:	88 2e       	mov	r8, r24
 52c:	86 18       	sub	r8, r6
 52e:	44 c0       	rjmp	.+136    	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 530:	85 37       	cpi	r24, 0x75	; 117
 532:	31 f4       	brne	.+12     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 534:	23 2d       	mov	r18, r3
 536:	2f 7e       	andi	r18, 0xEF	; 239
 538:	b2 2e       	mov	r11, r18
 53a:	2a e0       	ldi	r18, 0x0A	; 10
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	25 c0       	rjmp	.+74     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 540:	93 2d       	mov	r25, r3
 542:	99 7f       	andi	r25, 0xF9	; 249
 544:	b9 2e       	mov	r11, r25
 546:	8f 36       	cpi	r24, 0x6F	; 111
 548:	c1 f0       	breq	.+48     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 54a:	18 f4       	brcc	.+6      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 54c:	88 35       	cpi	r24, 0x58	; 88
 54e:	79 f0       	breq	.+30     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 550:	ae c0       	rjmp	.+348    	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 552:	80 37       	cpi	r24, 0x70	; 112
 554:	19 f0       	breq	.+6      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 556:	88 37       	cpi	r24, 0x78	; 120
 558:	21 f0       	breq	.+8      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 55a:	a9 c0       	rjmp	.+338    	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 55c:	e9 2f       	mov	r30, r25
 55e:	e0 61       	ori	r30, 0x10	; 16
 560:	be 2e       	mov	r11, r30
 562:	b4 fe       	sbrs	r11, 4
 564:	0d c0       	rjmp	.+26     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 566:	fb 2d       	mov	r31, r11
 568:	f4 60       	ori	r31, 0x04	; 4
 56a:	bf 2e       	mov	r11, r31
 56c:	09 c0       	rjmp	.+18     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 56e:	34 fe       	sbrs	r3, 4
 570:	0a c0       	rjmp	.+20     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 572:	29 2f       	mov	r18, r25
 574:	26 60       	ori	r18, 0x06	; 6
 576:	b2 2e       	mov	r11, r18
 578:	06 c0       	rjmp	.+12     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 57a:	28 e0       	ldi	r18, 0x08	; 8
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	05 c0       	rjmp	.+10     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 580:	20 e1       	ldi	r18, 0x10	; 16
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	02 c0       	rjmp	.+4      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 586:	20 e1       	ldi	r18, 0x10	; 16
 588:	32 e0       	ldi	r19, 0x02	; 2
 58a:	f8 01       	movw	r30, r16
 58c:	b7 fe       	sbrs	r11, 7
 58e:	07 c0       	rjmp	.+14     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 590:	60 81       	ld	r22, Z
 592:	71 81       	ldd	r23, Z+1	; 0x01
 594:	82 81       	ldd	r24, Z+2	; 0x02
 596:	93 81       	ldd	r25, Z+3	; 0x03
 598:	0c 5f       	subi	r16, 0xFC	; 252
 59a:	1f 4f       	sbci	r17, 0xFF	; 255
 59c:	06 c0       	rjmp	.+12     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 59e:	60 81       	ld	r22, Z
 5a0:	71 81       	ldd	r23, Z+1	; 0x01
 5a2:	80 e0       	ldi	r24, 0x00	; 0
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 5f       	subi	r16, 0xFE	; 254
 5a8:	1f 4f       	sbci	r17, 0xFF	; 255
 5aa:	a3 01       	movw	r20, r6
 5ac:	f1 d0       	rcall	.+482    	; 0x790 <__ultoa_invert>
 5ae:	88 2e       	mov	r8, r24
 5b0:	86 18       	sub	r8, r6
 5b2:	fb 2d       	mov	r31, r11
 5b4:	ff 77       	andi	r31, 0x7F	; 127
 5b6:	3f 2e       	mov	r3, r31
 5b8:	36 fe       	sbrs	r3, 6
 5ba:	0d c0       	rjmp	.+26     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5bc:	23 2d       	mov	r18, r3
 5be:	2e 7f       	andi	r18, 0xFE	; 254
 5c0:	a2 2e       	mov	r10, r18
 5c2:	89 14       	cp	r8, r9
 5c4:	58 f4       	brcc	.+22     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5c6:	34 fe       	sbrs	r3, 4
 5c8:	0b c0       	rjmp	.+22     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5ca:	32 fc       	sbrc	r3, 2
 5cc:	09 c0       	rjmp	.+18     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5ce:	83 2d       	mov	r24, r3
 5d0:	8e 7e       	andi	r24, 0xEE	; 238
 5d2:	a8 2e       	mov	r10, r24
 5d4:	05 c0       	rjmp	.+10     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5d6:	b8 2c       	mov	r11, r8
 5d8:	a3 2c       	mov	r10, r3
 5da:	03 c0       	rjmp	.+6      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5dc:	b8 2c       	mov	r11, r8
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5e0:	b9 2c       	mov	r11, r9
 5e2:	a4 fe       	sbrs	r10, 4
 5e4:	0f c0       	rjmp	.+30     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5e6:	fe 01       	movw	r30, r28
 5e8:	e8 0d       	add	r30, r8
 5ea:	f1 1d       	adc	r31, r1
 5ec:	80 81       	ld	r24, Z
 5ee:	80 33       	cpi	r24, 0x30	; 48
 5f0:	21 f4       	brne	.+8      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f2:	9a 2d       	mov	r25, r10
 5f4:	99 7e       	andi	r25, 0xE9	; 233
 5f6:	a9 2e       	mov	r10, r25
 5f8:	09 c0       	rjmp	.+18     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5fa:	a2 fe       	sbrs	r10, 2
 5fc:	06 c0       	rjmp	.+12     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5fe:	b3 94       	inc	r11
 600:	b3 94       	inc	r11
 602:	04 c0       	rjmp	.+8      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 604:	8a 2d       	mov	r24, r10
 606:	86 78       	andi	r24, 0x86	; 134
 608:	09 f0       	breq	.+2      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 60a:	b3 94       	inc	r11
 60c:	a3 fc       	sbrc	r10, 3
 60e:	10 c0       	rjmp	.+32     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 610:	a0 fe       	sbrs	r10, 0
 612:	06 c0       	rjmp	.+12     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 614:	b2 14       	cp	r11, r2
 616:	80 f4       	brcc	.+32     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 618:	28 0c       	add	r2, r8
 61a:	92 2c       	mov	r9, r2
 61c:	9b 18       	sub	r9, r11
 61e:	0d c0       	rjmp	.+26     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 620:	b2 14       	cp	r11, r2
 622:	58 f4       	brcc	.+22     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 624:	b6 01       	movw	r22, r12
 626:	80 e2       	ldi	r24, 0x20	; 32
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	76 d0       	rcall	.+236    	; 0x718 <fputc>
 62c:	b3 94       	inc	r11
 62e:	f8 cf       	rjmp	.-16     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 630:	b2 14       	cp	r11, r2
 632:	18 f4       	brcc	.+6      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 634:	2b 18       	sub	r2, r11
 636:	02 c0       	rjmp	.+4      	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 638:	98 2c       	mov	r9, r8
 63a:	21 2c       	mov	r2, r1
 63c:	a4 fe       	sbrs	r10, 4
 63e:	0f c0       	rjmp	.+30     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 640:	b6 01       	movw	r22, r12
 642:	80 e3       	ldi	r24, 0x30	; 48
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	68 d0       	rcall	.+208    	; 0x718 <fputc>
 648:	a2 fe       	sbrs	r10, 2
 64a:	16 c0       	rjmp	.+44     	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 64c:	a1 fc       	sbrc	r10, 1
 64e:	03 c0       	rjmp	.+6      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 650:	88 e7       	ldi	r24, 0x78	; 120
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	02 c0       	rjmp	.+4      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 656:	88 e5       	ldi	r24, 0x58	; 88
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	b6 01       	movw	r22, r12
 65c:	0c c0       	rjmp	.+24     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 65e:	8a 2d       	mov	r24, r10
 660:	86 78       	andi	r24, 0x86	; 134
 662:	51 f0       	breq	.+20     	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 664:	a1 fe       	sbrs	r10, 1
 666:	02 c0       	rjmp	.+4      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 668:	8b e2       	ldi	r24, 0x2B	; 43
 66a:	01 c0       	rjmp	.+2      	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 66c:	80 e2       	ldi	r24, 0x20	; 32
 66e:	a7 fc       	sbrc	r10, 7
 670:	8d e2       	ldi	r24, 0x2D	; 45
 672:	b6 01       	movw	r22, r12
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	50 d0       	rcall	.+160    	; 0x718 <fputc>
 678:	89 14       	cp	r8, r9
 67a:	30 f4       	brcc	.+12     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 67c:	b6 01       	movw	r22, r12
 67e:	80 e3       	ldi	r24, 0x30	; 48
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	4a d0       	rcall	.+148    	; 0x718 <fputc>
 684:	9a 94       	dec	r9
 686:	f8 cf       	rjmp	.-16     	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 688:	8a 94       	dec	r8
 68a:	f3 01       	movw	r30, r6
 68c:	e8 0d       	add	r30, r8
 68e:	f1 1d       	adc	r31, r1
 690:	80 81       	ld	r24, Z
 692:	b6 01       	movw	r22, r12
 694:	90 e0       	ldi	r25, 0x00	; 0
 696:	40 d0       	rcall	.+128    	; 0x718 <fputc>
 698:	81 10       	cpse	r8, r1
 69a:	f6 cf       	rjmp	.-20     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 69c:	22 20       	and	r2, r2
 69e:	09 f4       	brne	.+2      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 6a0:	4e ce       	rjmp	.-868    	; 0x33e <vfprintf+0x4c>
 6a2:	b6 01       	movw	r22, r12
 6a4:	80 e2       	ldi	r24, 0x20	; 32
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	37 d0       	rcall	.+110    	; 0x718 <fputc>
 6aa:	2a 94       	dec	r2
 6ac:	f7 cf       	rjmp	.-18     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 6ae:	f6 01       	movw	r30, r12
 6b0:	86 81       	ldd	r24, Z+6	; 0x06
 6b2:	97 81       	ldd	r25, Z+7	; 0x07
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6b6:	8f ef       	ldi	r24, 0xFF	; 255
 6b8:	9f ef       	ldi	r25, 0xFF	; 255
 6ba:	2b 96       	adiw	r28, 0x0b	; 11
 6bc:	0f b6       	in	r0, 0x3f	; 63
 6be:	f8 94       	cli
 6c0:	de bf       	out	0x3e, r29	; 62
 6c2:	0f be       	out	0x3f, r0	; 63
 6c4:	cd bf       	out	0x3d, r28	; 61
 6c6:	df 91       	pop	r29
 6c8:	cf 91       	pop	r28
 6ca:	1f 91       	pop	r17
 6cc:	0f 91       	pop	r16
 6ce:	ff 90       	pop	r15
 6d0:	ef 90       	pop	r14
 6d2:	df 90       	pop	r13
 6d4:	cf 90       	pop	r12
 6d6:	bf 90       	pop	r11
 6d8:	af 90       	pop	r10
 6da:	9f 90       	pop	r9
 6dc:	8f 90       	pop	r8
 6de:	7f 90       	pop	r7
 6e0:	6f 90       	pop	r6
 6e2:	5f 90       	pop	r5
 6e4:	4f 90       	pop	r4
 6e6:	3f 90       	pop	r3
 6e8:	2f 90       	pop	r2
 6ea:	08 95       	ret

000006ec <strnlen_P>:
 6ec:	fc 01       	movw	r30, r24
 6ee:	05 90       	lpm	r0, Z+
 6f0:	61 50       	subi	r22, 0x01	; 1
 6f2:	70 40       	sbci	r23, 0x00	; 0
 6f4:	01 10       	cpse	r0, r1
 6f6:	d8 f7       	brcc	.-10     	; 0x6ee <strnlen_P+0x2>
 6f8:	80 95       	com	r24
 6fa:	90 95       	com	r25
 6fc:	8e 0f       	add	r24, r30
 6fe:	9f 1f       	adc	r25, r31
 700:	08 95       	ret

00000702 <strnlen>:
 702:	fc 01       	movw	r30, r24
 704:	61 50       	subi	r22, 0x01	; 1
 706:	70 40       	sbci	r23, 0x00	; 0
 708:	01 90       	ld	r0, Z+
 70a:	01 10       	cpse	r0, r1
 70c:	d8 f7       	brcc	.-10     	; 0x704 <strnlen+0x2>
 70e:	80 95       	com	r24
 710:	90 95       	com	r25
 712:	8e 0f       	add	r24, r30
 714:	9f 1f       	adc	r25, r31
 716:	08 95       	ret

00000718 <fputc>:
 718:	0f 93       	push	r16
 71a:	1f 93       	push	r17
 71c:	cf 93       	push	r28
 71e:	df 93       	push	r29
 720:	fb 01       	movw	r30, r22
 722:	23 81       	ldd	r18, Z+3	; 0x03
 724:	21 fd       	sbrc	r18, 1
 726:	03 c0       	rjmp	.+6      	; 0x72e <fputc+0x16>
 728:	8f ef       	ldi	r24, 0xFF	; 255
 72a:	9f ef       	ldi	r25, 0xFF	; 255
 72c:	2c c0       	rjmp	.+88     	; 0x786 <fputc+0x6e>
 72e:	22 ff       	sbrs	r18, 2
 730:	16 c0       	rjmp	.+44     	; 0x75e <fputc+0x46>
 732:	46 81       	ldd	r20, Z+6	; 0x06
 734:	57 81       	ldd	r21, Z+7	; 0x07
 736:	24 81       	ldd	r18, Z+4	; 0x04
 738:	35 81       	ldd	r19, Z+5	; 0x05
 73a:	42 17       	cp	r20, r18
 73c:	53 07       	cpc	r21, r19
 73e:	44 f4       	brge	.+16     	; 0x750 <fputc+0x38>
 740:	a0 81       	ld	r26, Z
 742:	b1 81       	ldd	r27, Z+1	; 0x01
 744:	9d 01       	movw	r18, r26
 746:	2f 5f       	subi	r18, 0xFF	; 255
 748:	3f 4f       	sbci	r19, 0xFF	; 255
 74a:	31 83       	std	Z+1, r19	; 0x01
 74c:	20 83       	st	Z, r18
 74e:	8c 93       	st	X, r24
 750:	26 81       	ldd	r18, Z+6	; 0x06
 752:	37 81       	ldd	r19, Z+7	; 0x07
 754:	2f 5f       	subi	r18, 0xFF	; 255
 756:	3f 4f       	sbci	r19, 0xFF	; 255
 758:	37 83       	std	Z+7, r19	; 0x07
 75a:	26 83       	std	Z+6, r18	; 0x06
 75c:	14 c0       	rjmp	.+40     	; 0x786 <fputc+0x6e>
 75e:	8b 01       	movw	r16, r22
 760:	ec 01       	movw	r28, r24
 762:	fb 01       	movw	r30, r22
 764:	00 84       	ldd	r0, Z+8	; 0x08
 766:	f1 85       	ldd	r31, Z+9	; 0x09
 768:	e0 2d       	mov	r30, r0
 76a:	09 95       	icall
 76c:	89 2b       	or	r24, r25
 76e:	e1 f6       	brne	.-72     	; 0x728 <fputc+0x10>
 770:	d8 01       	movw	r26, r16
 772:	16 96       	adiw	r26, 0x06	; 6
 774:	8d 91       	ld	r24, X+
 776:	9c 91       	ld	r25, X
 778:	17 97       	sbiw	r26, 0x07	; 7
 77a:	01 96       	adiw	r24, 0x01	; 1
 77c:	17 96       	adiw	r26, 0x07	; 7
 77e:	9c 93       	st	X, r25
 780:	8e 93       	st	-X, r24
 782:	16 97       	sbiw	r26, 0x06	; 6
 784:	ce 01       	movw	r24, r28
 786:	df 91       	pop	r29
 788:	cf 91       	pop	r28
 78a:	1f 91       	pop	r17
 78c:	0f 91       	pop	r16
 78e:	08 95       	ret

00000790 <__ultoa_invert>:
 790:	fa 01       	movw	r30, r20
 792:	aa 27       	eor	r26, r26
 794:	28 30       	cpi	r18, 0x08	; 8
 796:	51 f1       	breq	.+84     	; 0x7ec <__ultoa_invert+0x5c>
 798:	20 31       	cpi	r18, 0x10	; 16
 79a:	81 f1       	breq	.+96     	; 0x7fc <__ultoa_invert+0x6c>
 79c:	e8 94       	clt
 79e:	6f 93       	push	r22
 7a0:	6e 7f       	andi	r22, 0xFE	; 254
 7a2:	6e 5f       	subi	r22, 0xFE	; 254
 7a4:	7f 4f       	sbci	r23, 0xFF	; 255
 7a6:	8f 4f       	sbci	r24, 0xFF	; 255
 7a8:	9f 4f       	sbci	r25, 0xFF	; 255
 7aa:	af 4f       	sbci	r26, 0xFF	; 255
 7ac:	b1 e0       	ldi	r27, 0x01	; 1
 7ae:	3e d0       	rcall	.+124    	; 0x82c <__ultoa_invert+0x9c>
 7b0:	b4 e0       	ldi	r27, 0x04	; 4
 7b2:	3c d0       	rcall	.+120    	; 0x82c <__ultoa_invert+0x9c>
 7b4:	67 0f       	add	r22, r23
 7b6:	78 1f       	adc	r23, r24
 7b8:	89 1f       	adc	r24, r25
 7ba:	9a 1f       	adc	r25, r26
 7bc:	a1 1d       	adc	r26, r1
 7be:	68 0f       	add	r22, r24
 7c0:	79 1f       	adc	r23, r25
 7c2:	8a 1f       	adc	r24, r26
 7c4:	91 1d       	adc	r25, r1
 7c6:	a1 1d       	adc	r26, r1
 7c8:	6a 0f       	add	r22, r26
 7ca:	71 1d       	adc	r23, r1
 7cc:	81 1d       	adc	r24, r1
 7ce:	91 1d       	adc	r25, r1
 7d0:	a1 1d       	adc	r26, r1
 7d2:	20 d0       	rcall	.+64     	; 0x814 <__ultoa_invert+0x84>
 7d4:	09 f4       	brne	.+2      	; 0x7d8 <__ultoa_invert+0x48>
 7d6:	68 94       	set
 7d8:	3f 91       	pop	r19
 7da:	2a e0       	ldi	r18, 0x0A	; 10
 7dc:	26 9f       	mul	r18, r22
 7de:	11 24       	eor	r1, r1
 7e0:	30 19       	sub	r19, r0
 7e2:	30 5d       	subi	r19, 0xD0	; 208
 7e4:	31 93       	st	Z+, r19
 7e6:	de f6       	brtc	.-74     	; 0x79e <__ultoa_invert+0xe>
 7e8:	cf 01       	movw	r24, r30
 7ea:	08 95       	ret
 7ec:	46 2f       	mov	r20, r22
 7ee:	47 70       	andi	r20, 0x07	; 7
 7f0:	40 5d       	subi	r20, 0xD0	; 208
 7f2:	41 93       	st	Z+, r20
 7f4:	b3 e0       	ldi	r27, 0x03	; 3
 7f6:	0f d0       	rcall	.+30     	; 0x816 <__ultoa_invert+0x86>
 7f8:	c9 f7       	brne	.-14     	; 0x7ec <__ultoa_invert+0x5c>
 7fa:	f6 cf       	rjmp	.-20     	; 0x7e8 <__ultoa_invert+0x58>
 7fc:	46 2f       	mov	r20, r22
 7fe:	4f 70       	andi	r20, 0x0F	; 15
 800:	40 5d       	subi	r20, 0xD0	; 208
 802:	4a 33       	cpi	r20, 0x3A	; 58
 804:	18 f0       	brcs	.+6      	; 0x80c <__ultoa_invert+0x7c>
 806:	49 5d       	subi	r20, 0xD9	; 217
 808:	31 fd       	sbrc	r19, 1
 80a:	40 52       	subi	r20, 0x20	; 32
 80c:	41 93       	st	Z+, r20
 80e:	02 d0       	rcall	.+4      	; 0x814 <__ultoa_invert+0x84>
 810:	a9 f7       	brne	.-22     	; 0x7fc <__ultoa_invert+0x6c>
 812:	ea cf       	rjmp	.-44     	; 0x7e8 <__ultoa_invert+0x58>
 814:	b4 e0       	ldi	r27, 0x04	; 4
 816:	a6 95       	lsr	r26
 818:	97 95       	ror	r25
 81a:	87 95       	ror	r24
 81c:	77 95       	ror	r23
 81e:	67 95       	ror	r22
 820:	ba 95       	dec	r27
 822:	c9 f7       	brne	.-14     	; 0x816 <__ultoa_invert+0x86>
 824:	00 97       	sbiw	r24, 0x00	; 0
 826:	61 05       	cpc	r22, r1
 828:	71 05       	cpc	r23, r1
 82a:	08 95       	ret
 82c:	9b 01       	movw	r18, r22
 82e:	ac 01       	movw	r20, r24
 830:	0a 2e       	mov	r0, r26
 832:	06 94       	lsr	r0
 834:	57 95       	ror	r21
 836:	47 95       	ror	r20
 838:	37 95       	ror	r19
 83a:	27 95       	ror	r18
 83c:	ba 95       	dec	r27
 83e:	c9 f7       	brne	.-14     	; 0x832 <__ultoa_invert+0xa2>
 840:	62 0f       	add	r22, r18
 842:	73 1f       	adc	r23, r19
 844:	84 1f       	adc	r24, r20
 846:	95 1f       	adc	r25, r21
 848:	a0 1d       	adc	r26, r0
 84a:	08 95       	ret

0000084c <_exit>:
 84c:	f8 94       	cli

0000084e <__stop_program>:
 84e:	ff cf       	rjmp	.-2      	; 0x84e <__stop_program>
