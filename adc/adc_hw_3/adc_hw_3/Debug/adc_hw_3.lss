
adc_hw_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  0000086c  00000900  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000086c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800144  00800144  00000944  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000009e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f52  00000000  00000000  00000aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c0a  00000000  00000000  000019fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000772  00000000  00000000  00002604  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  00002d78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000545  00000000  00000000  00002f04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003b8  00000000  00000000  00003449  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003801  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	9d c0       	rjmp	.+314    	; 0x150 <__vector_5>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	eb c0       	rjmp	.+470    	; 0x220 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e6       	ldi	r30, 0x6C	; 108
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 34       	cpi	r26, 0x44	; 68
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e4       	ldi	r26, 0x44	; 68
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 35       	cpi	r26, 0x56	; 86
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	7c d0       	rcall	.+248    	; 0x1bc <main>
  c4:	d1 c3       	rjmp	.+1954   	; 0x868 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <adc_init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	97 b1       	in	r25, 0x07	; 7
  ca:	90 64       	ori	r25, 0x40	; 64
  cc:	98 2b       	or	r25, r24
  ce:	97 b9       	out	0x07, r25	; 7
  d0:	96 b1       	in	r25, 0x06	; 6
  d2:	97 6e       	ori	r25, 0xE7	; 231
  d4:	96 b9       	out	0x06, r25	; 6
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <cur_ch+0x1>
  dc:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <cur_ch>
  e0:	08 95       	ret

000000e2 <adc_read>:
  e2:	34 9b       	sbis	0x06, 4	; 6
  e4:	fe cf       	rjmp	.-4      	; 0xe2 <adc_read>
  e6:	84 b1       	in	r24, 0x04	; 4
  e8:	95 b1       	in	r25, 0x05	; 5
  ea:	08 95       	ret

000000ec <print_both_adc_value>:
	printf("adc_value : %d\r\n", adc_value);
	_delay_ms(500);
}

void print_both_adc_value(int ch, int read_value) {
	if(ch == 0) {
  ec:	89 2b       	or	r24, r25
  ee:	29 f4       	brne	.+10     	; 0xfa <print_both_adc_value+0xe>
		adc1_value = read_value;
  f0:	70 93 45 01 	sts	0x0145, r23	; 0x800145 <__data_end+0x1>
  f4:	60 93 44 01 	sts	0x0144, r22	; 0x800144 <__data_end>
  f8:	04 c0       	rjmp	.+8      	; 0x102 <print_both_adc_value+0x16>
	}
	else {
		adc2_value = read_value;
  fa:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <adc2_value+0x1>
  fe:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <adc2_value>
	}

	printf("ADC0 : %d, ADC1 : %d\r\n", adc1_value, adc2_value);
 102:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <adc2_value+0x1>
 106:	8f 93       	push	r24
 108:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <adc2_value>
 10c:	8f 93       	push	r24
 10e:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__data_end+0x1>
 112:	8f 93       	push	r24
 114:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
 118:	8f 93       	push	r24
 11a:	8d e2       	ldi	r24, 0x2D	; 45
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	9f 93       	push	r25
 120:	8f 93       	push	r24
 122:	e2 d0       	rcall	.+452    	; 0x2e8 <printf>
}
 124:	0f 90       	pop	r0
 126:	0f 90       	pop	r0
 128:	0f 90       	pop	r0
 12a:	0f 90       	pop	r0
 12c:	0f 90       	pop	r0
 12e:	0f 90       	pop	r0
 130:	08 95       	ret

00000132 <adc_change_channel>:

void adc_change_channel(unsigned char ch) {
	ADMUX = ch | (1<<REFS0);
 132:	80 64       	ori	r24, 0x40	; 64
 134:	87 b9       	out	0x07, r24	; 7
 136:	8f e9       	ldi	r24, 0x9F	; 159
 138:	9f e0       	ldi	r25, 0x0F	; 15
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <adc_change_channel+0x8>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <adc_change_channel+0xe>
 140:	00 00       	nop
	_delay_ms(1);
	change_channel_flag = 1;
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <change_channel_flag+0x1>
 14a:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <change_channel_flag>
 14e:	08 95       	ret

00000150 <__vector_5>:

#include "interrupt.h"

volatile int flag;

ISR(INT4_vect) {
 150:	1f 92       	push	r1
 152:	0f 92       	push	r0
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	0f 92       	push	r0
 158:	11 24       	eor	r1, r1
 15a:	2f 93       	push	r18
 15c:	8f 93       	push	r24
 15e:	9f 93       	push	r25
 160:	2f ef       	ldi	r18, 0xFF	; 255
 162:	89 ef       	ldi	r24, 0xF9	; 249
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	21 50       	subi	r18, 0x01	; 1
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <__vector_5+0x16>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <__vector_5+0x20>
 170:	00 00       	nop
	_delay_ms(20);
	flag = 1;
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <flag+0x1>
 17a:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <flag>
	while(!(PINE & (1<<4)));
 17e:	0c 9b       	sbis	0x01, 4	; 1
 180:	fe cf       	rjmp	.-4      	; 0x17e <__vector_5+0x2e>
 182:	2f ef       	ldi	r18, 0xFF	; 255
 184:	89 ef       	ldi	r24, 0xF9	; 249
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	21 50       	subi	r18, 0x01	; 1
 18a:	80 40       	sbci	r24, 0x00	; 0
 18c:	90 40       	sbci	r25, 0x00	; 0
 18e:	e1 f7       	brne	.-8      	; 0x188 <__vector_5+0x38>
 190:	00 c0       	rjmp	.+0      	; 0x192 <__vector_5+0x42>
 192:	00 00       	nop
	_delay_ms(20);
	EIFR |= (1<<4);
 194:	88 b7       	in	r24, 0x38	; 56
 196:	80 61       	ori	r24, 0x10	; 16
 198:	88 bf       	out	0x38, r24	; 56
}
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	2f 91       	pop	r18
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <int4_init>:

void int4_init(void) {
	PORTE |= (1<<4);
 1aa:	1c 9a       	sbi	0x03, 4	; 3
	EIMSK |= (1<<INT4);
 1ac:	89 b7       	in	r24, 0x39	; 57
 1ae:	80 61       	ori	r24, 0x10	; 16
 1b0:	89 bf       	out	0x39, r24	; 57
	EICRB |= (1<<ISC41);
 1b2:	8a b7       	in	r24, 0x3a	; 58
 1b4:	82 60       	ori	r24, 0x02	; 2
 1b6:	8a bf       	out	0x3a, r24	; 58
	sei();
 1b8:	78 94       	sei
 1ba:	08 95       	ret

000001bc <main>:
extern int cur_ch;

int main(void)
{
	int cnt = 0;
	int4_init();
 1bc:	f6 df       	rcall	.-20     	; 0x1aa <int4_init>
	uart0_init();
 1be:	7c d0       	rcall	.+248    	; 0x2b8 <uart0_init>
	adc_init(0x01);
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	82 df       	rcall	.-252    	; 0xc8 <adc_init>
 1c4:	11 e0       	ldi	r17, 0x01	; 1
    while (1) 
    {
		print_both_adc_value(cur_ch, adc_read());
		_delay_ms(30);
		if(++cnt == 50) {
			cur_ch = 1 ? cur_ch == 0 : cur_ch == 1;
 1c6:	00 e0       	ldi	r16, 0x00	; 0
#include "interrupt.h"

extern int cur_ch;

int main(void)
{
 1c8:	c2 e3       	ldi	r28, 0x32	; 50
 1ca:	d0 e0       	ldi	r29, 0x00	; 0
	uart0_init();
	adc_init(0x01);
	
    while (1) 
    {
		print_both_adc_value(cur_ch, adc_read());
 1cc:	8a df       	rcall	.-236    	; 0xe2 <adc_read>
 1ce:	bc 01       	movw	r22, r24
 1d0:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <cur_ch>
 1d4:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <cur_ch+0x1>
 1d8:	89 df       	rcall	.-238    	; 0xec <print_both_adc_value>
 1da:	2f ef       	ldi	r18, 0xFF	; 255
 1dc:	86 e7       	ldi	r24, 0x76	; 118
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	21 50       	subi	r18, 0x01	; 1
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0x24>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <main+0x2e>
 1ea:	00 00       	nop
 1ec:	21 97       	sbiw	r28, 0x01	; 1
 1ee:	71 f7       	brne	.-36     	; 0x1cc <main+0x10>
		_delay_ms(30);
		if(++cnt == 50) {
 1f0:	81 2f       	mov	r24, r17
			cur_ch = 1 ? cur_ch == 0 : cur_ch == 1;
 1f2:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <cur_ch>
 1f6:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <cur_ch+0x1>
 1fa:	23 2b       	or	r18, r19
 1fc:	09 f0       	breq	.+2      	; 0x200 <main+0x44>
 1fe:	80 2f       	mov	r24, r16
 200:	28 2f       	mov	r18, r24
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <cur_ch+0x1>
 208:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <cur_ch>
			adc_change_channel(cur_ch);
 20c:	92 df       	rcall	.-220    	; 0x132 <adc_change_channel>
 20e:	dc cf       	rjmp	.-72     	; 0x1c8 <main+0xc>

00000210 <uart0_trasnmit>:
	 stdin = &INPUT;
	 stdout = &OUTPUT;
 }

 void uart0_trasnmit(char data) {
	 while(!(UCSR0A & (1 << UDRE0)));
 210:	5d 9b       	sbis	0x0b, 5	; 11
 212:	fe cf       	rjmp	.-4      	; 0x210 <uart0_trasnmit>
	 UDR0 = data;
 214:	8c b9       	out	0x0c, r24	; 12
 216:	08 95       	ret

00000218 <uart0_receive>:
 }

 unsigned char uart0_receive(void) {
	 while(!(UCSR0A & (1 << RXC0)));
 218:	5f 9b       	sbis	0x0b, 7	; 11
 21a:	fe cf       	rjmp	.-4      	; 0x218 <uart0_receive>
	 return UDR0;
 21c:	8c b1       	in	r24, 0x0c	; 12
 }
 21e:	08 95       	ret

00000220 <__vector_18>:
FILE INPUT = FDEV_SETUP_STREAM(uart0_receive, NULL, _FDEV_SETUP_READ);

volatile int flag;
volatile int rxdata;

ISR(USART0_RX_vect) {
 220:	1f 92       	push	r1
 222:	0f 92       	push	r0
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	0f 92       	push	r0
 228:	11 24       	eor	r1, r1
 22a:	2f 93       	push	r18
 22c:	3f 93       	push	r19
 22e:	4f 93       	push	r20
 230:	5f 93       	push	r21
 232:	8f 93       	push	r24
 234:	9f 93       	push	r25
	unsigned char tmp = UDR0;
 236:	8c b1       	in	r24, 0x0c	; 12
	if(tmp >= '0' && tmp <= '9') {
 238:	90 ed       	ldi	r25, 0xD0	; 208
 23a:	98 0f       	add	r25, r24
 23c:	9a 30       	cpi	r25, 0x0A	; 10
 23e:	58 f5       	brcc	.+86     	; 0x296 <__vector_18+0x76>
		if(flag) {
 240:	20 91 4c 01 	lds	r18, 0x014C	; 0x80014c <flag>
 244:	30 91 4d 01 	lds	r19, 0x014D	; 0x80014d <flag+0x1>
 248:	23 2b       	or	r18, r19
 24a:	c1 f0       	breq	.+48     	; 0x27c <__vector_18+0x5c>
			rxdata = rxdata * 10 + tmp - '0';
 24c:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <rxdata>
 250:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <rxdata+0x1>
 254:	a9 01       	movw	r20, r18
 256:	44 0f       	add	r20, r20
 258:	55 1f       	adc	r21, r21
 25a:	22 0f       	add	r18, r18
 25c:	33 1f       	adc	r19, r19
 25e:	22 0f       	add	r18, r18
 260:	33 1f       	adc	r19, r19
 262:	22 0f       	add	r18, r18
 264:	33 1f       	adc	r19, r19
 266:	24 0f       	add	r18, r20
 268:	35 1f       	adc	r19, r21
 26a:	28 0f       	add	r18, r24
 26c:	31 1d       	adc	r19, r1
 26e:	20 53       	subi	r18, 0x30	; 48
 270:	31 09       	sbc	r19, r1
 272:	30 93 4f 01 	sts	0x014F, r19	; 0x80014f <rxdata+0x1>
 276:	20 93 4e 01 	sts	0x014E, r18	; 0x80014e <rxdata>
 27a:	13 c0       	rjmp	.+38     	; 0x2a2 <__vector_18+0x82>
		}
		else {
			rxdata = tmp - '0';
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	c0 97       	sbiw	r24, 0x30	; 48
 280:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <rxdata+0x1>
 284:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <rxdata>
			flag = 1;
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <flag+0x1>
 290:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <flag>
 294:	06 c0       	rjmp	.+12     	; 0x2a2 <__vector_18+0x82>
		}
	}
	else if(tmp == '\r') {
 296:	8d 30       	cpi	r24, 0x0D	; 13
 298:	21 f4       	brne	.+8      	; 0x2a2 <__vector_18+0x82>
		flag = 0;
 29a:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <flag+0x1>
 29e:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <flag>
	}
}
 2a2:	9f 91       	pop	r25
 2a4:	8f 91       	pop	r24
 2a6:	5f 91       	pop	r21
 2a8:	4f 91       	pop	r20
 2aa:	3f 91       	pop	r19
 2ac:	2f 91       	pop	r18
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <uart0_init>:

 void uart0_init(void) {
	 UBRR0H = 0x00;
 2b8:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	 UBRR0L = 16;
 2bc:	80 e1       	ldi	r24, 0x10	; 16
 2be:	89 b9       	out	0x09, r24	; 9
	 
	 UCSR0A |= (1<<U2X0);
 2c0:	59 9a       	sbi	0x0b, 1	; 11
	 UCSR0C |= 0x06;
 2c2:	e5 e9       	ldi	r30, 0x95	; 149
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	86 60       	ori	r24, 0x06	; 6
 2ca:	80 83       	st	Z, r24

	 UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
 2cc:	8a b1       	in	r24, 0x0a	; 10
 2ce:	88 61       	ori	r24, 0x18	; 24
 2d0:	8a b9       	out	0x0a, r24	; 10

	 stdin = &INPUT;
 2d2:	e0 e5       	ldi	r30, 0x50	; 80
 2d4:	f1 e0       	ldi	r31, 0x01	; 1
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	91 e0       	ldi	r25, 0x01	; 1
 2da:	91 83       	std	Z+1, r25	; 0x01
 2dc:	80 83       	st	Z, r24
	 stdout = &OUTPUT;
 2de:	8e e0       	ldi	r24, 0x0E	; 14
 2e0:	91 e0       	ldi	r25, 0x01	; 1
 2e2:	93 83       	std	Z+3, r25	; 0x03
 2e4:	82 83       	std	Z+2, r24	; 0x02
 2e6:	08 95       	ret

000002e8 <printf>:
 2e8:	cf 93       	push	r28
 2ea:	df 93       	push	r29
 2ec:	cd b7       	in	r28, 0x3d	; 61
 2ee:	de b7       	in	r29, 0x3e	; 62
 2f0:	ae 01       	movw	r20, r28
 2f2:	4b 5f       	subi	r20, 0xFB	; 251
 2f4:	5f 4f       	sbci	r21, 0xFF	; 255
 2f6:	fa 01       	movw	r30, r20
 2f8:	61 91       	ld	r22, Z+
 2fa:	71 91       	ld	r23, Z+
 2fc:	af 01       	movw	r20, r30
 2fe:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__iob+0x2>
 302:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <__iob+0x3>
 306:	03 d0       	rcall	.+6      	; 0x30e <vfprintf>
 308:	df 91       	pop	r29
 30a:	cf 91       	pop	r28
 30c:	08 95       	ret

0000030e <vfprintf>:
 30e:	2f 92       	push	r2
 310:	3f 92       	push	r3
 312:	4f 92       	push	r4
 314:	5f 92       	push	r5
 316:	6f 92       	push	r6
 318:	7f 92       	push	r7
 31a:	8f 92       	push	r8
 31c:	9f 92       	push	r9
 31e:	af 92       	push	r10
 320:	bf 92       	push	r11
 322:	cf 92       	push	r12
 324:	df 92       	push	r13
 326:	ef 92       	push	r14
 328:	ff 92       	push	r15
 32a:	0f 93       	push	r16
 32c:	1f 93       	push	r17
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	cd b7       	in	r28, 0x3d	; 61
 334:	de b7       	in	r29, 0x3e	; 62
 336:	2b 97       	sbiw	r28, 0x0b	; 11
 338:	0f b6       	in	r0, 0x3f	; 63
 33a:	f8 94       	cli
 33c:	de bf       	out	0x3e, r29	; 62
 33e:	0f be       	out	0x3f, r0	; 63
 340:	cd bf       	out	0x3d, r28	; 61
 342:	6c 01       	movw	r12, r24
 344:	7b 01       	movw	r14, r22
 346:	8a 01       	movw	r16, r20
 348:	fc 01       	movw	r30, r24
 34a:	17 82       	std	Z+7, r1	; 0x07
 34c:	16 82       	std	Z+6, r1	; 0x06
 34e:	83 81       	ldd	r24, Z+3	; 0x03
 350:	81 ff       	sbrs	r24, 1
 352:	bf c1       	rjmp	.+894    	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 354:	ce 01       	movw	r24, r28
 356:	01 96       	adiw	r24, 0x01	; 1
 358:	3c 01       	movw	r6, r24
 35a:	f6 01       	movw	r30, r12
 35c:	93 81       	ldd	r25, Z+3	; 0x03
 35e:	f7 01       	movw	r30, r14
 360:	93 fd       	sbrc	r25, 3
 362:	85 91       	lpm	r24, Z+
 364:	93 ff       	sbrs	r25, 3
 366:	81 91       	ld	r24, Z+
 368:	7f 01       	movw	r14, r30
 36a:	88 23       	and	r24, r24
 36c:	09 f4       	brne	.+2      	; 0x370 <vfprintf+0x62>
 36e:	ad c1       	rjmp	.+858    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 370:	85 32       	cpi	r24, 0x25	; 37
 372:	39 f4       	brne	.+14     	; 0x382 <vfprintf+0x74>
 374:	93 fd       	sbrc	r25, 3
 376:	85 91       	lpm	r24, Z+
 378:	93 ff       	sbrs	r25, 3
 37a:	81 91       	ld	r24, Z+
 37c:	7f 01       	movw	r14, r30
 37e:	85 32       	cpi	r24, 0x25	; 37
 380:	21 f4       	brne	.+8      	; 0x38a <vfprintf+0x7c>
 382:	b6 01       	movw	r22, r12
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	d6 d1       	rcall	.+940    	; 0x734 <fputc>
 388:	e8 cf       	rjmp	.-48     	; 0x35a <vfprintf+0x4c>
 38a:	91 2c       	mov	r9, r1
 38c:	21 2c       	mov	r2, r1
 38e:	31 2c       	mov	r3, r1
 390:	ff e1       	ldi	r31, 0x1F	; 31
 392:	f3 15       	cp	r31, r3
 394:	d8 f0       	brcs	.+54     	; 0x3cc <vfprintf+0xbe>
 396:	8b 32       	cpi	r24, 0x2B	; 43
 398:	79 f0       	breq	.+30     	; 0x3b8 <vfprintf+0xaa>
 39a:	38 f4       	brcc	.+14     	; 0x3aa <vfprintf+0x9c>
 39c:	80 32       	cpi	r24, 0x20	; 32
 39e:	79 f0       	breq	.+30     	; 0x3be <vfprintf+0xb0>
 3a0:	83 32       	cpi	r24, 0x23	; 35
 3a2:	a1 f4       	brne	.+40     	; 0x3cc <vfprintf+0xbe>
 3a4:	23 2d       	mov	r18, r3
 3a6:	20 61       	ori	r18, 0x10	; 16
 3a8:	1d c0       	rjmp	.+58     	; 0x3e4 <vfprintf+0xd6>
 3aa:	8d 32       	cpi	r24, 0x2D	; 45
 3ac:	61 f0       	breq	.+24     	; 0x3c6 <vfprintf+0xb8>
 3ae:	80 33       	cpi	r24, 0x30	; 48
 3b0:	69 f4       	brne	.+26     	; 0x3cc <vfprintf+0xbe>
 3b2:	23 2d       	mov	r18, r3
 3b4:	21 60       	ori	r18, 0x01	; 1
 3b6:	16 c0       	rjmp	.+44     	; 0x3e4 <vfprintf+0xd6>
 3b8:	83 2d       	mov	r24, r3
 3ba:	82 60       	ori	r24, 0x02	; 2
 3bc:	38 2e       	mov	r3, r24
 3be:	e3 2d       	mov	r30, r3
 3c0:	e4 60       	ori	r30, 0x04	; 4
 3c2:	3e 2e       	mov	r3, r30
 3c4:	2a c0       	rjmp	.+84     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3c6:	f3 2d       	mov	r31, r3
 3c8:	f8 60       	ori	r31, 0x08	; 8
 3ca:	1d c0       	rjmp	.+58     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3cc:	37 fc       	sbrc	r3, 7
 3ce:	2d c0       	rjmp	.+90     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3d0:	20 ed       	ldi	r18, 0xD0	; 208
 3d2:	28 0f       	add	r18, r24
 3d4:	2a 30       	cpi	r18, 0x0A	; 10
 3d6:	40 f0       	brcs	.+16     	; 0x3e8 <vfprintf+0xda>
 3d8:	8e 32       	cpi	r24, 0x2E	; 46
 3da:	b9 f4       	brne	.+46     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3dc:	36 fc       	sbrc	r3, 6
 3de:	75 c1       	rjmp	.+746    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 3e0:	23 2d       	mov	r18, r3
 3e2:	20 64       	ori	r18, 0x40	; 64
 3e4:	32 2e       	mov	r3, r18
 3e6:	19 c0       	rjmp	.+50     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3e8:	36 fe       	sbrs	r3, 6
 3ea:	06 c0       	rjmp	.+12     	; 0x3f8 <vfprintf+0xea>
 3ec:	8a e0       	ldi	r24, 0x0A	; 10
 3ee:	98 9e       	mul	r9, r24
 3f0:	20 0d       	add	r18, r0
 3f2:	11 24       	eor	r1, r1
 3f4:	92 2e       	mov	r9, r18
 3f6:	11 c0       	rjmp	.+34     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3f8:	ea e0       	ldi	r30, 0x0A	; 10
 3fa:	2e 9e       	mul	r2, r30
 3fc:	20 0d       	add	r18, r0
 3fe:	11 24       	eor	r1, r1
 400:	22 2e       	mov	r2, r18
 402:	f3 2d       	mov	r31, r3
 404:	f0 62       	ori	r31, 0x20	; 32
 406:	3f 2e       	mov	r3, r31
 408:	08 c0       	rjmp	.+16     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40a:	8c 36       	cpi	r24, 0x6C	; 108
 40c:	21 f4       	brne	.+8      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 40e:	83 2d       	mov	r24, r3
 410:	80 68       	ori	r24, 0x80	; 128
 412:	38 2e       	mov	r3, r24
 414:	02 c0       	rjmp	.+4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 416:	88 36       	cpi	r24, 0x68	; 104
 418:	41 f4       	brne	.+16     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41a:	f7 01       	movw	r30, r14
 41c:	93 fd       	sbrc	r25, 3
 41e:	85 91       	lpm	r24, Z+
 420:	93 ff       	sbrs	r25, 3
 422:	81 91       	ld	r24, Z+
 424:	7f 01       	movw	r14, r30
 426:	81 11       	cpse	r24, r1
 428:	b3 cf       	rjmp	.-154    	; 0x390 <vfprintf+0x82>
 42a:	98 2f       	mov	r25, r24
 42c:	9f 7d       	andi	r25, 0xDF	; 223
 42e:	95 54       	subi	r25, 0x45	; 69
 430:	93 30       	cpi	r25, 0x03	; 3
 432:	28 f4       	brcc	.+10     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 434:	0c 5f       	subi	r16, 0xFC	; 252
 436:	1f 4f       	sbci	r17, 0xFF	; 255
 438:	9f e3       	ldi	r25, 0x3F	; 63
 43a:	99 83       	std	Y+1, r25	; 0x01
 43c:	0d c0       	rjmp	.+26     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 43e:	83 36       	cpi	r24, 0x63	; 99
 440:	31 f0       	breq	.+12     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 442:	83 37       	cpi	r24, 0x73	; 115
 444:	71 f0       	breq	.+28     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 446:	83 35       	cpi	r24, 0x53	; 83
 448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 44a:	55 c0       	rjmp	.+170    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 44c:	20 c0       	rjmp	.+64     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 44e:	f8 01       	movw	r30, r16
 450:	80 81       	ld	r24, Z
 452:	89 83       	std	Y+1, r24	; 0x01
 454:	0e 5f       	subi	r16, 0xFE	; 254
 456:	1f 4f       	sbci	r17, 0xFF	; 255
 458:	88 24       	eor	r8, r8
 45a:	83 94       	inc	r8
 45c:	91 2c       	mov	r9, r1
 45e:	53 01       	movw	r10, r6
 460:	12 c0       	rjmp	.+36     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 462:	28 01       	movw	r4, r16
 464:	f2 e0       	ldi	r31, 0x02	; 2
 466:	4f 0e       	add	r4, r31
 468:	51 1c       	adc	r5, r1
 46a:	f8 01       	movw	r30, r16
 46c:	a0 80       	ld	r10, Z
 46e:	b1 80       	ldd	r11, Z+1	; 0x01
 470:	36 fe       	sbrs	r3, 6
 472:	03 c0       	rjmp	.+6      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 474:	69 2d       	mov	r22, r9
 476:	70 e0       	ldi	r23, 0x00	; 0
 478:	02 c0       	rjmp	.+4      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 47a:	6f ef       	ldi	r22, 0xFF	; 255
 47c:	7f ef       	ldi	r23, 0xFF	; 255
 47e:	c5 01       	movw	r24, r10
 480:	4e d1       	rcall	.+668    	; 0x71e <strnlen>
 482:	4c 01       	movw	r8, r24
 484:	82 01       	movw	r16, r4
 486:	f3 2d       	mov	r31, r3
 488:	ff 77       	andi	r31, 0x7F	; 127
 48a:	3f 2e       	mov	r3, r31
 48c:	15 c0       	rjmp	.+42     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 48e:	28 01       	movw	r4, r16
 490:	22 e0       	ldi	r18, 0x02	; 2
 492:	42 0e       	add	r4, r18
 494:	51 1c       	adc	r5, r1
 496:	f8 01       	movw	r30, r16
 498:	a0 80       	ld	r10, Z
 49a:	b1 80       	ldd	r11, Z+1	; 0x01
 49c:	36 fe       	sbrs	r3, 6
 49e:	03 c0       	rjmp	.+6      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 4a0:	69 2d       	mov	r22, r9
 4a2:	70 e0       	ldi	r23, 0x00	; 0
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a6:	6f ef       	ldi	r22, 0xFF	; 255
 4a8:	7f ef       	ldi	r23, 0xFF	; 255
 4aa:	c5 01       	movw	r24, r10
 4ac:	2d d1       	rcall	.+602    	; 0x708 <strnlen_P>
 4ae:	4c 01       	movw	r8, r24
 4b0:	f3 2d       	mov	r31, r3
 4b2:	f0 68       	ori	r31, 0x80	; 128
 4b4:	3f 2e       	mov	r3, r31
 4b6:	82 01       	movw	r16, r4
 4b8:	33 fc       	sbrc	r3, 3
 4ba:	19 c0       	rjmp	.+50     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4bc:	82 2d       	mov	r24, r2
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	88 16       	cp	r8, r24
 4c2:	99 06       	cpc	r9, r25
 4c4:	a0 f4       	brcc	.+40     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4c6:	b6 01       	movw	r22, r12
 4c8:	80 e2       	ldi	r24, 0x20	; 32
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	33 d1       	rcall	.+614    	; 0x734 <fputc>
 4ce:	2a 94       	dec	r2
 4d0:	f5 cf       	rjmp	.-22     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4d2:	f5 01       	movw	r30, r10
 4d4:	37 fc       	sbrc	r3, 7
 4d6:	85 91       	lpm	r24, Z+
 4d8:	37 fe       	sbrs	r3, 7
 4da:	81 91       	ld	r24, Z+
 4dc:	5f 01       	movw	r10, r30
 4de:	b6 01       	movw	r22, r12
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	28 d1       	rcall	.+592    	; 0x734 <fputc>
 4e4:	21 10       	cpse	r2, r1
 4e6:	2a 94       	dec	r2
 4e8:	21 e0       	ldi	r18, 0x01	; 1
 4ea:	82 1a       	sub	r8, r18
 4ec:	91 08       	sbc	r9, r1
 4ee:	81 14       	cp	r8, r1
 4f0:	91 04       	cpc	r9, r1
 4f2:	79 f7       	brne	.-34     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4f4:	e1 c0       	rjmp	.+450    	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 4f6:	84 36       	cpi	r24, 0x64	; 100
 4f8:	11 f0       	breq	.+4      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4fa:	89 36       	cpi	r24, 0x69	; 105
 4fc:	39 f5       	brne	.+78     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 4fe:	f8 01       	movw	r30, r16
 500:	37 fe       	sbrs	r3, 7
 502:	07 c0       	rjmp	.+14     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 504:	60 81       	ld	r22, Z
 506:	71 81       	ldd	r23, Z+1	; 0x01
 508:	82 81       	ldd	r24, Z+2	; 0x02
 50a:	93 81       	ldd	r25, Z+3	; 0x03
 50c:	0c 5f       	subi	r16, 0xFC	; 252
 50e:	1f 4f       	sbci	r17, 0xFF	; 255
 510:	08 c0       	rjmp	.+16     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 512:	60 81       	ld	r22, Z
 514:	71 81       	ldd	r23, Z+1	; 0x01
 516:	07 2e       	mov	r0, r23
 518:	00 0c       	add	r0, r0
 51a:	88 0b       	sbc	r24, r24
 51c:	99 0b       	sbc	r25, r25
 51e:	0e 5f       	subi	r16, 0xFE	; 254
 520:	1f 4f       	sbci	r17, 0xFF	; 255
 522:	f3 2d       	mov	r31, r3
 524:	ff 76       	andi	r31, 0x6F	; 111
 526:	3f 2e       	mov	r3, r31
 528:	97 ff       	sbrs	r25, 7
 52a:	09 c0       	rjmp	.+18     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 52c:	90 95       	com	r25
 52e:	80 95       	com	r24
 530:	70 95       	com	r23
 532:	61 95       	neg	r22
 534:	7f 4f       	sbci	r23, 0xFF	; 255
 536:	8f 4f       	sbci	r24, 0xFF	; 255
 538:	9f 4f       	sbci	r25, 0xFF	; 255
 53a:	f0 68       	ori	r31, 0x80	; 128
 53c:	3f 2e       	mov	r3, r31
 53e:	2a e0       	ldi	r18, 0x0A	; 10
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	a3 01       	movw	r20, r6
 544:	33 d1       	rcall	.+614    	; 0x7ac <__ultoa_invert>
 546:	88 2e       	mov	r8, r24
 548:	86 18       	sub	r8, r6
 54a:	44 c0       	rjmp	.+136    	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 54c:	85 37       	cpi	r24, 0x75	; 117
 54e:	31 f4       	brne	.+12     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 550:	23 2d       	mov	r18, r3
 552:	2f 7e       	andi	r18, 0xEF	; 239
 554:	b2 2e       	mov	r11, r18
 556:	2a e0       	ldi	r18, 0x0A	; 10
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	25 c0       	rjmp	.+74     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 55c:	93 2d       	mov	r25, r3
 55e:	99 7f       	andi	r25, 0xF9	; 249
 560:	b9 2e       	mov	r11, r25
 562:	8f 36       	cpi	r24, 0x6F	; 111
 564:	c1 f0       	breq	.+48     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 566:	18 f4       	brcc	.+6      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 568:	88 35       	cpi	r24, 0x58	; 88
 56a:	79 f0       	breq	.+30     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 56c:	ae c0       	rjmp	.+348    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 56e:	80 37       	cpi	r24, 0x70	; 112
 570:	19 f0       	breq	.+6      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 572:	88 37       	cpi	r24, 0x78	; 120
 574:	21 f0       	breq	.+8      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 576:	a9 c0       	rjmp	.+338    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 578:	e9 2f       	mov	r30, r25
 57a:	e0 61       	ori	r30, 0x10	; 16
 57c:	be 2e       	mov	r11, r30
 57e:	b4 fe       	sbrs	r11, 4
 580:	0d c0       	rjmp	.+26     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 582:	fb 2d       	mov	r31, r11
 584:	f4 60       	ori	r31, 0x04	; 4
 586:	bf 2e       	mov	r11, r31
 588:	09 c0       	rjmp	.+18     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 58a:	34 fe       	sbrs	r3, 4
 58c:	0a c0       	rjmp	.+20     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 58e:	29 2f       	mov	r18, r25
 590:	26 60       	ori	r18, 0x06	; 6
 592:	b2 2e       	mov	r11, r18
 594:	06 c0       	rjmp	.+12     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 596:	28 e0       	ldi	r18, 0x08	; 8
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	05 c0       	rjmp	.+10     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 59c:	20 e1       	ldi	r18, 0x10	; 16
 59e:	30 e0       	ldi	r19, 0x00	; 0
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 5a2:	20 e1       	ldi	r18, 0x10	; 16
 5a4:	32 e0       	ldi	r19, 0x02	; 2
 5a6:	f8 01       	movw	r30, r16
 5a8:	b7 fe       	sbrs	r11, 7
 5aa:	07 c0       	rjmp	.+14     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ac:	60 81       	ld	r22, Z
 5ae:	71 81       	ldd	r23, Z+1	; 0x01
 5b0:	82 81       	ldd	r24, Z+2	; 0x02
 5b2:	93 81       	ldd	r25, Z+3	; 0x03
 5b4:	0c 5f       	subi	r16, 0xFC	; 252
 5b6:	1f 4f       	sbci	r17, 0xFF	; 255
 5b8:	06 c0       	rjmp	.+12     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5ba:	60 81       	ld	r22, Z
 5bc:	71 81       	ldd	r23, Z+1	; 0x01
 5be:	80 e0       	ldi	r24, 0x00	; 0
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 5f       	subi	r16, 0xFE	; 254
 5c4:	1f 4f       	sbci	r17, 0xFF	; 255
 5c6:	a3 01       	movw	r20, r6
 5c8:	f1 d0       	rcall	.+482    	; 0x7ac <__ultoa_invert>
 5ca:	88 2e       	mov	r8, r24
 5cc:	86 18       	sub	r8, r6
 5ce:	fb 2d       	mov	r31, r11
 5d0:	ff 77       	andi	r31, 0x7F	; 127
 5d2:	3f 2e       	mov	r3, r31
 5d4:	36 fe       	sbrs	r3, 6
 5d6:	0d c0       	rjmp	.+26     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5d8:	23 2d       	mov	r18, r3
 5da:	2e 7f       	andi	r18, 0xFE	; 254
 5dc:	a2 2e       	mov	r10, r18
 5de:	89 14       	cp	r8, r9
 5e0:	58 f4       	brcc	.+22     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5e2:	34 fe       	sbrs	r3, 4
 5e4:	0b c0       	rjmp	.+22     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5e6:	32 fc       	sbrc	r3, 2
 5e8:	09 c0       	rjmp	.+18     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5ea:	83 2d       	mov	r24, r3
 5ec:	8e 7e       	andi	r24, 0xEE	; 238
 5ee:	a8 2e       	mov	r10, r24
 5f0:	05 c0       	rjmp	.+10     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f2:	b8 2c       	mov	r11, r8
 5f4:	a3 2c       	mov	r10, r3
 5f6:	03 c0       	rjmp	.+6      	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5f8:	b8 2c       	mov	r11, r8
 5fa:	01 c0       	rjmp	.+2      	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5fc:	b9 2c       	mov	r11, r9
 5fe:	a4 fe       	sbrs	r10, 4
 600:	0f c0       	rjmp	.+30     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 602:	fe 01       	movw	r30, r28
 604:	e8 0d       	add	r30, r8
 606:	f1 1d       	adc	r31, r1
 608:	80 81       	ld	r24, Z
 60a:	80 33       	cpi	r24, 0x30	; 48
 60c:	21 f4       	brne	.+8      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 60e:	9a 2d       	mov	r25, r10
 610:	99 7e       	andi	r25, 0xE9	; 233
 612:	a9 2e       	mov	r10, r25
 614:	09 c0       	rjmp	.+18     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 616:	a2 fe       	sbrs	r10, 2
 618:	06 c0       	rjmp	.+12     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 61a:	b3 94       	inc	r11
 61c:	b3 94       	inc	r11
 61e:	04 c0       	rjmp	.+8      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 620:	8a 2d       	mov	r24, r10
 622:	86 78       	andi	r24, 0x86	; 134
 624:	09 f0       	breq	.+2      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 626:	b3 94       	inc	r11
 628:	a3 fc       	sbrc	r10, 3
 62a:	10 c0       	rjmp	.+32     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 62c:	a0 fe       	sbrs	r10, 0
 62e:	06 c0       	rjmp	.+12     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 630:	b2 14       	cp	r11, r2
 632:	80 f4       	brcc	.+32     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 634:	28 0c       	add	r2, r8
 636:	92 2c       	mov	r9, r2
 638:	9b 18       	sub	r9, r11
 63a:	0d c0       	rjmp	.+26     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 63c:	b2 14       	cp	r11, r2
 63e:	58 f4       	brcc	.+22     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 640:	b6 01       	movw	r22, r12
 642:	80 e2       	ldi	r24, 0x20	; 32
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	76 d0       	rcall	.+236    	; 0x734 <fputc>
 648:	b3 94       	inc	r11
 64a:	f8 cf       	rjmp	.-16     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 64c:	b2 14       	cp	r11, r2
 64e:	18 f4       	brcc	.+6      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 650:	2b 18       	sub	r2, r11
 652:	02 c0       	rjmp	.+4      	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 654:	98 2c       	mov	r9, r8
 656:	21 2c       	mov	r2, r1
 658:	a4 fe       	sbrs	r10, 4
 65a:	0f c0       	rjmp	.+30     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 65c:	b6 01       	movw	r22, r12
 65e:	80 e3       	ldi	r24, 0x30	; 48
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	68 d0       	rcall	.+208    	; 0x734 <fputc>
 664:	a2 fe       	sbrs	r10, 2
 666:	16 c0       	rjmp	.+44     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 668:	a1 fc       	sbrc	r10, 1
 66a:	03 c0       	rjmp	.+6      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 66c:	88 e7       	ldi	r24, 0x78	; 120
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	02 c0       	rjmp	.+4      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 672:	88 e5       	ldi	r24, 0x58	; 88
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	b6 01       	movw	r22, r12
 678:	0c c0       	rjmp	.+24     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 67a:	8a 2d       	mov	r24, r10
 67c:	86 78       	andi	r24, 0x86	; 134
 67e:	51 f0       	breq	.+20     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 680:	a1 fe       	sbrs	r10, 1
 682:	02 c0       	rjmp	.+4      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 684:	8b e2       	ldi	r24, 0x2B	; 43
 686:	01 c0       	rjmp	.+2      	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 688:	80 e2       	ldi	r24, 0x20	; 32
 68a:	a7 fc       	sbrc	r10, 7
 68c:	8d e2       	ldi	r24, 0x2D	; 45
 68e:	b6 01       	movw	r22, r12
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	50 d0       	rcall	.+160    	; 0x734 <fputc>
 694:	89 14       	cp	r8, r9
 696:	30 f4       	brcc	.+12     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 698:	b6 01       	movw	r22, r12
 69a:	80 e3       	ldi	r24, 0x30	; 48
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	4a d0       	rcall	.+148    	; 0x734 <fputc>
 6a0:	9a 94       	dec	r9
 6a2:	f8 cf       	rjmp	.-16     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 6a4:	8a 94       	dec	r8
 6a6:	f3 01       	movw	r30, r6
 6a8:	e8 0d       	add	r30, r8
 6aa:	f1 1d       	adc	r31, r1
 6ac:	80 81       	ld	r24, Z
 6ae:	b6 01       	movw	r22, r12
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	40 d0       	rcall	.+128    	; 0x734 <fputc>
 6b4:	81 10       	cpse	r8, r1
 6b6:	f6 cf       	rjmp	.-20     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 6b8:	22 20       	and	r2, r2
 6ba:	09 f4       	brne	.+2      	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6bc:	4e ce       	rjmp	.-868    	; 0x35a <vfprintf+0x4c>
 6be:	b6 01       	movw	r22, r12
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	37 d0       	rcall	.+110    	; 0x734 <fputc>
 6c6:	2a 94       	dec	r2
 6c8:	f7 cf       	rjmp	.-18     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6ca:	f6 01       	movw	r30, r12
 6cc:	86 81       	ldd	r24, Z+6	; 0x06
 6ce:	97 81       	ldd	r25, Z+7	; 0x07
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6d2:	8f ef       	ldi	r24, 0xFF	; 255
 6d4:	9f ef       	ldi	r25, 0xFF	; 255
 6d6:	2b 96       	adiw	r28, 0x0b	; 11
 6d8:	0f b6       	in	r0, 0x3f	; 63
 6da:	f8 94       	cli
 6dc:	de bf       	out	0x3e, r29	; 62
 6de:	0f be       	out	0x3f, r0	; 63
 6e0:	cd bf       	out	0x3d, r28	; 61
 6e2:	df 91       	pop	r29
 6e4:	cf 91       	pop	r28
 6e6:	1f 91       	pop	r17
 6e8:	0f 91       	pop	r16
 6ea:	ff 90       	pop	r15
 6ec:	ef 90       	pop	r14
 6ee:	df 90       	pop	r13
 6f0:	cf 90       	pop	r12
 6f2:	bf 90       	pop	r11
 6f4:	af 90       	pop	r10
 6f6:	9f 90       	pop	r9
 6f8:	8f 90       	pop	r8
 6fa:	7f 90       	pop	r7
 6fc:	6f 90       	pop	r6
 6fe:	5f 90       	pop	r5
 700:	4f 90       	pop	r4
 702:	3f 90       	pop	r3
 704:	2f 90       	pop	r2
 706:	08 95       	ret

00000708 <strnlen_P>:
 708:	fc 01       	movw	r30, r24
 70a:	05 90       	lpm	r0, Z+
 70c:	61 50       	subi	r22, 0x01	; 1
 70e:	70 40       	sbci	r23, 0x00	; 0
 710:	01 10       	cpse	r0, r1
 712:	d8 f7       	brcc	.-10     	; 0x70a <strnlen_P+0x2>
 714:	80 95       	com	r24
 716:	90 95       	com	r25
 718:	8e 0f       	add	r24, r30
 71a:	9f 1f       	adc	r25, r31
 71c:	08 95       	ret

0000071e <strnlen>:
 71e:	fc 01       	movw	r30, r24
 720:	61 50       	subi	r22, 0x01	; 1
 722:	70 40       	sbci	r23, 0x00	; 0
 724:	01 90       	ld	r0, Z+
 726:	01 10       	cpse	r0, r1
 728:	d8 f7       	brcc	.-10     	; 0x720 <strnlen+0x2>
 72a:	80 95       	com	r24
 72c:	90 95       	com	r25
 72e:	8e 0f       	add	r24, r30
 730:	9f 1f       	adc	r25, r31
 732:	08 95       	ret

00000734 <fputc>:
 734:	0f 93       	push	r16
 736:	1f 93       	push	r17
 738:	cf 93       	push	r28
 73a:	df 93       	push	r29
 73c:	fb 01       	movw	r30, r22
 73e:	23 81       	ldd	r18, Z+3	; 0x03
 740:	21 fd       	sbrc	r18, 1
 742:	03 c0       	rjmp	.+6      	; 0x74a <fputc+0x16>
 744:	8f ef       	ldi	r24, 0xFF	; 255
 746:	9f ef       	ldi	r25, 0xFF	; 255
 748:	2c c0       	rjmp	.+88     	; 0x7a2 <fputc+0x6e>
 74a:	22 ff       	sbrs	r18, 2
 74c:	16 c0       	rjmp	.+44     	; 0x77a <fputc+0x46>
 74e:	46 81       	ldd	r20, Z+6	; 0x06
 750:	57 81       	ldd	r21, Z+7	; 0x07
 752:	24 81       	ldd	r18, Z+4	; 0x04
 754:	35 81       	ldd	r19, Z+5	; 0x05
 756:	42 17       	cp	r20, r18
 758:	53 07       	cpc	r21, r19
 75a:	44 f4       	brge	.+16     	; 0x76c <fputc+0x38>
 75c:	a0 81       	ld	r26, Z
 75e:	b1 81       	ldd	r27, Z+1	; 0x01
 760:	9d 01       	movw	r18, r26
 762:	2f 5f       	subi	r18, 0xFF	; 255
 764:	3f 4f       	sbci	r19, 0xFF	; 255
 766:	31 83       	std	Z+1, r19	; 0x01
 768:	20 83       	st	Z, r18
 76a:	8c 93       	st	X, r24
 76c:	26 81       	ldd	r18, Z+6	; 0x06
 76e:	37 81       	ldd	r19, Z+7	; 0x07
 770:	2f 5f       	subi	r18, 0xFF	; 255
 772:	3f 4f       	sbci	r19, 0xFF	; 255
 774:	37 83       	std	Z+7, r19	; 0x07
 776:	26 83       	std	Z+6, r18	; 0x06
 778:	14 c0       	rjmp	.+40     	; 0x7a2 <fputc+0x6e>
 77a:	8b 01       	movw	r16, r22
 77c:	ec 01       	movw	r28, r24
 77e:	fb 01       	movw	r30, r22
 780:	00 84       	ldd	r0, Z+8	; 0x08
 782:	f1 85       	ldd	r31, Z+9	; 0x09
 784:	e0 2d       	mov	r30, r0
 786:	09 95       	icall
 788:	89 2b       	or	r24, r25
 78a:	e1 f6       	brne	.-72     	; 0x744 <fputc+0x10>
 78c:	d8 01       	movw	r26, r16
 78e:	16 96       	adiw	r26, 0x06	; 6
 790:	8d 91       	ld	r24, X+
 792:	9c 91       	ld	r25, X
 794:	17 97       	sbiw	r26, 0x07	; 7
 796:	01 96       	adiw	r24, 0x01	; 1
 798:	17 96       	adiw	r26, 0x07	; 7
 79a:	9c 93       	st	X, r25
 79c:	8e 93       	st	-X, r24
 79e:	16 97       	sbiw	r26, 0x06	; 6
 7a0:	ce 01       	movw	r24, r28
 7a2:	df 91       	pop	r29
 7a4:	cf 91       	pop	r28
 7a6:	1f 91       	pop	r17
 7a8:	0f 91       	pop	r16
 7aa:	08 95       	ret

000007ac <__ultoa_invert>:
 7ac:	fa 01       	movw	r30, r20
 7ae:	aa 27       	eor	r26, r26
 7b0:	28 30       	cpi	r18, 0x08	; 8
 7b2:	51 f1       	breq	.+84     	; 0x808 <__ultoa_invert+0x5c>
 7b4:	20 31       	cpi	r18, 0x10	; 16
 7b6:	81 f1       	breq	.+96     	; 0x818 <__ultoa_invert+0x6c>
 7b8:	e8 94       	clt
 7ba:	6f 93       	push	r22
 7bc:	6e 7f       	andi	r22, 0xFE	; 254
 7be:	6e 5f       	subi	r22, 0xFE	; 254
 7c0:	7f 4f       	sbci	r23, 0xFF	; 255
 7c2:	8f 4f       	sbci	r24, 0xFF	; 255
 7c4:	9f 4f       	sbci	r25, 0xFF	; 255
 7c6:	af 4f       	sbci	r26, 0xFF	; 255
 7c8:	b1 e0       	ldi	r27, 0x01	; 1
 7ca:	3e d0       	rcall	.+124    	; 0x848 <__ultoa_invert+0x9c>
 7cc:	b4 e0       	ldi	r27, 0x04	; 4
 7ce:	3c d0       	rcall	.+120    	; 0x848 <__ultoa_invert+0x9c>
 7d0:	67 0f       	add	r22, r23
 7d2:	78 1f       	adc	r23, r24
 7d4:	89 1f       	adc	r24, r25
 7d6:	9a 1f       	adc	r25, r26
 7d8:	a1 1d       	adc	r26, r1
 7da:	68 0f       	add	r22, r24
 7dc:	79 1f       	adc	r23, r25
 7de:	8a 1f       	adc	r24, r26
 7e0:	91 1d       	adc	r25, r1
 7e2:	a1 1d       	adc	r26, r1
 7e4:	6a 0f       	add	r22, r26
 7e6:	71 1d       	adc	r23, r1
 7e8:	81 1d       	adc	r24, r1
 7ea:	91 1d       	adc	r25, r1
 7ec:	a1 1d       	adc	r26, r1
 7ee:	20 d0       	rcall	.+64     	; 0x830 <__ultoa_invert+0x84>
 7f0:	09 f4       	brne	.+2      	; 0x7f4 <__ultoa_invert+0x48>
 7f2:	68 94       	set
 7f4:	3f 91       	pop	r19
 7f6:	2a e0       	ldi	r18, 0x0A	; 10
 7f8:	26 9f       	mul	r18, r22
 7fa:	11 24       	eor	r1, r1
 7fc:	30 19       	sub	r19, r0
 7fe:	30 5d       	subi	r19, 0xD0	; 208
 800:	31 93       	st	Z+, r19
 802:	de f6       	brtc	.-74     	; 0x7ba <__ultoa_invert+0xe>
 804:	cf 01       	movw	r24, r30
 806:	08 95       	ret
 808:	46 2f       	mov	r20, r22
 80a:	47 70       	andi	r20, 0x07	; 7
 80c:	40 5d       	subi	r20, 0xD0	; 208
 80e:	41 93       	st	Z+, r20
 810:	b3 e0       	ldi	r27, 0x03	; 3
 812:	0f d0       	rcall	.+30     	; 0x832 <__ultoa_invert+0x86>
 814:	c9 f7       	brne	.-14     	; 0x808 <__ultoa_invert+0x5c>
 816:	f6 cf       	rjmp	.-20     	; 0x804 <__ultoa_invert+0x58>
 818:	46 2f       	mov	r20, r22
 81a:	4f 70       	andi	r20, 0x0F	; 15
 81c:	40 5d       	subi	r20, 0xD0	; 208
 81e:	4a 33       	cpi	r20, 0x3A	; 58
 820:	18 f0       	brcs	.+6      	; 0x828 <__ultoa_invert+0x7c>
 822:	49 5d       	subi	r20, 0xD9	; 217
 824:	31 fd       	sbrc	r19, 1
 826:	40 52       	subi	r20, 0x20	; 32
 828:	41 93       	st	Z+, r20
 82a:	02 d0       	rcall	.+4      	; 0x830 <__ultoa_invert+0x84>
 82c:	a9 f7       	brne	.-22     	; 0x818 <__ultoa_invert+0x6c>
 82e:	ea cf       	rjmp	.-44     	; 0x804 <__ultoa_invert+0x58>
 830:	b4 e0       	ldi	r27, 0x04	; 4
 832:	a6 95       	lsr	r26
 834:	97 95       	ror	r25
 836:	87 95       	ror	r24
 838:	77 95       	ror	r23
 83a:	67 95       	ror	r22
 83c:	ba 95       	dec	r27
 83e:	c9 f7       	brne	.-14     	; 0x832 <__ultoa_invert+0x86>
 840:	00 97       	sbiw	r24, 0x00	; 0
 842:	61 05       	cpc	r22, r1
 844:	71 05       	cpc	r23, r1
 846:	08 95       	ret
 848:	9b 01       	movw	r18, r22
 84a:	ac 01       	movw	r20, r24
 84c:	0a 2e       	mov	r0, r26
 84e:	06 94       	lsr	r0
 850:	57 95       	ror	r21
 852:	47 95       	ror	r20
 854:	37 95       	ror	r19
 856:	27 95       	ror	r18
 858:	ba 95       	dec	r27
 85a:	c9 f7       	brne	.-14     	; 0x84e <__ultoa_invert+0xa2>
 85c:	62 0f       	add	r22, r18
 85e:	73 1f       	adc	r23, r19
 860:	84 1f       	adc	r24, r20
 862:	95 1f       	adc	r25, r21
 864:	a0 1d       	adc	r26, r0
 866:	08 95       	ret

00000868 <_exit>:
 868:	f8 94       	cli

0000086a <__stop_program>:
 86a:	ff cf       	rjmp	.-2      	; 0x86a <__stop_program>
