
ATS75D8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000844  000008d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000844  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800126  00800126  000008fe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000095c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  0000099c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010e3  00000000  00000000  00000a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bc9  00000000  00000000  00001b6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008a8  00000000  00000000  00002738  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  00002fe0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b9  00000000  00000000  00003228  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000882  00000000  00000000  000037e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004063  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	d7 c0       	rjmp	.+430    	; 0x1f8 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e4       	ldi	r30, 0x44	; 68
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 32       	cpi	r26, 0x26	; 38
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e2       	ldi	r26, 0x26	; 38
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 33       	cpi	r26, 0x30	; 48
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	bd c3       	rjmp	.+1914   	; 0x840 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
#include "i2c.h"
#include "uart.h"
#include "segment.h"

int main(void)
{
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	00 d0       	rcall	.+0      	; 0xce <main+0x6>
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
	fnd_init();
  d2:	82 d0       	rcall	.+260    	; 0x1d8 <fnd_init>
	uart0_init();
  d4:	dd d0       	rcall	.+442    	; 0x290 <uart0_init>
    i2c_init();
  d6:	1e d0       	rcall	.+60     	; 0x114 <i2c_init>
  d8:	0c e1       	ldi	r16, 0x1C	; 28
    while (1) 
    {
		while(i2c_readReg(0x98, 0x00, &ht, &lt) == 0) {
			uint16_t temp;
			temp = (ht<<8) | lt;
			printf("temp:%d\r\n",temp);
  da:	11 e0       	ldi	r17, 0x01	; 1
  dc:	0f c0       	rjmp	.+30     	; 0xfc <main+0x34>
  de:	89 81       	ldd	r24, Y+1	; 0x01
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	98 2f       	mov	r25, r24
  e4:	88 27       	eor	r24, r24
  e6:	2a 81       	ldd	r18, Y+2	; 0x02
  e8:	82 2b       	or	r24, r18
  ea:	9f 93       	push	r25
  ec:	8f 93       	push	r24
  ee:	1f 93       	push	r17
  f0:	0f 93       	push	r16
  f2:	e6 d0       	rcall	.+460    	; 0x2c0 <printf>
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	0f 90       	pop	r0
  fa:	0f 90       	pop	r0
  fc:	9e 01       	movw	r18, r28
	uart0_init();
    i2c_init();
	uint8_t ht, lt;
    while (1) 
    {
		while(i2c_readReg(0x98, 0x00, &ht, &lt) == 0) {
  fe:	2e 5f       	subi	r18, 0xFE	; 254
 100:	3f 4f       	sbci	r19, 0xFF	; 255
 102:	ae 01       	movw	r20, r28
 104:	4f 5f       	subi	r20, 0xFF	; 255
 106:	5f 4f       	sbci	r21, 0xFF	; 255
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	88 e9       	ldi	r24, 0x98	; 152
 10c:	49 d0       	rcall	.+146    	; 0x1a0 <i2c_readReg>
 10e:	88 23       	and	r24, r24
 110:	31 f3       	breq	.-52     	; 0xde <main+0x16>
 112:	f4 cf       	rjmp	.-24     	; 0xfc <main+0x34>

00000114 <i2c_init>:
 114:	88 e4       	ldi	r24, 0x48	; 72
	}

	i2c_stop();

	return 0;
}
 116:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 11a:	08 95       	ret

0000011c <i2c_start>:
 11c:	e4 e7       	ldi	r30, 0x74	; 116
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	10 82       	st	Z, r1
 122:	94 ea       	ldi	r25, 0xA4	; 164
 124:	90 83       	st	Z, r25
 126:	90 81       	ld	r25, Z
 128:	99 23       	and	r25, r25
 12a:	ec f7       	brge	.-6      	; 0x126 <i2c_start+0xa>
 12c:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 130:	98 7f       	andi	r25, 0xF8	; 248
 132:	98 30       	cpi	r25, 0x08	; 8
 134:	a1 f4       	brne	.+40     	; 0x15e <i2c_start+0x42>
 136:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 13a:	84 e8       	ldi	r24, 0x84	; 132
 13c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 140:	e4 e7       	ldi	r30, 0x74	; 116
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 81       	ld	r24, Z
 146:	88 23       	and	r24, r24
 148:	ec f7       	brge	.-6      	; 0x144 <i2c_start+0x28>
 14a:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 14e:	98 7f       	andi	r25, 0xF8	; 248
 150:	98 31       	cpi	r25, 0x18	; 24
 152:	39 f0       	breq	.+14     	; 0x162 <i2c_start+0x46>
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	90 34       	cpi	r25, 0x40	; 64
 158:	29 f4       	brne	.+10     	; 0x164 <i2c_start+0x48>
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	08 95       	ret
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	08 95       	ret
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	08 95       	ret

00000166 <i2c_write>:
 166:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 16a:	84 e8       	ldi	r24, 0x84	; 132
 16c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 170:	e4 e7       	ldi	r30, 0x74	; 116
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	88 23       	and	r24, r24
 178:	ec f7       	brge	.-6      	; 0x174 <i2c_write+0xe>
 17a:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 17e:	98 7f       	andi	r25, 0xF8	; 248
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	98 32       	cpi	r25, 0x28	; 40
 184:	09 f4       	brne	.+2      	; 0x188 <i2c_write+0x22>
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	08 95       	ret

0000018a <i2c_read_ack>:
 18a:	84 ec       	ldi	r24, 0xC4	; 196
 18c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 190:	e4 e7       	ldi	r30, 0x74	; 116
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	88 23       	and	r24, r24
 198:	ec f7       	brge	.-6      	; 0x194 <i2c_read_ack+0xa>
 19a:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 19e:	08 95       	ret

000001a0 <i2c_readReg>:

uint8_t i2c_readReg(uint8_t devaddr, uint8_t regaddr, uint8_t* Hbyte, uint8_t* Lbyte)
{
 1a0:	cf 93       	push	r28
 1a2:	df 93       	push	r29
 1a4:	c8 2f       	mov	r28, r24
 1a6:	d6 2f       	mov	r29, r22
	if (i2c_start(devaddr)) return 1;
 1a8:	b9 df       	rcall	.-142    	; 0x11c <i2c_start>
 1aa:	81 11       	cpse	r24, r1
 1ac:	0e c0       	rjmp	.+28     	; 0x1ca <i2c_readReg+0x2a>

	i2c_write(regaddr);
 1ae:	8d 2f       	mov	r24, r29
 1b0:	da df       	rcall	.-76     	; 0x166 <i2c_write>

	if (i2c_start(devaddr | I2C_READ)) return 1;
 1b2:	8c 2f       	mov	r24, r28
 1b4:	81 60       	ori	r24, 0x01	; 1
 1b6:	b2 df       	rcall	.-156    	; 0x11c <i2c_start>
 1b8:	c8 2f       	mov	r28, r24
 1ba:	81 11       	cpse	r24, r1

	Hbyte = i2c_read_ack();
 1bc:	08 c0       	rjmp	.+16     	; 0x1ce <i2c_readReg+0x2e>
 1be:	e5 df       	rcall	.-54     	; 0x18a <i2c_read_ack>
	Lbyte = i2c_read_ack();
 1c0:	e4 df       	rcall	.-56     	; 0x18a <i2c_read_ack>
 1c2:	84 e9       	ldi	r24, 0x94	; 148
}

void i2c_stop(void)
{
	// transmit STOP condition
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 1c4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 1c8:	03 c0       	rjmp	.+6      	; 0x1d0 <i2c_readReg+0x30>
 1ca:	c1 e0       	ldi	r28, 0x01	; 1
	return 0;
}

uint8_t i2c_readReg(uint8_t devaddr, uint8_t regaddr, uint8_t* Hbyte, uint8_t* Lbyte)
{
	if (i2c_start(devaddr)) return 1;
 1cc:	01 c0       	rjmp	.+2      	; 0x1d0 <i2c_readReg+0x30>
 1ce:	c1 e0       	ldi	r28, 0x01	; 1

	i2c_write(regaddr);

	if (i2c_start(devaddr | I2C_READ)) return 1;
 1d0:	8c 2f       	mov	r24, r28
	Lbyte = i2c_read_ack();

	i2c_stop();

	return 0;
}
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <fnd_init>:
 uint8_t fnd_sel[4] = {0x0E, 0x0D, 0x0B, 0x07};
 uint8_t fnd_num[4];

 void fnd_init(void)
 {
	DDRC = 0xff;
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	84 bb       	out	0x14, r24	; 20
	DDRG |= 0x0f;
 1dc:	e4 e6       	ldi	r30, 0x64	; 100
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	8f 60       	ori	r24, 0x0F	; 15
 1e4:	80 83       	st	Z, r24
 1e6:	08 95       	ret

000001e8 <uart0_trasnmit>:
	 stdin = &INPUT;
	 stdout = &OUTPUT;
 }

 void uart0_trasnmit(char data) {
	 while(!(UCSR0A & (1 << UDRE0)));
 1e8:	5d 9b       	sbis	0x0b, 5	; 11
 1ea:	fe cf       	rjmp	.-4      	; 0x1e8 <uart0_trasnmit>
	 UDR0 = data;
 1ec:	8c b9       	out	0x0c, r24	; 12
 1ee:	08 95       	ret

000001f0 <uart0_receive>:
 }

 unsigned char uart0_receive(void) {
	 while(!(UCSR0A & (1 << RXC0)));
 1f0:	5f 9b       	sbis	0x0b, 7	; 11
 1f2:	fe cf       	rjmp	.-4      	; 0x1f0 <uart0_receive>
	 return UDR0;
 1f4:	8c b1       	in	r24, 0x0c	; 12
 }
 1f6:	08 95       	ret

000001f8 <__vector_18>:
FILE INPUT = FDEV_SETUP_STREAM(NULL, uart0_receive, _FDEV_SETUP_READ);

volatile int flag;
volatile int rxdata;

ISR(USART0_RX_vect) {
 1f8:	1f 92       	push	r1
 1fa:	0f 92       	push	r0
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	0f 92       	push	r0
 200:	11 24       	eor	r1, r1
 202:	2f 93       	push	r18
 204:	3f 93       	push	r19
 206:	4f 93       	push	r20
 208:	5f 93       	push	r21
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
	unsigned char tmp = UDR0;
 20e:	8c b1       	in	r24, 0x0c	; 12
	if(tmp >= '0' && tmp <= '9') {
 210:	90 ed       	ldi	r25, 0xD0	; 208
 212:	98 0f       	add	r25, r24
 214:	9a 30       	cpi	r25, 0x0A	; 10
 216:	58 f5       	brcc	.+86     	; 0x26e <__vector_18+0x76>
		if(flag) {
 218:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__data_end>
 21c:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__data_end+0x1>
 220:	23 2b       	or	r18, r19
 222:	c1 f0       	breq	.+48     	; 0x254 <__vector_18+0x5c>
			rxdata = rxdata * 10 + tmp - '0';
 224:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <rxdata>
 228:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <rxdata+0x1>
 22c:	a9 01       	movw	r20, r18
 22e:	44 0f       	add	r20, r20
 230:	55 1f       	adc	r21, r21
 232:	22 0f       	add	r18, r18
 234:	33 1f       	adc	r19, r19
 236:	22 0f       	add	r18, r18
 238:	33 1f       	adc	r19, r19
 23a:	22 0f       	add	r18, r18
 23c:	33 1f       	adc	r19, r19
 23e:	24 0f       	add	r18, r20
 240:	35 1f       	adc	r19, r21
 242:	28 0f       	add	r18, r24
 244:	31 1d       	adc	r19, r1
 246:	20 53       	subi	r18, 0x30	; 48
 248:	31 09       	sbc	r19, r1
 24a:	30 93 29 01 	sts	0x0129, r19	; 0x800129 <rxdata+0x1>
 24e:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <rxdata>
 252:	13 c0       	rjmp	.+38     	; 0x27a <__vector_18+0x82>
		}
		else {
			rxdata = tmp - '0';
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	c0 97       	sbiw	r24, 0x30	; 48
 258:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <rxdata+0x1>
 25c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <rxdata>
			flag = 1;
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__data_end+0x1>
 268:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
 26c:	06 c0       	rjmp	.+12     	; 0x27a <__vector_18+0x82>
		}
	}
	else if(tmp == '\r') {
 26e:	8d 30       	cpi	r24, 0x0D	; 13
 270:	21 f4       	brne	.+8      	; 0x27a <__vector_18+0x82>
		flag = 0;
 272:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <__data_end+0x1>
 276:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__data_end>
	}
}
 27a:	9f 91       	pop	r25
 27c:	8f 91       	pop	r24
 27e:	5f 91       	pop	r21
 280:	4f 91       	pop	r20
 282:	3f 91       	pop	r19
 284:	2f 91       	pop	r18
 286:	0f 90       	pop	r0
 288:	0f be       	out	0x3f, r0	; 63
 28a:	0f 90       	pop	r0
 28c:	1f 90       	pop	r1
 28e:	18 95       	reti

00000290 <uart0_init>:

 void uart0_init(void) {
	 UBRR0H = 0x00;
 290:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	 UBRR0L = 16;
 294:	80 e1       	ldi	r24, 0x10	; 16
 296:	89 b9       	out	0x09, r24	; 9
	 
	 UCSR0A |= (1<<U2X0);
 298:	59 9a       	sbi	0x0b, 1	; 11
	 UCSR0C |= 0x06;
 29a:	e5 e9       	ldi	r30, 0x95	; 149
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	80 81       	ld	r24, Z
 2a0:	86 60       	ori	r24, 0x06	; 6
 2a2:	80 83       	st	Z, r24

	 UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
 2a4:	8a b1       	in	r24, 0x0a	; 10
 2a6:	88 61       	ori	r24, 0x18	; 24
 2a8:	8a b9       	out	0x0a, r24	; 10

	 stdin = &INPUT;
 2aa:	ea e2       	ldi	r30, 0x2A	; 42
 2ac:	f1 e0       	ldi	r31, 0x01	; 1
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	91 83       	std	Z+1, r25	; 0x01
 2b4:	80 83       	st	Z, r24
	 stdout = &OUTPUT;
 2b6:	8e e0       	ldi	r24, 0x0E	; 14
 2b8:	91 e0       	ldi	r25, 0x01	; 1
 2ba:	93 83       	std	Z+3, r25	; 0x03
 2bc:	82 83       	std	Z+2, r24	; 0x02
 2be:	08 95       	ret

000002c0 <printf>:
 2c0:	cf 93       	push	r28
 2c2:	df 93       	push	r29
 2c4:	cd b7       	in	r28, 0x3d	; 61
 2c6:	de b7       	in	r29, 0x3e	; 62
 2c8:	ae 01       	movw	r20, r28
 2ca:	4b 5f       	subi	r20, 0xFB	; 251
 2cc:	5f 4f       	sbci	r21, 0xFF	; 255
 2ce:	fa 01       	movw	r30, r20
 2d0:	61 91       	ld	r22, Z+
 2d2:	71 91       	ld	r23, Z+
 2d4:	af 01       	movw	r20, r30
 2d6:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <__iob+0x2>
 2da:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <__iob+0x3>
 2de:	03 d0       	rcall	.+6      	; 0x2e6 <vfprintf>
 2e0:	df 91       	pop	r29
 2e2:	cf 91       	pop	r28
 2e4:	08 95       	ret

000002e6 <vfprintf>:
 2e6:	2f 92       	push	r2
 2e8:	3f 92       	push	r3
 2ea:	4f 92       	push	r4
 2ec:	5f 92       	push	r5
 2ee:	6f 92       	push	r6
 2f0:	7f 92       	push	r7
 2f2:	8f 92       	push	r8
 2f4:	9f 92       	push	r9
 2f6:	af 92       	push	r10
 2f8:	bf 92       	push	r11
 2fa:	cf 92       	push	r12
 2fc:	df 92       	push	r13
 2fe:	ef 92       	push	r14
 300:	ff 92       	push	r15
 302:	0f 93       	push	r16
 304:	1f 93       	push	r17
 306:	cf 93       	push	r28
 308:	df 93       	push	r29
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
 30e:	2b 97       	sbiw	r28, 0x0b	; 11
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	f8 94       	cli
 314:	de bf       	out	0x3e, r29	; 62
 316:	0f be       	out	0x3f, r0	; 63
 318:	cd bf       	out	0x3d, r28	; 61
 31a:	6c 01       	movw	r12, r24
 31c:	7b 01       	movw	r14, r22
 31e:	8a 01       	movw	r16, r20
 320:	fc 01       	movw	r30, r24
 322:	17 82       	std	Z+7, r1	; 0x07
 324:	16 82       	std	Z+6, r1	; 0x06
 326:	83 81       	ldd	r24, Z+3	; 0x03
 328:	81 ff       	sbrs	r24, 1
 32a:	bf c1       	rjmp	.+894    	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 32c:	ce 01       	movw	r24, r28
 32e:	01 96       	adiw	r24, 0x01	; 1
 330:	3c 01       	movw	r6, r24
 332:	f6 01       	movw	r30, r12
 334:	93 81       	ldd	r25, Z+3	; 0x03
 336:	f7 01       	movw	r30, r14
 338:	93 fd       	sbrc	r25, 3
 33a:	85 91       	lpm	r24, Z+
 33c:	93 ff       	sbrs	r25, 3
 33e:	81 91       	ld	r24, Z+
 340:	7f 01       	movw	r14, r30
 342:	88 23       	and	r24, r24
 344:	09 f4       	brne	.+2      	; 0x348 <vfprintf+0x62>
 346:	ad c1       	rjmp	.+858    	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 348:	85 32       	cpi	r24, 0x25	; 37
 34a:	39 f4       	brne	.+14     	; 0x35a <vfprintf+0x74>
 34c:	93 fd       	sbrc	r25, 3
 34e:	85 91       	lpm	r24, Z+
 350:	93 ff       	sbrs	r25, 3
 352:	81 91       	ld	r24, Z+
 354:	7f 01       	movw	r14, r30
 356:	85 32       	cpi	r24, 0x25	; 37
 358:	21 f4       	brne	.+8      	; 0x362 <vfprintf+0x7c>
 35a:	b6 01       	movw	r22, r12
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	d6 d1       	rcall	.+940    	; 0x70c <fputc>
 360:	e8 cf       	rjmp	.-48     	; 0x332 <vfprintf+0x4c>
 362:	91 2c       	mov	r9, r1
 364:	21 2c       	mov	r2, r1
 366:	31 2c       	mov	r3, r1
 368:	ff e1       	ldi	r31, 0x1F	; 31
 36a:	f3 15       	cp	r31, r3
 36c:	d8 f0       	brcs	.+54     	; 0x3a4 <vfprintf+0xbe>
 36e:	8b 32       	cpi	r24, 0x2B	; 43
 370:	79 f0       	breq	.+30     	; 0x390 <vfprintf+0xaa>
 372:	38 f4       	brcc	.+14     	; 0x382 <vfprintf+0x9c>
 374:	80 32       	cpi	r24, 0x20	; 32
 376:	79 f0       	breq	.+30     	; 0x396 <vfprintf+0xb0>
 378:	83 32       	cpi	r24, 0x23	; 35
 37a:	a1 f4       	brne	.+40     	; 0x3a4 <vfprintf+0xbe>
 37c:	23 2d       	mov	r18, r3
 37e:	20 61       	ori	r18, 0x10	; 16
 380:	1d c0       	rjmp	.+58     	; 0x3bc <vfprintf+0xd6>
 382:	8d 32       	cpi	r24, 0x2D	; 45
 384:	61 f0       	breq	.+24     	; 0x39e <vfprintf+0xb8>
 386:	80 33       	cpi	r24, 0x30	; 48
 388:	69 f4       	brne	.+26     	; 0x3a4 <vfprintf+0xbe>
 38a:	23 2d       	mov	r18, r3
 38c:	21 60       	ori	r18, 0x01	; 1
 38e:	16 c0       	rjmp	.+44     	; 0x3bc <vfprintf+0xd6>
 390:	83 2d       	mov	r24, r3
 392:	82 60       	ori	r24, 0x02	; 2
 394:	38 2e       	mov	r3, r24
 396:	e3 2d       	mov	r30, r3
 398:	e4 60       	ori	r30, 0x04	; 4
 39a:	3e 2e       	mov	r3, r30
 39c:	2a c0       	rjmp	.+84     	; 0x3f2 <vfprintf+0x10c>
 39e:	f3 2d       	mov	r31, r3
 3a0:	f8 60       	ori	r31, 0x08	; 8
 3a2:	1d c0       	rjmp	.+58     	; 0x3de <vfprintf+0xf8>
 3a4:	37 fc       	sbrc	r3, 7
 3a6:	2d c0       	rjmp	.+90     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3a8:	20 ed       	ldi	r18, 0xD0	; 208
 3aa:	28 0f       	add	r18, r24
 3ac:	2a 30       	cpi	r18, 0x0A	; 10
 3ae:	40 f0       	brcs	.+16     	; 0x3c0 <vfprintf+0xda>
 3b0:	8e 32       	cpi	r24, 0x2E	; 46
 3b2:	b9 f4       	brne	.+46     	; 0x3e2 <vfprintf+0xfc>
 3b4:	36 fc       	sbrc	r3, 6
 3b6:	75 c1       	rjmp	.+746    	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 3b8:	23 2d       	mov	r18, r3
 3ba:	20 64       	ori	r18, 0x40	; 64
 3bc:	32 2e       	mov	r3, r18
 3be:	19 c0       	rjmp	.+50     	; 0x3f2 <vfprintf+0x10c>
 3c0:	36 fe       	sbrs	r3, 6
 3c2:	06 c0       	rjmp	.+12     	; 0x3d0 <vfprintf+0xea>
 3c4:	8a e0       	ldi	r24, 0x0A	; 10
 3c6:	98 9e       	mul	r9, r24
 3c8:	20 0d       	add	r18, r0
 3ca:	11 24       	eor	r1, r1
 3cc:	92 2e       	mov	r9, r18
 3ce:	11 c0       	rjmp	.+34     	; 0x3f2 <vfprintf+0x10c>
 3d0:	ea e0       	ldi	r30, 0x0A	; 10
 3d2:	2e 9e       	mul	r2, r30
 3d4:	20 0d       	add	r18, r0
 3d6:	11 24       	eor	r1, r1
 3d8:	22 2e       	mov	r2, r18
 3da:	f3 2d       	mov	r31, r3
 3dc:	f0 62       	ori	r31, 0x20	; 32
 3de:	3f 2e       	mov	r3, r31
 3e0:	08 c0       	rjmp	.+16     	; 0x3f2 <vfprintf+0x10c>
 3e2:	8c 36       	cpi	r24, 0x6C	; 108
 3e4:	21 f4       	brne	.+8      	; 0x3ee <vfprintf+0x108>
 3e6:	83 2d       	mov	r24, r3
 3e8:	80 68       	ori	r24, 0x80	; 128
 3ea:	38 2e       	mov	r3, r24
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <vfprintf+0x10c>
 3ee:	88 36       	cpi	r24, 0x68	; 104
 3f0:	41 f4       	brne	.+16     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f2:	f7 01       	movw	r30, r14
 3f4:	93 fd       	sbrc	r25, 3
 3f6:	85 91       	lpm	r24, Z+
 3f8:	93 ff       	sbrs	r25, 3
 3fa:	81 91       	ld	r24, Z+
 3fc:	7f 01       	movw	r14, r30
 3fe:	81 11       	cpse	r24, r1
 400:	b3 cf       	rjmp	.-154    	; 0x368 <vfprintf+0x82>
 402:	98 2f       	mov	r25, r24
 404:	9f 7d       	andi	r25, 0xDF	; 223
 406:	95 54       	subi	r25, 0x45	; 69
 408:	93 30       	cpi	r25, 0x03	; 3
 40a:	28 f4       	brcc	.+10     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 40c:	0c 5f       	subi	r16, 0xFC	; 252
 40e:	1f 4f       	sbci	r17, 0xFF	; 255
 410:	9f e3       	ldi	r25, 0x3F	; 63
 412:	99 83       	std	Y+1, r25	; 0x01
 414:	0d c0       	rjmp	.+26     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 416:	83 36       	cpi	r24, 0x63	; 99
 418:	31 f0       	breq	.+12     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41a:	83 37       	cpi	r24, 0x73	; 115
 41c:	71 f0       	breq	.+28     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 41e:	83 35       	cpi	r24, 0x53	; 83
 420:	09 f0       	breq	.+2      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 422:	55 c0       	rjmp	.+170    	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 424:	20 c0       	rjmp	.+64     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 426:	f8 01       	movw	r30, r16
 428:	80 81       	ld	r24, Z
 42a:	89 83       	std	Y+1, r24	; 0x01
 42c:	0e 5f       	subi	r16, 0xFE	; 254
 42e:	1f 4f       	sbci	r17, 0xFF	; 255
 430:	88 24       	eor	r8, r8
 432:	83 94       	inc	r8
 434:	91 2c       	mov	r9, r1
 436:	53 01       	movw	r10, r6
 438:	12 c0       	rjmp	.+36     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 43a:	28 01       	movw	r4, r16
 43c:	f2 e0       	ldi	r31, 0x02	; 2
 43e:	4f 0e       	add	r4, r31
 440:	51 1c       	adc	r5, r1
 442:	f8 01       	movw	r30, r16
 444:	a0 80       	ld	r10, Z
 446:	b1 80       	ldd	r11, Z+1	; 0x01
 448:	36 fe       	sbrs	r3, 6
 44a:	03 c0       	rjmp	.+6      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 44c:	69 2d       	mov	r22, r9
 44e:	70 e0       	ldi	r23, 0x00	; 0
 450:	02 c0       	rjmp	.+4      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 452:	6f ef       	ldi	r22, 0xFF	; 255
 454:	7f ef       	ldi	r23, 0xFF	; 255
 456:	c5 01       	movw	r24, r10
 458:	4e d1       	rcall	.+668    	; 0x6f6 <strnlen>
 45a:	4c 01       	movw	r8, r24
 45c:	82 01       	movw	r16, r4
 45e:	f3 2d       	mov	r31, r3
 460:	ff 77       	andi	r31, 0x7F	; 127
 462:	3f 2e       	mov	r3, r31
 464:	15 c0       	rjmp	.+42     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 466:	28 01       	movw	r4, r16
 468:	22 e0       	ldi	r18, 0x02	; 2
 46a:	42 0e       	add	r4, r18
 46c:	51 1c       	adc	r5, r1
 46e:	f8 01       	movw	r30, r16
 470:	a0 80       	ld	r10, Z
 472:	b1 80       	ldd	r11, Z+1	; 0x01
 474:	36 fe       	sbrs	r3, 6
 476:	03 c0       	rjmp	.+6      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 478:	69 2d       	mov	r22, r9
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	02 c0       	rjmp	.+4      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 47e:	6f ef       	ldi	r22, 0xFF	; 255
 480:	7f ef       	ldi	r23, 0xFF	; 255
 482:	c5 01       	movw	r24, r10
 484:	2d d1       	rcall	.+602    	; 0x6e0 <strnlen_P>
 486:	4c 01       	movw	r8, r24
 488:	f3 2d       	mov	r31, r3
 48a:	f0 68       	ori	r31, 0x80	; 128
 48c:	3f 2e       	mov	r3, r31
 48e:	82 01       	movw	r16, r4
 490:	33 fc       	sbrc	r3, 3
 492:	19 c0       	rjmp	.+50     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 494:	82 2d       	mov	r24, r2
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	88 16       	cp	r8, r24
 49a:	99 06       	cpc	r9, r25
 49c:	a0 f4       	brcc	.+40     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 49e:	b6 01       	movw	r22, r12
 4a0:	80 e2       	ldi	r24, 0x20	; 32
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	33 d1       	rcall	.+614    	; 0x70c <fputc>
 4a6:	2a 94       	dec	r2
 4a8:	f5 cf       	rjmp	.-22     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 4aa:	f5 01       	movw	r30, r10
 4ac:	37 fc       	sbrc	r3, 7
 4ae:	85 91       	lpm	r24, Z+
 4b0:	37 fe       	sbrs	r3, 7
 4b2:	81 91       	ld	r24, Z+
 4b4:	5f 01       	movw	r10, r30
 4b6:	b6 01       	movw	r22, r12
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	28 d1       	rcall	.+592    	; 0x70c <fputc>
 4bc:	21 10       	cpse	r2, r1
 4be:	2a 94       	dec	r2
 4c0:	21 e0       	ldi	r18, 0x01	; 1
 4c2:	82 1a       	sub	r8, r18
 4c4:	91 08       	sbc	r9, r1
 4c6:	81 14       	cp	r8, r1
 4c8:	91 04       	cpc	r9, r1
 4ca:	79 f7       	brne	.-34     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4cc:	e1 c0       	rjmp	.+450    	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 4ce:	84 36       	cpi	r24, 0x64	; 100
 4d0:	11 f0       	breq	.+4      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d2:	89 36       	cpi	r24, 0x69	; 105
 4d4:	39 f5       	brne	.+78     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 4d6:	f8 01       	movw	r30, r16
 4d8:	37 fe       	sbrs	r3, 7
 4da:	07 c0       	rjmp	.+14     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4dc:	60 81       	ld	r22, Z
 4de:	71 81       	ldd	r23, Z+1	; 0x01
 4e0:	82 81       	ldd	r24, Z+2	; 0x02
 4e2:	93 81       	ldd	r25, Z+3	; 0x03
 4e4:	0c 5f       	subi	r16, 0xFC	; 252
 4e6:	1f 4f       	sbci	r17, 0xFF	; 255
 4e8:	08 c0       	rjmp	.+16     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ea:	60 81       	ld	r22, Z
 4ec:	71 81       	ldd	r23, Z+1	; 0x01
 4ee:	07 2e       	mov	r0, r23
 4f0:	00 0c       	add	r0, r0
 4f2:	88 0b       	sbc	r24, r24
 4f4:	99 0b       	sbc	r25, r25
 4f6:	0e 5f       	subi	r16, 0xFE	; 254
 4f8:	1f 4f       	sbci	r17, 0xFF	; 255
 4fa:	f3 2d       	mov	r31, r3
 4fc:	ff 76       	andi	r31, 0x6F	; 111
 4fe:	3f 2e       	mov	r3, r31
 500:	97 ff       	sbrs	r25, 7
 502:	09 c0       	rjmp	.+18     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 504:	90 95       	com	r25
 506:	80 95       	com	r24
 508:	70 95       	com	r23
 50a:	61 95       	neg	r22
 50c:	7f 4f       	sbci	r23, 0xFF	; 255
 50e:	8f 4f       	sbci	r24, 0xFF	; 255
 510:	9f 4f       	sbci	r25, 0xFF	; 255
 512:	f0 68       	ori	r31, 0x80	; 128
 514:	3f 2e       	mov	r3, r31
 516:	2a e0       	ldi	r18, 0x0A	; 10
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	a3 01       	movw	r20, r6
 51c:	33 d1       	rcall	.+614    	; 0x784 <__ultoa_invert>
 51e:	88 2e       	mov	r8, r24
 520:	86 18       	sub	r8, r6
 522:	44 c0       	rjmp	.+136    	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 524:	85 37       	cpi	r24, 0x75	; 117
 526:	31 f4       	brne	.+12     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 528:	23 2d       	mov	r18, r3
 52a:	2f 7e       	andi	r18, 0xEF	; 239
 52c:	b2 2e       	mov	r11, r18
 52e:	2a e0       	ldi	r18, 0x0A	; 10
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	25 c0       	rjmp	.+74     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 534:	93 2d       	mov	r25, r3
 536:	99 7f       	andi	r25, 0xF9	; 249
 538:	b9 2e       	mov	r11, r25
 53a:	8f 36       	cpi	r24, 0x6F	; 111
 53c:	c1 f0       	breq	.+48     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 53e:	18 f4       	brcc	.+6      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 540:	88 35       	cpi	r24, 0x58	; 88
 542:	79 f0       	breq	.+30     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 544:	ae c0       	rjmp	.+348    	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 546:	80 37       	cpi	r24, 0x70	; 112
 548:	19 f0       	breq	.+6      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54a:	88 37       	cpi	r24, 0x78	; 120
 54c:	21 f0       	breq	.+8      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 54e:	a9 c0       	rjmp	.+338    	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 550:	e9 2f       	mov	r30, r25
 552:	e0 61       	ori	r30, 0x10	; 16
 554:	be 2e       	mov	r11, r30
 556:	b4 fe       	sbrs	r11, 4
 558:	0d c0       	rjmp	.+26     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 55a:	fb 2d       	mov	r31, r11
 55c:	f4 60       	ori	r31, 0x04	; 4
 55e:	bf 2e       	mov	r11, r31
 560:	09 c0       	rjmp	.+18     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 562:	34 fe       	sbrs	r3, 4
 564:	0a c0       	rjmp	.+20     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 566:	29 2f       	mov	r18, r25
 568:	26 60       	ori	r18, 0x06	; 6
 56a:	b2 2e       	mov	r11, r18
 56c:	06 c0       	rjmp	.+12     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 56e:	28 e0       	ldi	r18, 0x08	; 8
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	05 c0       	rjmp	.+10     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 574:	20 e1       	ldi	r18, 0x10	; 16
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	02 c0       	rjmp	.+4      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57a:	20 e1       	ldi	r18, 0x10	; 16
 57c:	32 e0       	ldi	r19, 0x02	; 2
 57e:	f8 01       	movw	r30, r16
 580:	b7 fe       	sbrs	r11, 7
 582:	07 c0       	rjmp	.+14     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 584:	60 81       	ld	r22, Z
 586:	71 81       	ldd	r23, Z+1	; 0x01
 588:	82 81       	ldd	r24, Z+2	; 0x02
 58a:	93 81       	ldd	r25, Z+3	; 0x03
 58c:	0c 5f       	subi	r16, 0xFC	; 252
 58e:	1f 4f       	sbci	r17, 0xFF	; 255
 590:	06 c0       	rjmp	.+12     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 592:	60 81       	ld	r22, Z
 594:	71 81       	ldd	r23, Z+1	; 0x01
 596:	80 e0       	ldi	r24, 0x00	; 0
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 5f       	subi	r16, 0xFE	; 254
 59c:	1f 4f       	sbci	r17, 0xFF	; 255
 59e:	a3 01       	movw	r20, r6
 5a0:	f1 d0       	rcall	.+482    	; 0x784 <__ultoa_invert>
 5a2:	88 2e       	mov	r8, r24
 5a4:	86 18       	sub	r8, r6
 5a6:	fb 2d       	mov	r31, r11
 5a8:	ff 77       	andi	r31, 0x7F	; 127
 5aa:	3f 2e       	mov	r3, r31
 5ac:	36 fe       	sbrs	r3, 6
 5ae:	0d c0       	rjmp	.+26     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5b0:	23 2d       	mov	r18, r3
 5b2:	2e 7f       	andi	r18, 0xFE	; 254
 5b4:	a2 2e       	mov	r10, r18
 5b6:	89 14       	cp	r8, r9
 5b8:	58 f4       	brcc	.+22     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5ba:	34 fe       	sbrs	r3, 4
 5bc:	0b c0       	rjmp	.+22     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5be:	32 fc       	sbrc	r3, 2
 5c0:	09 c0       	rjmp	.+18     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5c2:	83 2d       	mov	r24, r3
 5c4:	8e 7e       	andi	r24, 0xEE	; 238
 5c6:	a8 2e       	mov	r10, r24
 5c8:	05 c0       	rjmp	.+10     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5ca:	b8 2c       	mov	r11, r8
 5cc:	a3 2c       	mov	r10, r3
 5ce:	03 c0       	rjmp	.+6      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d0:	b8 2c       	mov	r11, r8
 5d2:	01 c0       	rjmp	.+2      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d4:	b9 2c       	mov	r11, r9
 5d6:	a4 fe       	sbrs	r10, 4
 5d8:	0f c0       	rjmp	.+30     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5da:	fe 01       	movw	r30, r28
 5dc:	e8 0d       	add	r30, r8
 5de:	f1 1d       	adc	r31, r1
 5e0:	80 81       	ld	r24, Z
 5e2:	80 33       	cpi	r24, 0x30	; 48
 5e4:	21 f4       	brne	.+8      	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5e6:	9a 2d       	mov	r25, r10
 5e8:	99 7e       	andi	r25, 0xE9	; 233
 5ea:	a9 2e       	mov	r10, r25
 5ec:	09 c0       	rjmp	.+18     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5ee:	a2 fe       	sbrs	r10, 2
 5f0:	06 c0       	rjmp	.+12     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5f2:	b3 94       	inc	r11
 5f4:	b3 94       	inc	r11
 5f6:	04 c0       	rjmp	.+8      	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5f8:	8a 2d       	mov	r24, r10
 5fa:	86 78       	andi	r24, 0x86	; 134
 5fc:	09 f0       	breq	.+2      	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5fe:	b3 94       	inc	r11
 600:	a3 fc       	sbrc	r10, 3
 602:	10 c0       	rjmp	.+32     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 604:	a0 fe       	sbrs	r10, 0
 606:	06 c0       	rjmp	.+12     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 608:	b2 14       	cp	r11, r2
 60a:	80 f4       	brcc	.+32     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 60c:	28 0c       	add	r2, r8
 60e:	92 2c       	mov	r9, r2
 610:	9b 18       	sub	r9, r11
 612:	0d c0       	rjmp	.+26     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 614:	b2 14       	cp	r11, r2
 616:	58 f4       	brcc	.+22     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 618:	b6 01       	movw	r22, r12
 61a:	80 e2       	ldi	r24, 0x20	; 32
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	76 d0       	rcall	.+236    	; 0x70c <fputc>
 620:	b3 94       	inc	r11
 622:	f8 cf       	rjmp	.-16     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 624:	b2 14       	cp	r11, r2
 626:	18 f4       	brcc	.+6      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 628:	2b 18       	sub	r2, r11
 62a:	02 c0       	rjmp	.+4      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 62c:	98 2c       	mov	r9, r8
 62e:	21 2c       	mov	r2, r1
 630:	a4 fe       	sbrs	r10, 4
 632:	0f c0       	rjmp	.+30     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 634:	b6 01       	movw	r22, r12
 636:	80 e3       	ldi	r24, 0x30	; 48
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	68 d0       	rcall	.+208    	; 0x70c <fputc>
 63c:	a2 fe       	sbrs	r10, 2
 63e:	16 c0       	rjmp	.+44     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 640:	a1 fc       	sbrc	r10, 1
 642:	03 c0       	rjmp	.+6      	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 644:	88 e7       	ldi	r24, 0x78	; 120
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	02 c0       	rjmp	.+4      	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 64a:	88 e5       	ldi	r24, 0x58	; 88
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	b6 01       	movw	r22, r12
 650:	0c c0       	rjmp	.+24     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 652:	8a 2d       	mov	r24, r10
 654:	86 78       	andi	r24, 0x86	; 134
 656:	51 f0       	breq	.+20     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 658:	a1 fe       	sbrs	r10, 1
 65a:	02 c0       	rjmp	.+4      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 65c:	8b e2       	ldi	r24, 0x2B	; 43
 65e:	01 c0       	rjmp	.+2      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 660:	80 e2       	ldi	r24, 0x20	; 32
 662:	a7 fc       	sbrc	r10, 7
 664:	8d e2       	ldi	r24, 0x2D	; 45
 666:	b6 01       	movw	r22, r12
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	50 d0       	rcall	.+160    	; 0x70c <fputc>
 66c:	89 14       	cp	r8, r9
 66e:	30 f4       	brcc	.+12     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 670:	b6 01       	movw	r22, r12
 672:	80 e3       	ldi	r24, 0x30	; 48
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	4a d0       	rcall	.+148    	; 0x70c <fputc>
 678:	9a 94       	dec	r9
 67a:	f8 cf       	rjmp	.-16     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 67c:	8a 94       	dec	r8
 67e:	f3 01       	movw	r30, r6
 680:	e8 0d       	add	r30, r8
 682:	f1 1d       	adc	r31, r1
 684:	80 81       	ld	r24, Z
 686:	b6 01       	movw	r22, r12
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	40 d0       	rcall	.+128    	; 0x70c <fputc>
 68c:	81 10       	cpse	r8, r1
 68e:	f6 cf       	rjmp	.-20     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 690:	22 20       	and	r2, r2
 692:	09 f4       	brne	.+2      	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 694:	4e ce       	rjmp	.-868    	; 0x332 <vfprintf+0x4c>
 696:	b6 01       	movw	r22, r12
 698:	80 e2       	ldi	r24, 0x20	; 32
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	37 d0       	rcall	.+110    	; 0x70c <fputc>
 69e:	2a 94       	dec	r2
 6a0:	f7 cf       	rjmp	.-18     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 6a2:	f6 01       	movw	r30, r12
 6a4:	86 81       	ldd	r24, Z+6	; 0x06
 6a6:	97 81       	ldd	r25, Z+7	; 0x07
 6a8:	02 c0       	rjmp	.+4      	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 6aa:	8f ef       	ldi	r24, 0xFF	; 255
 6ac:	9f ef       	ldi	r25, 0xFF	; 255
 6ae:	2b 96       	adiw	r28, 0x0b	; 11
 6b0:	0f b6       	in	r0, 0x3f	; 63
 6b2:	f8 94       	cli
 6b4:	de bf       	out	0x3e, r29	; 62
 6b6:	0f be       	out	0x3f, r0	; 63
 6b8:	cd bf       	out	0x3d, r28	; 61
 6ba:	df 91       	pop	r29
 6bc:	cf 91       	pop	r28
 6be:	1f 91       	pop	r17
 6c0:	0f 91       	pop	r16
 6c2:	ff 90       	pop	r15
 6c4:	ef 90       	pop	r14
 6c6:	df 90       	pop	r13
 6c8:	cf 90       	pop	r12
 6ca:	bf 90       	pop	r11
 6cc:	af 90       	pop	r10
 6ce:	9f 90       	pop	r9
 6d0:	8f 90       	pop	r8
 6d2:	7f 90       	pop	r7
 6d4:	6f 90       	pop	r6
 6d6:	5f 90       	pop	r5
 6d8:	4f 90       	pop	r4
 6da:	3f 90       	pop	r3
 6dc:	2f 90       	pop	r2
 6de:	08 95       	ret

000006e0 <strnlen_P>:
 6e0:	fc 01       	movw	r30, r24
 6e2:	05 90       	lpm	r0, Z+
 6e4:	61 50       	subi	r22, 0x01	; 1
 6e6:	70 40       	sbci	r23, 0x00	; 0
 6e8:	01 10       	cpse	r0, r1
 6ea:	d8 f7       	brcc	.-10     	; 0x6e2 <strnlen_P+0x2>
 6ec:	80 95       	com	r24
 6ee:	90 95       	com	r25
 6f0:	8e 0f       	add	r24, r30
 6f2:	9f 1f       	adc	r25, r31
 6f4:	08 95       	ret

000006f6 <strnlen>:
 6f6:	fc 01       	movw	r30, r24
 6f8:	61 50       	subi	r22, 0x01	; 1
 6fa:	70 40       	sbci	r23, 0x00	; 0
 6fc:	01 90       	ld	r0, Z+
 6fe:	01 10       	cpse	r0, r1
 700:	d8 f7       	brcc	.-10     	; 0x6f8 <strnlen+0x2>
 702:	80 95       	com	r24
 704:	90 95       	com	r25
 706:	8e 0f       	add	r24, r30
 708:	9f 1f       	adc	r25, r31
 70a:	08 95       	ret

0000070c <fputc>:
 70c:	0f 93       	push	r16
 70e:	1f 93       	push	r17
 710:	cf 93       	push	r28
 712:	df 93       	push	r29
 714:	fb 01       	movw	r30, r22
 716:	23 81       	ldd	r18, Z+3	; 0x03
 718:	21 fd       	sbrc	r18, 1
 71a:	03 c0       	rjmp	.+6      	; 0x722 <fputc+0x16>
 71c:	8f ef       	ldi	r24, 0xFF	; 255
 71e:	9f ef       	ldi	r25, 0xFF	; 255
 720:	2c c0       	rjmp	.+88     	; 0x77a <fputc+0x6e>
 722:	22 ff       	sbrs	r18, 2
 724:	16 c0       	rjmp	.+44     	; 0x752 <fputc+0x46>
 726:	46 81       	ldd	r20, Z+6	; 0x06
 728:	57 81       	ldd	r21, Z+7	; 0x07
 72a:	24 81       	ldd	r18, Z+4	; 0x04
 72c:	35 81       	ldd	r19, Z+5	; 0x05
 72e:	42 17       	cp	r20, r18
 730:	53 07       	cpc	r21, r19
 732:	44 f4       	brge	.+16     	; 0x744 <fputc+0x38>
 734:	a0 81       	ld	r26, Z
 736:	b1 81       	ldd	r27, Z+1	; 0x01
 738:	9d 01       	movw	r18, r26
 73a:	2f 5f       	subi	r18, 0xFF	; 255
 73c:	3f 4f       	sbci	r19, 0xFF	; 255
 73e:	31 83       	std	Z+1, r19	; 0x01
 740:	20 83       	st	Z, r18
 742:	8c 93       	st	X, r24
 744:	26 81       	ldd	r18, Z+6	; 0x06
 746:	37 81       	ldd	r19, Z+7	; 0x07
 748:	2f 5f       	subi	r18, 0xFF	; 255
 74a:	3f 4f       	sbci	r19, 0xFF	; 255
 74c:	37 83       	std	Z+7, r19	; 0x07
 74e:	26 83       	std	Z+6, r18	; 0x06
 750:	14 c0       	rjmp	.+40     	; 0x77a <fputc+0x6e>
 752:	8b 01       	movw	r16, r22
 754:	ec 01       	movw	r28, r24
 756:	fb 01       	movw	r30, r22
 758:	00 84       	ldd	r0, Z+8	; 0x08
 75a:	f1 85       	ldd	r31, Z+9	; 0x09
 75c:	e0 2d       	mov	r30, r0
 75e:	09 95       	icall
 760:	89 2b       	or	r24, r25
 762:	e1 f6       	brne	.-72     	; 0x71c <fputc+0x10>
 764:	d8 01       	movw	r26, r16
 766:	16 96       	adiw	r26, 0x06	; 6
 768:	8d 91       	ld	r24, X+
 76a:	9c 91       	ld	r25, X
 76c:	17 97       	sbiw	r26, 0x07	; 7
 76e:	01 96       	adiw	r24, 0x01	; 1
 770:	17 96       	adiw	r26, 0x07	; 7
 772:	9c 93       	st	X, r25
 774:	8e 93       	st	-X, r24
 776:	16 97       	sbiw	r26, 0x06	; 6
 778:	ce 01       	movw	r24, r28
 77a:	df 91       	pop	r29
 77c:	cf 91       	pop	r28
 77e:	1f 91       	pop	r17
 780:	0f 91       	pop	r16
 782:	08 95       	ret

00000784 <__ultoa_invert>:
 784:	fa 01       	movw	r30, r20
 786:	aa 27       	eor	r26, r26
 788:	28 30       	cpi	r18, 0x08	; 8
 78a:	51 f1       	breq	.+84     	; 0x7e0 <__ultoa_invert+0x5c>
 78c:	20 31       	cpi	r18, 0x10	; 16
 78e:	81 f1       	breq	.+96     	; 0x7f0 <__ultoa_invert+0x6c>
 790:	e8 94       	clt
 792:	6f 93       	push	r22
 794:	6e 7f       	andi	r22, 0xFE	; 254
 796:	6e 5f       	subi	r22, 0xFE	; 254
 798:	7f 4f       	sbci	r23, 0xFF	; 255
 79a:	8f 4f       	sbci	r24, 0xFF	; 255
 79c:	9f 4f       	sbci	r25, 0xFF	; 255
 79e:	af 4f       	sbci	r26, 0xFF	; 255
 7a0:	b1 e0       	ldi	r27, 0x01	; 1
 7a2:	3e d0       	rcall	.+124    	; 0x820 <__ultoa_invert+0x9c>
 7a4:	b4 e0       	ldi	r27, 0x04	; 4
 7a6:	3c d0       	rcall	.+120    	; 0x820 <__ultoa_invert+0x9c>
 7a8:	67 0f       	add	r22, r23
 7aa:	78 1f       	adc	r23, r24
 7ac:	89 1f       	adc	r24, r25
 7ae:	9a 1f       	adc	r25, r26
 7b0:	a1 1d       	adc	r26, r1
 7b2:	68 0f       	add	r22, r24
 7b4:	79 1f       	adc	r23, r25
 7b6:	8a 1f       	adc	r24, r26
 7b8:	91 1d       	adc	r25, r1
 7ba:	a1 1d       	adc	r26, r1
 7bc:	6a 0f       	add	r22, r26
 7be:	71 1d       	adc	r23, r1
 7c0:	81 1d       	adc	r24, r1
 7c2:	91 1d       	adc	r25, r1
 7c4:	a1 1d       	adc	r26, r1
 7c6:	20 d0       	rcall	.+64     	; 0x808 <__ultoa_invert+0x84>
 7c8:	09 f4       	brne	.+2      	; 0x7cc <__ultoa_invert+0x48>
 7ca:	68 94       	set
 7cc:	3f 91       	pop	r19
 7ce:	2a e0       	ldi	r18, 0x0A	; 10
 7d0:	26 9f       	mul	r18, r22
 7d2:	11 24       	eor	r1, r1
 7d4:	30 19       	sub	r19, r0
 7d6:	30 5d       	subi	r19, 0xD0	; 208
 7d8:	31 93       	st	Z+, r19
 7da:	de f6       	brtc	.-74     	; 0x792 <__ultoa_invert+0xe>
 7dc:	cf 01       	movw	r24, r30
 7de:	08 95       	ret
 7e0:	46 2f       	mov	r20, r22
 7e2:	47 70       	andi	r20, 0x07	; 7
 7e4:	40 5d       	subi	r20, 0xD0	; 208
 7e6:	41 93       	st	Z+, r20
 7e8:	b3 e0       	ldi	r27, 0x03	; 3
 7ea:	0f d0       	rcall	.+30     	; 0x80a <__ultoa_invert+0x86>
 7ec:	c9 f7       	brne	.-14     	; 0x7e0 <__ultoa_invert+0x5c>
 7ee:	f6 cf       	rjmp	.-20     	; 0x7dc <__ultoa_invert+0x58>
 7f0:	46 2f       	mov	r20, r22
 7f2:	4f 70       	andi	r20, 0x0F	; 15
 7f4:	40 5d       	subi	r20, 0xD0	; 208
 7f6:	4a 33       	cpi	r20, 0x3A	; 58
 7f8:	18 f0       	brcs	.+6      	; 0x800 <__ultoa_invert+0x7c>
 7fa:	49 5d       	subi	r20, 0xD9	; 217
 7fc:	31 fd       	sbrc	r19, 1
 7fe:	40 52       	subi	r20, 0x20	; 32
 800:	41 93       	st	Z+, r20
 802:	02 d0       	rcall	.+4      	; 0x808 <__ultoa_invert+0x84>
 804:	a9 f7       	brne	.-22     	; 0x7f0 <__ultoa_invert+0x6c>
 806:	ea cf       	rjmp	.-44     	; 0x7dc <__ultoa_invert+0x58>
 808:	b4 e0       	ldi	r27, 0x04	; 4
 80a:	a6 95       	lsr	r26
 80c:	97 95       	ror	r25
 80e:	87 95       	ror	r24
 810:	77 95       	ror	r23
 812:	67 95       	ror	r22
 814:	ba 95       	dec	r27
 816:	c9 f7       	brne	.-14     	; 0x80a <__ultoa_invert+0x86>
 818:	00 97       	sbiw	r24, 0x00	; 0
 81a:	61 05       	cpc	r22, r1
 81c:	71 05       	cpc	r23, r1
 81e:	08 95       	ret
 820:	9b 01       	movw	r18, r22
 822:	ac 01       	movw	r20, r24
 824:	0a 2e       	mov	r0, r26
 826:	06 94       	lsr	r0
 828:	57 95       	ror	r21
 82a:	47 95       	ror	r20
 82c:	37 95       	ror	r19
 82e:	27 95       	ror	r18
 830:	ba 95       	dec	r27
 832:	c9 f7       	brne	.-14     	; 0x826 <__ultoa_invert+0xa2>
 834:	62 0f       	add	r22, r18
 836:	73 1f       	adc	r23, r19
 838:	84 1f       	adc	r24, r20
 83a:	95 1f       	adc	r25, r21
 83c:	a0 1d       	adc	r26, r0
 83e:	08 95       	ret

00000840 <_exit>:
 840:	f8 94       	cli

00000842 <__stop_program>:
 842:	ff cf       	rjmp	.-2      	; 0x842 <__stop_program>
