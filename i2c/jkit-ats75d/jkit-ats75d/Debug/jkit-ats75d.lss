
jkit-ats75d.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000912  000009a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000912  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800126  00800126  000009cc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c2a  00000000  00000000  00000ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a67  00000000  00000000  0000170a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000666  00000000  00000000  00002171  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  000027d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fe  00000000  00000000  000028d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000019b  00000000  00000000  00002dce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002f69  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c1       	rjmp	.+636    	; 0x2c6 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e1       	ldi	r30, 0x12	; 18
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 32       	cpi	r26, 0x26	; 38
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e2       	ldi	r26, 0x26	; 38
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 33       	cpi	r26, 0x30	; 48
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d7 d0       	rcall	.+430    	; 0x272 <main>
  c4:	24 c4       	rjmp	.+2120   	; 0x90e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <init_twi_port>:
    }
}

void init_twi_port()
{
	DDRC = 0xff; DDRG = 0xff;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	84 bb       	out	0x14, r24	; 20
  cc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRD = 0x00;; PORTD = 3;	
  d0:	11 ba       	out	0x11, r1	; 17
  d2:	83 e0       	ldi	r24, 0x03	; 3
  d4:	82 bb       	out	0x12, r24	; 18
	SFIOR &= ~(1<<PUD); 	
  d6:	80 b5       	in	r24, 0x20	; 32
  d8:	8b 7f       	andi	r24, 0xFB	; 251
  da:	80 bd       	out	0x20, r24	; 32
	TWBR = (F_CPU/F_SCK - 16) / 2;
  dc:	80 ec       	ldi	r24, 0xC0	; 192
  de:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	TWSR = TWSR & 0xfc;	
  e2:	e1 e7       	ldi	r30, 0x71	; 113
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	8c 7f       	andi	r24, 0xFC	; 252
  ea:	80 83       	st	Z, r24
  ec:	08 95       	ret

000000ee <write_twi_1byte_nopreset>:
}

void write_twi_1byte_nopreset(char reg, char data)
{
	TWCR = (1 << TWINT) | (1<<TWSTA) | (1<<TWEN);
  ee:	94 ea       	ldi	r25, 0xA4	; 164
  f0:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x08) ;		
  f4:	e4 e7       	ldi	r30, 0x74	; 116
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	a1 e7       	ldi	r26, 0x71	; 113
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	90 81       	ld	r25, Z
  fe:	99 23       	and	r25, r25
 100:	ec f7       	brge	.-6      	; 0xfc <write_twi_1byte_nopreset+0xe>
 102:	9c 91       	ld	r25, X
 104:	98 7f       	andi	r25, 0xF8	; 248
 106:	98 30       	cpi	r25, 0x08	; 8
 108:	c9 f7       	brne	.-14     	; 0xfc <write_twi_1byte_nopreset+0xe>
	TWDR = ATS75_ADDR | 0;	
 10a:	98 e9       	ldi	r25, 0x98	; 152
 10c:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);	
 110:	94 e8       	ldi	r25, 0x84	; 132
 112:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x18) ;
 116:	e4 e7       	ldi	r30, 0x74	; 116
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	a1 e7       	ldi	r26, 0x71	; 113
 11c:	b0 e0       	ldi	r27, 0x00	; 0
 11e:	90 81       	ld	r25, Z
 120:	99 23       	and	r25, r25
 122:	ec f7       	brge	.-6      	; 0x11e <write_twi_1byte_nopreset+0x30>
 124:	9c 91       	ld	r25, X
 126:	98 7f       	andi	r25, 0xF8	; 248
 128:	98 31       	cpi	r25, 0x18	; 24
 12a:	c9 f7       	brne	.-14     	; 0x11e <write_twi_1byte_nopreset+0x30>
	TWDR = reg;	
 12c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);	
 130:	84 e8       	ldi	r24, 0x84	; 132
 132:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x28) ;
 136:	e4 e7       	ldi	r30, 0x74	; 116
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	a1 e7       	ldi	r26, 0x71	; 113
 13c:	b0 e0       	ldi	r27, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	88 23       	and	r24, r24
 142:	ec f7       	brge	.-6      	; 0x13e <write_twi_1byte_nopreset+0x50>
 144:	8c 91       	ld	r24, X
 146:	88 7f       	andi	r24, 0xF8	; 248
 148:	88 32       	cpi	r24, 0x28	; 40
 14a:	c9 f7       	brne	.-14     	; 0x13e <write_twi_1byte_nopreset+0x50>
	TWDR = data;			
 14c:	60 93 73 00 	sts	0x0073, r22	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);	
 150:	84 e8       	ldi	r24, 0x84	; 132
 152:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x28) ;
 156:	e4 e7       	ldi	r30, 0x74	; 116
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	a1 e7       	ldi	r26, 0x71	; 113
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	88 23       	and	r24, r24
 162:	ec f7       	brge	.-6      	; 0x15e <write_twi_1byte_nopreset+0x70>
 164:	8c 91       	ld	r24, X
 166:	88 7f       	andi	r24, 0xF8	; 248
 168:	88 32       	cpi	r24, 0x28	; 40
 16a:	c9 f7       	brne	.-14     	; 0x15e <write_twi_1byte_nopreset+0x70>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);	
 16c:	84 e9       	ldi	r24, 0x94	; 148
 16e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while ((TWCR & (1 << TWSTO))) ;	
 172:	e4 e7       	ldi	r30, 0x74	; 116
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	80 81       	ld	r24, Z
 178:	84 fd       	sbrc	r24, 4
 17a:	fd cf       	rjmp	.-6      	; 0x176 <write_twi_1byte_nopreset+0x88>
}
 17c:	08 95       	ret

0000017e <read_twi_2byte_nopreset>:

int read_twi_2byte_nopreset(char reg)
{
	char high_byte, low_byte;
	TWCR = (1 << TWINT) | (1<<TWSTA) | (1<<TWEN);
 17e:	94 ea       	ldi	r25, 0xA4	; 164
 180:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x08) ;		
 184:	e4 e7       	ldi	r30, 0x74	; 116
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	a1 e7       	ldi	r26, 0x71	; 113
 18a:	b0 e0       	ldi	r27, 0x00	; 0
 18c:	90 81       	ld	r25, Z
 18e:	99 23       	and	r25, r25
 190:	ec f7       	brge	.-6      	; 0x18c <read_twi_2byte_nopreset+0xe>
 192:	9c 91       	ld	r25, X
 194:	98 7f       	andi	r25, 0xF8	; 248
 196:	98 30       	cpi	r25, 0x08	; 8
 198:	c9 f7       	brne	.-14     	; 0x18c <read_twi_2byte_nopreset+0xe>
	TWDR = ATS75_ADDR | 0;		
 19a:	98 e9       	ldi	r25, 0x98	; 152
 19c:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);		
 1a0:	94 e8       	ldi	r25, 0x84	; 132
 1a2:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x18) ;
 1a6:	e4 e7       	ldi	r30, 0x74	; 116
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	a1 e7       	ldi	r26, 0x71	; 113
 1ac:	b0 e0       	ldi	r27, 0x00	; 0
 1ae:	90 81       	ld	r25, Z
 1b0:	99 23       	and	r25, r25
 1b2:	ec f7       	brge	.-6      	; 0x1ae <read_twi_2byte_nopreset+0x30>
 1b4:	9c 91       	ld	r25, X
 1b6:	98 7f       	andi	r25, 0xF8	; 248
 1b8:	98 31       	cpi	r25, 0x18	; 24
 1ba:	c9 f7       	brne	.-14     	; 0x1ae <read_twi_2byte_nopreset+0x30>
	TWDR = reg;				
 1bc:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);		
 1c0:	84 e8       	ldi	r24, 0x84	; 132
 1c2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x28) ;
 1c6:	e4 e7       	ldi	r30, 0x74	; 116
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	a1 e7       	ldi	r26, 0x71	; 113
 1cc:	b0 e0       	ldi	r27, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	88 23       	and	r24, r24
 1d2:	ec f7       	brge	.-6      	; 0x1ce <read_twi_2byte_nopreset+0x50>
 1d4:	8c 91       	ld	r24, X
 1d6:	88 7f       	andi	r24, 0xF8	; 248
 1d8:	88 32       	cpi	r24, 0x28	; 40
 1da:	c9 f7       	brne	.-14     	; 0x1ce <read_twi_2byte_nopreset+0x50>

	TWCR = (1 << TWINT) | (1<<TWSTA) | (1<<TWEN);
 1dc:	84 ea       	ldi	r24, 0xA4	; 164
 1de:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x10) ;		
 1e2:	e4 e7       	ldi	r30, 0x74	; 116
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	a1 e7       	ldi	r26, 0x71	; 113
 1e8:	b0 e0       	ldi	r27, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	88 23       	and	r24, r24
 1ee:	ec f7       	brge	.-6      	; 0x1ea <read_twi_2byte_nopreset+0x6c>
 1f0:	8c 91       	ld	r24, X
 1f2:	88 7f       	andi	r24, 0xF8	; 248
 1f4:	80 31       	cpi	r24, 0x10	; 16
 1f6:	c9 f7       	brne	.-14     	; 0x1ea <read_twi_2byte_nopreset+0x6c>
	TWDR = ATS75_ADDR | 1;			
 1f8:	89 e9       	ldi	r24, 0x99	; 153
 1fa:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);		
 1fe:	84 e8       	ldi	r24, 0x84	; 132
 200:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x40) ;
 204:	e4 e7       	ldi	r30, 0x74	; 116
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	a1 e7       	ldi	r26, 0x71	; 113
 20a:	b0 e0       	ldi	r27, 0x00	; 0
 20c:	80 81       	ld	r24, Z
 20e:	88 23       	and	r24, r24
 210:	ec f7       	brge	.-6      	; 0x20c <read_twi_2byte_nopreset+0x8e>
 212:	8c 91       	ld	r24, X
 214:	88 7f       	andi	r24, 0xF8	; 248
 216:	80 34       	cpi	r24, 0x40	; 64
 218:	c9 f7       	brne	.-14     	; 0x20c <read_twi_2byte_nopreset+0x8e>
	TWCR = (1 << TWINT) | (1 << TWEN | 1 << TWEA);
 21a:	84 ec       	ldi	r24, 0xC4	; 196
 21c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x50);
 220:	e4 e7       	ldi	r30, 0x74	; 116
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	a1 e7       	ldi	r26, 0x71	; 113
 226:	b0 e0       	ldi	r27, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	88 23       	and	r24, r24
 22c:	ec f7       	brge	.-6      	; 0x228 <read_twi_2byte_nopreset+0xaa>
 22e:	8c 91       	ld	r24, X
 230:	88 7f       	andi	r24, 0xF8	; 248
 232:	80 35       	cpi	r24, 0x50	; 80
 234:	c9 f7       	brne	.-14     	; 0x228 <read_twi_2byte_nopreset+0xaa>
	high_byte = TWDR;			
 236:	20 91 73 00 	lds	r18, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);
 23a:	84 e8       	ldi	r24, 0x84	; 132
 23c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x58);
 240:	e4 e7       	ldi	r30, 0x74	; 116
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	a1 e7       	ldi	r26, 0x71	; 113
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	80 81       	ld	r24, Z
 24a:	88 23       	and	r24, r24
 24c:	ec f7       	brge	.-6      	; 0x248 <read_twi_2byte_nopreset+0xca>
 24e:	8c 91       	ld	r24, X
 250:	88 7f       	andi	r24, 0xF8	; 248
 252:	88 35       	cpi	r24, 0x58	; 88
 254:	c9 f7       	brne	.-14     	; 0x248 <read_twi_2byte_nopreset+0xca>
	low_byte = TWDR;			
 256:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);	
 25a:	84 e9       	ldi	r24, 0x94	; 148
 25c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while ((TWCR & (1 << TWSTO))) ;		 
 260:	e4 e7       	ldi	r30, 0x74	; 116
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	80 81       	ld	r24, Z
 266:	84 fd       	sbrc	r24, 4
 268:	fd cf       	rjmp	.-6      	; 0x264 <read_twi_2byte_nopreset+0xe6>
	return((high_byte<<8) | low_byte);		
 26a:	89 2f       	mov	r24, r25
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	92 2b       	or	r25, r18
 270:	08 95       	ret

00000272 <main>:
int read_twi_2byte_nopreset(char reg);

int main(void)
{
	uint16_t temperature;
	uart0_init();
 272:	75 d0       	rcall	.+234    	; 0x35e <uart0_init>
	init_twi_port();
 274:	29 df       	rcall	.-430    	; 0xc8 <init_twi_port>
 276:	60 e0       	ldi	r22, 0x00	; 0
	write_twi_1byte_nopreset(ATS75_CONFIG_REG, 0x00); 
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	39 df       	rcall	.-398    	; 0xee <write_twi_1byte_nopreset>
 27c:	cc e1       	ldi	r28, 0x1C	; 28

	while (1) 
    {
		temperature = read_twi_2byte_nopreset(ATS75_TEMP_REG);
		printf("%d, %d\r\n", (temperature & 0xFF00) >> 8, temperature & 0x00FF);
 27e:	d1 e0       	ldi	r29, 0x01	; 1
	init_twi_port();
	write_twi_1byte_nopreset(ATS75_CONFIG_REG, 0x00); 

	while (1) 
    {
		temperature = read_twi_2byte_nopreset(ATS75_TEMP_REG);
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	7d df       	rcall	.-262    	; 0x17e <read_twi_2byte_nopreset>
 284:	9c 01       	movw	r18, r24
		printf("%d, %d\r\n", (temperature & 0xFF00) >> 8, temperature & 0x00FF);
 286:	33 27       	eor	r19, r19
 288:	3f 93       	push	r19
 28a:	2f 93       	push	r18
 28c:	1f 92       	push	r1
 28e:	9f 93       	push	r25
 290:	df 93       	push	r29
 292:	cf 93       	push	r28
 294:	7c d0       	rcall	.+248    	; 0x38e <printf>
 296:	9f ef       	ldi	r25, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 298:	29 e6       	ldi	r18, 0x69	; 105
 29a:	88 e1       	ldi	r24, 0x18	; 24
 29c:	91 50       	subi	r25, 0x01	; 1
 29e:	20 40       	sbci	r18, 0x00	; 0
 2a0:	80 40       	sbci	r24, 0x00	; 0
 2a2:	e1 f7       	brne	.-8      	; 0x29c <main+0x2a>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <main+0x34>
 2a6:	00 00       	nop
 2a8:	0f 90       	pop	r0
 2aa:	0f 90       	pop	r0
 2ac:	0f 90       	pop	r0
 2ae:	0f 90       	pop	r0
 2b0:	0f 90       	pop	r0
 2b2:	0f 90       	pop	r0
 2b4:	e5 cf       	rjmp	.-54     	; 0x280 <main+0xe>

000002b6 <uart0_trasnmit>:
	 stdin = &INPUT;
	 stdout = &OUTPUT;
 }

 void uart0_trasnmit(char data) {
	 while(!(UCSR0A & (1 << UDRE0)));
 2b6:	5d 9b       	sbis	0x0b, 5	; 11
 2b8:	fe cf       	rjmp	.-4      	; 0x2b6 <uart0_trasnmit>
	 UDR0 = data;
 2ba:	8c b9       	out	0x0c, r24	; 12
 2bc:	08 95       	ret

000002be <uart0_receive>:
 }

 unsigned char uart0_receive(void) {
	 while(!(UCSR0A & (1 << RXC0)));
 2be:	5f 9b       	sbis	0x0b, 7	; 11
 2c0:	fe cf       	rjmp	.-4      	; 0x2be <uart0_receive>
	 return UDR0;
 2c2:	8c b1       	in	r24, 0x0c	; 12
 }
 2c4:	08 95       	ret

000002c6 <__vector_18>:
FILE INPUT = FDEV_SETUP_STREAM(NULL, uart0_receive, _FDEV_SETUP_READ);

volatile int flag;
volatile int rxdata;

ISR(USART0_RX_vect) {
 2c6:	1f 92       	push	r1
 2c8:	0f 92       	push	r0
 2ca:	0f b6       	in	r0, 0x3f	; 63
 2cc:	0f 92       	push	r0
 2ce:	11 24       	eor	r1, r1
 2d0:	2f 93       	push	r18
 2d2:	3f 93       	push	r19
 2d4:	4f 93       	push	r20
 2d6:	5f 93       	push	r21
 2d8:	8f 93       	push	r24
 2da:	9f 93       	push	r25
	unsigned char tmp = UDR0;
 2dc:	8c b1       	in	r24, 0x0c	; 12
	if(tmp >= '0' && tmp <= '9') {
 2de:	90 ed       	ldi	r25, 0xD0	; 208
 2e0:	98 0f       	add	r25, r24
 2e2:	9a 30       	cpi	r25, 0x0A	; 10
 2e4:	58 f5       	brcc	.+86     	; 0x33c <__vector_18+0x76>
		if(flag) {
 2e6:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__data_end>
 2ea:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__data_end+0x1>
 2ee:	23 2b       	or	r18, r19
 2f0:	c1 f0       	breq	.+48     	; 0x322 <__vector_18+0x5c>
			rxdata = rxdata * 10 + tmp - '0';
 2f2:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <rxdata>
 2f6:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <rxdata+0x1>
 2fa:	a9 01       	movw	r20, r18
 2fc:	44 0f       	add	r20, r20
 2fe:	55 1f       	adc	r21, r21
 300:	22 0f       	add	r18, r18
 302:	33 1f       	adc	r19, r19
 304:	22 0f       	add	r18, r18
 306:	33 1f       	adc	r19, r19
 308:	22 0f       	add	r18, r18
 30a:	33 1f       	adc	r19, r19
 30c:	24 0f       	add	r18, r20
 30e:	35 1f       	adc	r19, r21
 310:	28 0f       	add	r18, r24
 312:	31 1d       	adc	r19, r1
 314:	20 53       	subi	r18, 0x30	; 48
 316:	31 09       	sbc	r19, r1
 318:	30 93 29 01 	sts	0x0129, r19	; 0x800129 <rxdata+0x1>
 31c:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <rxdata>
 320:	13 c0       	rjmp	.+38     	; 0x348 <__vector_18+0x82>
		}
		else {
			rxdata = tmp - '0';
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	c0 97       	sbiw	r24, 0x30	; 48
 326:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <rxdata+0x1>
 32a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <rxdata>
			flag = 1;
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__data_end+0x1>
 336:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
 33a:	06 c0       	rjmp	.+12     	; 0x348 <__vector_18+0x82>
		}
	}
	else if(tmp == '\r') {
 33c:	8d 30       	cpi	r24, 0x0D	; 13
 33e:	21 f4       	brne	.+8      	; 0x348 <__vector_18+0x82>
		flag = 0;
 340:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <__data_end+0x1>
 344:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__data_end>
	}
}
 348:	9f 91       	pop	r25
 34a:	8f 91       	pop	r24
 34c:	5f 91       	pop	r21
 34e:	4f 91       	pop	r20
 350:	3f 91       	pop	r19
 352:	2f 91       	pop	r18
 354:	0f 90       	pop	r0
 356:	0f be       	out	0x3f, r0	; 63
 358:	0f 90       	pop	r0
 35a:	1f 90       	pop	r1
 35c:	18 95       	reti

0000035e <uart0_init>:

 void uart0_init(void) {
	 UBRR0H = 0x00;
 35e:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	 UBRR0L = 16;
 362:	80 e1       	ldi	r24, 0x10	; 16
 364:	89 b9       	out	0x09, r24	; 9
	 
	 UCSR0A |= (1<<U2X0);
 366:	59 9a       	sbi	0x0b, 1	; 11
	 UCSR0C |= 0x06;
 368:	e5 e9       	ldi	r30, 0x95	; 149
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	80 81       	ld	r24, Z
 36e:	86 60       	ori	r24, 0x06	; 6
 370:	80 83       	st	Z, r24

	 UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
 372:	8a b1       	in	r24, 0x0a	; 10
 374:	88 61       	ori	r24, 0x18	; 24
 376:	8a b9       	out	0x0a, r24	; 10

	 stdin = &INPUT;
 378:	ea e2       	ldi	r30, 0x2A	; 42
 37a:	f1 e0       	ldi	r31, 0x01	; 1
 37c:	80 e0       	ldi	r24, 0x00	; 0
 37e:	91 e0       	ldi	r25, 0x01	; 1
 380:	91 83       	std	Z+1, r25	; 0x01
 382:	80 83       	st	Z, r24
	 stdout = &OUTPUT;
 384:	8e e0       	ldi	r24, 0x0E	; 14
 386:	91 e0       	ldi	r25, 0x01	; 1
 388:	93 83       	std	Z+3, r25	; 0x03
 38a:	82 83       	std	Z+2, r24	; 0x02
 38c:	08 95       	ret

0000038e <printf>:
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	cd b7       	in	r28, 0x3d	; 61
 394:	de b7       	in	r29, 0x3e	; 62
 396:	ae 01       	movw	r20, r28
 398:	4b 5f       	subi	r20, 0xFB	; 251
 39a:	5f 4f       	sbci	r21, 0xFF	; 255
 39c:	fa 01       	movw	r30, r20
 39e:	61 91       	ld	r22, Z+
 3a0:	71 91       	ld	r23, Z+
 3a2:	af 01       	movw	r20, r30
 3a4:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <__iob+0x2>
 3a8:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <__iob+0x3>
 3ac:	03 d0       	rcall	.+6      	; 0x3b4 <vfprintf>
 3ae:	df 91       	pop	r29
 3b0:	cf 91       	pop	r28
 3b2:	08 95       	ret

000003b4 <vfprintf>:
 3b4:	2f 92       	push	r2
 3b6:	3f 92       	push	r3
 3b8:	4f 92       	push	r4
 3ba:	5f 92       	push	r5
 3bc:	6f 92       	push	r6
 3be:	7f 92       	push	r7
 3c0:	8f 92       	push	r8
 3c2:	9f 92       	push	r9
 3c4:	af 92       	push	r10
 3c6:	bf 92       	push	r11
 3c8:	cf 92       	push	r12
 3ca:	df 92       	push	r13
 3cc:	ef 92       	push	r14
 3ce:	ff 92       	push	r15
 3d0:	0f 93       	push	r16
 3d2:	1f 93       	push	r17
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	cd b7       	in	r28, 0x3d	; 61
 3da:	de b7       	in	r29, 0x3e	; 62
 3dc:	2b 97       	sbiw	r28, 0x0b	; 11
 3de:	0f b6       	in	r0, 0x3f	; 63
 3e0:	f8 94       	cli
 3e2:	de bf       	out	0x3e, r29	; 62
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	cd bf       	out	0x3d, r28	; 61
 3e8:	6c 01       	movw	r12, r24
 3ea:	7b 01       	movw	r14, r22
 3ec:	8a 01       	movw	r16, r20
 3ee:	fc 01       	movw	r30, r24
 3f0:	17 82       	std	Z+7, r1	; 0x07
 3f2:	16 82       	std	Z+6, r1	; 0x06
 3f4:	83 81       	ldd	r24, Z+3	; 0x03
 3f6:	81 ff       	sbrs	r24, 1
 3f8:	bf c1       	rjmp	.+894    	; 0x778 <__LOCK_REGION_LENGTH__+0x378>
 3fa:	ce 01       	movw	r24, r28
 3fc:	01 96       	adiw	r24, 0x01	; 1
 3fe:	3c 01       	movw	r6, r24
 400:	f6 01       	movw	r30, r12
 402:	93 81       	ldd	r25, Z+3	; 0x03
 404:	f7 01       	movw	r30, r14
 406:	93 fd       	sbrc	r25, 3
 408:	85 91       	lpm	r24, Z+
 40a:	93 ff       	sbrs	r25, 3
 40c:	81 91       	ld	r24, Z+
 40e:	7f 01       	movw	r14, r30
 410:	88 23       	and	r24, r24
 412:	09 f4       	brne	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 414:	ad c1       	rjmp	.+858    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 416:	85 32       	cpi	r24, 0x25	; 37
 418:	39 f4       	brne	.+14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41a:	93 fd       	sbrc	r25, 3
 41c:	85 91       	lpm	r24, Z+
 41e:	93 ff       	sbrs	r25, 3
 420:	81 91       	ld	r24, Z+
 422:	7f 01       	movw	r14, r30
 424:	85 32       	cpi	r24, 0x25	; 37
 426:	21 f4       	brne	.+8      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 428:	b6 01       	movw	r22, r12
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	d6 d1       	rcall	.+940    	; 0x7da <fputc>
 42e:	e8 cf       	rjmp	.-48     	; 0x400 <__LOCK_REGION_LENGTH__>
 430:	91 2c       	mov	r9, r1
 432:	21 2c       	mov	r2, r1
 434:	31 2c       	mov	r3, r1
 436:	ff e1       	ldi	r31, 0x1F	; 31
 438:	f3 15       	cp	r31, r3
 43a:	d8 f0       	brcs	.+54     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 43c:	8b 32       	cpi	r24, 0x2B	; 43
 43e:	79 f0       	breq	.+30     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 440:	38 f4       	brcc	.+14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 442:	80 32       	cpi	r24, 0x20	; 32
 444:	79 f0       	breq	.+30     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 446:	83 32       	cpi	r24, 0x23	; 35
 448:	a1 f4       	brne	.+40     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 44a:	23 2d       	mov	r18, r3
 44c:	20 61       	ori	r18, 0x10	; 16
 44e:	1d c0       	rjmp	.+58     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 450:	8d 32       	cpi	r24, 0x2D	; 45
 452:	61 f0       	breq	.+24     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 454:	80 33       	cpi	r24, 0x30	; 48
 456:	69 f4       	brne	.+26     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 458:	23 2d       	mov	r18, r3
 45a:	21 60       	ori	r18, 0x01	; 1
 45c:	16 c0       	rjmp	.+44     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 45e:	83 2d       	mov	r24, r3
 460:	82 60       	ori	r24, 0x02	; 2
 462:	38 2e       	mov	r3, r24
 464:	e3 2d       	mov	r30, r3
 466:	e4 60       	ori	r30, 0x04	; 4
 468:	3e 2e       	mov	r3, r30
 46a:	2a c0       	rjmp	.+84     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 46c:	f3 2d       	mov	r31, r3
 46e:	f8 60       	ori	r31, 0x08	; 8
 470:	1d c0       	rjmp	.+58     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 472:	37 fc       	sbrc	r3, 7
 474:	2d c0       	rjmp	.+90     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 476:	20 ed       	ldi	r18, 0xD0	; 208
 478:	28 0f       	add	r18, r24
 47a:	2a 30       	cpi	r18, 0x0A	; 10
 47c:	40 f0       	brcs	.+16     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 47e:	8e 32       	cpi	r24, 0x2E	; 46
 480:	b9 f4       	brne	.+46     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 482:	36 fc       	sbrc	r3, 6
 484:	75 c1       	rjmp	.+746    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 486:	23 2d       	mov	r18, r3
 488:	20 64       	ori	r18, 0x40	; 64
 48a:	32 2e       	mov	r3, r18
 48c:	19 c0       	rjmp	.+50     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 48e:	36 fe       	sbrs	r3, 6
 490:	06 c0       	rjmp	.+12     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 492:	8a e0       	ldi	r24, 0x0A	; 10
 494:	98 9e       	mul	r9, r24
 496:	20 0d       	add	r18, r0
 498:	11 24       	eor	r1, r1
 49a:	92 2e       	mov	r9, r18
 49c:	11 c0       	rjmp	.+34     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 49e:	ea e0       	ldi	r30, 0x0A	; 10
 4a0:	2e 9e       	mul	r2, r30
 4a2:	20 0d       	add	r18, r0
 4a4:	11 24       	eor	r1, r1
 4a6:	22 2e       	mov	r2, r18
 4a8:	f3 2d       	mov	r31, r3
 4aa:	f0 62       	ori	r31, 0x20	; 32
 4ac:	3f 2e       	mov	r3, r31
 4ae:	08 c0       	rjmp	.+16     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b0:	8c 36       	cpi	r24, 0x6C	; 108
 4b2:	21 f4       	brne	.+8      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b4:	83 2d       	mov	r24, r3
 4b6:	80 68       	ori	r24, 0x80	; 128
 4b8:	38 2e       	mov	r3, r24
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4bc:	88 36       	cpi	r24, 0x68	; 104
 4be:	41 f4       	brne	.+16     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4c0:	f7 01       	movw	r30, r14
 4c2:	93 fd       	sbrc	r25, 3
 4c4:	85 91       	lpm	r24, Z+
 4c6:	93 ff       	sbrs	r25, 3
 4c8:	81 91       	ld	r24, Z+
 4ca:	7f 01       	movw	r14, r30
 4cc:	81 11       	cpse	r24, r1
 4ce:	b3 cf       	rjmp	.-154    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 4d0:	98 2f       	mov	r25, r24
 4d2:	9f 7d       	andi	r25, 0xDF	; 223
 4d4:	95 54       	subi	r25, 0x45	; 69
 4d6:	93 30       	cpi	r25, 0x03	; 3
 4d8:	28 f4       	brcc	.+10     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4da:	0c 5f       	subi	r16, 0xFC	; 252
 4dc:	1f 4f       	sbci	r17, 0xFF	; 255
 4de:	9f e3       	ldi	r25, 0x3F	; 63
 4e0:	99 83       	std	Y+1, r25	; 0x01
 4e2:	0d c0       	rjmp	.+26     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e4:	83 36       	cpi	r24, 0x63	; 99
 4e6:	31 f0       	breq	.+12     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e8:	83 37       	cpi	r24, 0x73	; 115
 4ea:	71 f0       	breq	.+28     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4ec:	83 35       	cpi	r24, 0x53	; 83
 4ee:	09 f0       	breq	.+2      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4f0:	55 c0       	rjmp	.+170    	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 4f2:	20 c0       	rjmp	.+64     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 4f4:	f8 01       	movw	r30, r16
 4f6:	80 81       	ld	r24, Z
 4f8:	89 83       	std	Y+1, r24	; 0x01
 4fa:	0e 5f       	subi	r16, 0xFE	; 254
 4fc:	1f 4f       	sbci	r17, 0xFF	; 255
 4fe:	88 24       	eor	r8, r8
 500:	83 94       	inc	r8
 502:	91 2c       	mov	r9, r1
 504:	53 01       	movw	r10, r6
 506:	12 c0       	rjmp	.+36     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 508:	28 01       	movw	r4, r16
 50a:	f2 e0       	ldi	r31, 0x02	; 2
 50c:	4f 0e       	add	r4, r31
 50e:	51 1c       	adc	r5, r1
 510:	f8 01       	movw	r30, r16
 512:	a0 80       	ld	r10, Z
 514:	b1 80       	ldd	r11, Z+1	; 0x01
 516:	36 fe       	sbrs	r3, 6
 518:	03 c0       	rjmp	.+6      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 51a:	69 2d       	mov	r22, r9
 51c:	70 e0       	ldi	r23, 0x00	; 0
 51e:	02 c0       	rjmp	.+4      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 520:	6f ef       	ldi	r22, 0xFF	; 255
 522:	7f ef       	ldi	r23, 0xFF	; 255
 524:	c5 01       	movw	r24, r10
 526:	4e d1       	rcall	.+668    	; 0x7c4 <strnlen>
 528:	4c 01       	movw	r8, r24
 52a:	82 01       	movw	r16, r4
 52c:	f3 2d       	mov	r31, r3
 52e:	ff 77       	andi	r31, 0x7F	; 127
 530:	3f 2e       	mov	r3, r31
 532:	15 c0       	rjmp	.+42     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 534:	28 01       	movw	r4, r16
 536:	22 e0       	ldi	r18, 0x02	; 2
 538:	42 0e       	add	r4, r18
 53a:	51 1c       	adc	r5, r1
 53c:	f8 01       	movw	r30, r16
 53e:	a0 80       	ld	r10, Z
 540:	b1 80       	ldd	r11, Z+1	; 0x01
 542:	36 fe       	sbrs	r3, 6
 544:	03 c0       	rjmp	.+6      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 546:	69 2d       	mov	r22, r9
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	02 c0       	rjmp	.+4      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54c:	6f ef       	ldi	r22, 0xFF	; 255
 54e:	7f ef       	ldi	r23, 0xFF	; 255
 550:	c5 01       	movw	r24, r10
 552:	2d d1       	rcall	.+602    	; 0x7ae <strnlen_P>
 554:	4c 01       	movw	r8, r24
 556:	f3 2d       	mov	r31, r3
 558:	f0 68       	ori	r31, 0x80	; 128
 55a:	3f 2e       	mov	r3, r31
 55c:	82 01       	movw	r16, r4
 55e:	33 fc       	sbrc	r3, 3
 560:	19 c0       	rjmp	.+50     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 562:	82 2d       	mov	r24, r2
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	88 16       	cp	r8, r24
 568:	99 06       	cpc	r9, r25
 56a:	a0 f4       	brcc	.+40     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 56c:	b6 01       	movw	r22, r12
 56e:	80 e2       	ldi	r24, 0x20	; 32
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	33 d1       	rcall	.+614    	; 0x7da <fputc>
 574:	2a 94       	dec	r2
 576:	f5 cf       	rjmp	.-22     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 578:	f5 01       	movw	r30, r10
 57a:	37 fc       	sbrc	r3, 7
 57c:	85 91       	lpm	r24, Z+
 57e:	37 fe       	sbrs	r3, 7
 580:	81 91       	ld	r24, Z+
 582:	5f 01       	movw	r10, r30
 584:	b6 01       	movw	r22, r12
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	28 d1       	rcall	.+592    	; 0x7da <fputc>
 58a:	21 10       	cpse	r2, r1
 58c:	2a 94       	dec	r2
 58e:	21 e0       	ldi	r18, 0x01	; 1
 590:	82 1a       	sub	r8, r18
 592:	91 08       	sbc	r9, r1
 594:	81 14       	cp	r8, r1
 596:	91 04       	cpc	r9, r1
 598:	79 f7       	brne	.-34     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 59a:	e1 c0       	rjmp	.+450    	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 59c:	84 36       	cpi	r24, 0x64	; 100
 59e:	11 f0       	breq	.+4      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 5a0:	89 36       	cpi	r24, 0x69	; 105
 5a2:	39 f5       	brne	.+78     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5a4:	f8 01       	movw	r30, r16
 5a6:	37 fe       	sbrs	r3, 7
 5a8:	07 c0       	rjmp	.+14     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5aa:	60 81       	ld	r22, Z
 5ac:	71 81       	ldd	r23, Z+1	; 0x01
 5ae:	82 81       	ldd	r24, Z+2	; 0x02
 5b0:	93 81       	ldd	r25, Z+3	; 0x03
 5b2:	0c 5f       	subi	r16, 0xFC	; 252
 5b4:	1f 4f       	sbci	r17, 0xFF	; 255
 5b6:	08 c0       	rjmp	.+16     	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5b8:	60 81       	ld	r22, Z
 5ba:	71 81       	ldd	r23, Z+1	; 0x01
 5bc:	07 2e       	mov	r0, r23
 5be:	00 0c       	add	r0, r0
 5c0:	88 0b       	sbc	r24, r24
 5c2:	99 0b       	sbc	r25, r25
 5c4:	0e 5f       	subi	r16, 0xFE	; 254
 5c6:	1f 4f       	sbci	r17, 0xFF	; 255
 5c8:	f3 2d       	mov	r31, r3
 5ca:	ff 76       	andi	r31, 0x6F	; 111
 5cc:	3f 2e       	mov	r3, r31
 5ce:	97 ff       	sbrs	r25, 7
 5d0:	09 c0       	rjmp	.+18     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d2:	90 95       	com	r25
 5d4:	80 95       	com	r24
 5d6:	70 95       	com	r23
 5d8:	61 95       	neg	r22
 5da:	7f 4f       	sbci	r23, 0xFF	; 255
 5dc:	8f 4f       	sbci	r24, 0xFF	; 255
 5de:	9f 4f       	sbci	r25, 0xFF	; 255
 5e0:	f0 68       	ori	r31, 0x80	; 128
 5e2:	3f 2e       	mov	r3, r31
 5e4:	2a e0       	ldi	r18, 0x0A	; 10
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	a3 01       	movw	r20, r6
 5ea:	33 d1       	rcall	.+614    	; 0x852 <__ultoa_invert>
 5ec:	88 2e       	mov	r8, r24
 5ee:	86 18       	sub	r8, r6
 5f0:	44 c0       	rjmp	.+136    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 5f2:	85 37       	cpi	r24, 0x75	; 117
 5f4:	31 f4       	brne	.+12     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5f6:	23 2d       	mov	r18, r3
 5f8:	2f 7e       	andi	r18, 0xEF	; 239
 5fa:	b2 2e       	mov	r11, r18
 5fc:	2a e0       	ldi	r18, 0x0A	; 10
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	25 c0       	rjmp	.+74     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 602:	93 2d       	mov	r25, r3
 604:	99 7f       	andi	r25, 0xF9	; 249
 606:	b9 2e       	mov	r11, r25
 608:	8f 36       	cpi	r24, 0x6F	; 111
 60a:	c1 f0       	breq	.+48     	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 60c:	18 f4       	brcc	.+6      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 60e:	88 35       	cpi	r24, 0x58	; 88
 610:	79 f0       	breq	.+30     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 612:	ae c0       	rjmp	.+348    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 614:	80 37       	cpi	r24, 0x70	; 112
 616:	19 f0       	breq	.+6      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 618:	88 37       	cpi	r24, 0x78	; 120
 61a:	21 f0       	breq	.+8      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 61c:	a9 c0       	rjmp	.+338    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 61e:	e9 2f       	mov	r30, r25
 620:	e0 61       	ori	r30, 0x10	; 16
 622:	be 2e       	mov	r11, r30
 624:	b4 fe       	sbrs	r11, 4
 626:	0d c0       	rjmp	.+26     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 628:	fb 2d       	mov	r31, r11
 62a:	f4 60       	ori	r31, 0x04	; 4
 62c:	bf 2e       	mov	r11, r31
 62e:	09 c0       	rjmp	.+18     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 630:	34 fe       	sbrs	r3, 4
 632:	0a c0       	rjmp	.+20     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 634:	29 2f       	mov	r18, r25
 636:	26 60       	ori	r18, 0x06	; 6
 638:	b2 2e       	mov	r11, r18
 63a:	06 c0       	rjmp	.+12     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 63c:	28 e0       	ldi	r18, 0x08	; 8
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	05 c0       	rjmp	.+10     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 642:	20 e1       	ldi	r18, 0x10	; 16
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	02 c0       	rjmp	.+4      	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 648:	20 e1       	ldi	r18, 0x10	; 16
 64a:	32 e0       	ldi	r19, 0x02	; 2
 64c:	f8 01       	movw	r30, r16
 64e:	b7 fe       	sbrs	r11, 7
 650:	07 c0       	rjmp	.+14     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 652:	60 81       	ld	r22, Z
 654:	71 81       	ldd	r23, Z+1	; 0x01
 656:	82 81       	ldd	r24, Z+2	; 0x02
 658:	93 81       	ldd	r25, Z+3	; 0x03
 65a:	0c 5f       	subi	r16, 0xFC	; 252
 65c:	1f 4f       	sbci	r17, 0xFF	; 255
 65e:	06 c0       	rjmp	.+12     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 660:	60 81       	ld	r22, Z
 662:	71 81       	ldd	r23, Z+1	; 0x01
 664:	80 e0       	ldi	r24, 0x00	; 0
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 5f       	subi	r16, 0xFE	; 254
 66a:	1f 4f       	sbci	r17, 0xFF	; 255
 66c:	a3 01       	movw	r20, r6
 66e:	f1 d0       	rcall	.+482    	; 0x852 <__ultoa_invert>
 670:	88 2e       	mov	r8, r24
 672:	86 18       	sub	r8, r6
 674:	fb 2d       	mov	r31, r11
 676:	ff 77       	andi	r31, 0x7F	; 127
 678:	3f 2e       	mov	r3, r31
 67a:	36 fe       	sbrs	r3, 6
 67c:	0d c0       	rjmp	.+26     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 67e:	23 2d       	mov	r18, r3
 680:	2e 7f       	andi	r18, 0xFE	; 254
 682:	a2 2e       	mov	r10, r18
 684:	89 14       	cp	r8, r9
 686:	58 f4       	brcc	.+22     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 688:	34 fe       	sbrs	r3, 4
 68a:	0b c0       	rjmp	.+22     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 68c:	32 fc       	sbrc	r3, 2
 68e:	09 c0       	rjmp	.+18     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 690:	83 2d       	mov	r24, r3
 692:	8e 7e       	andi	r24, 0xEE	; 238
 694:	a8 2e       	mov	r10, r24
 696:	05 c0       	rjmp	.+10     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 698:	b8 2c       	mov	r11, r8
 69a:	a3 2c       	mov	r10, r3
 69c:	03 c0       	rjmp	.+6      	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 69e:	b8 2c       	mov	r11, r8
 6a0:	01 c0       	rjmp	.+2      	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 6a2:	b9 2c       	mov	r11, r9
 6a4:	a4 fe       	sbrs	r10, 4
 6a6:	0f c0       	rjmp	.+30     	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>
 6a8:	fe 01       	movw	r30, r28
 6aa:	e8 0d       	add	r30, r8
 6ac:	f1 1d       	adc	r31, r1
 6ae:	80 81       	ld	r24, Z
 6b0:	80 33       	cpi	r24, 0x30	; 48
 6b2:	21 f4       	brne	.+8      	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 6b4:	9a 2d       	mov	r25, r10
 6b6:	99 7e       	andi	r25, 0xE9	; 233
 6b8:	a9 2e       	mov	r10, r25
 6ba:	09 c0       	rjmp	.+18     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6bc:	a2 fe       	sbrs	r10, 2
 6be:	06 c0       	rjmp	.+12     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6c0:	b3 94       	inc	r11
 6c2:	b3 94       	inc	r11
 6c4:	04 c0       	rjmp	.+8      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6c6:	8a 2d       	mov	r24, r10
 6c8:	86 78       	andi	r24, 0x86	; 134
 6ca:	09 f0       	breq	.+2      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6cc:	b3 94       	inc	r11
 6ce:	a3 fc       	sbrc	r10, 3
 6d0:	10 c0       	rjmp	.+32     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6d2:	a0 fe       	sbrs	r10, 0
 6d4:	06 c0       	rjmp	.+12     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6d6:	b2 14       	cp	r11, r2
 6d8:	80 f4       	brcc	.+32     	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6da:	28 0c       	add	r2, r8
 6dc:	92 2c       	mov	r9, r2
 6de:	9b 18       	sub	r9, r11
 6e0:	0d c0       	rjmp	.+26     	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6e2:	b2 14       	cp	r11, r2
 6e4:	58 f4       	brcc	.+22     	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6e6:	b6 01       	movw	r22, r12
 6e8:	80 e2       	ldi	r24, 0x20	; 32
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	76 d0       	rcall	.+236    	; 0x7da <fputc>
 6ee:	b3 94       	inc	r11
 6f0:	f8 cf       	rjmp	.-16     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6f2:	b2 14       	cp	r11, r2
 6f4:	18 f4       	brcc	.+6      	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6f6:	2b 18       	sub	r2, r11
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6fa:	98 2c       	mov	r9, r8
 6fc:	21 2c       	mov	r2, r1
 6fe:	a4 fe       	sbrs	r10, 4
 700:	0f c0       	rjmp	.+30     	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 702:	b6 01       	movw	r22, r12
 704:	80 e3       	ldi	r24, 0x30	; 48
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	68 d0       	rcall	.+208    	; 0x7da <fputc>
 70a:	a2 fe       	sbrs	r10, 2
 70c:	16 c0       	rjmp	.+44     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 70e:	a1 fc       	sbrc	r10, 1
 710:	03 c0       	rjmp	.+6      	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
 712:	88 e7       	ldi	r24, 0x78	; 120
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	02 c0       	rjmp	.+4      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 718:	88 e5       	ldi	r24, 0x58	; 88
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	b6 01       	movw	r22, r12
 71e:	0c c0       	rjmp	.+24     	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 720:	8a 2d       	mov	r24, r10
 722:	86 78       	andi	r24, 0x86	; 134
 724:	51 f0       	breq	.+20     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 726:	a1 fe       	sbrs	r10, 1
 728:	02 c0       	rjmp	.+4      	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
 72a:	8b e2       	ldi	r24, 0x2B	; 43
 72c:	01 c0       	rjmp	.+2      	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 72e:	80 e2       	ldi	r24, 0x20	; 32
 730:	a7 fc       	sbrc	r10, 7
 732:	8d e2       	ldi	r24, 0x2D	; 45
 734:	b6 01       	movw	r22, r12
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	50 d0       	rcall	.+160    	; 0x7da <fputc>
 73a:	89 14       	cp	r8, r9
 73c:	30 f4       	brcc	.+12     	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 73e:	b6 01       	movw	r22, r12
 740:	80 e3       	ldi	r24, 0x30	; 48
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	4a d0       	rcall	.+148    	; 0x7da <fputc>
 746:	9a 94       	dec	r9
 748:	f8 cf       	rjmp	.-16     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 74a:	8a 94       	dec	r8
 74c:	f3 01       	movw	r30, r6
 74e:	e8 0d       	add	r30, r8
 750:	f1 1d       	adc	r31, r1
 752:	80 81       	ld	r24, Z
 754:	b6 01       	movw	r22, r12
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	40 d0       	rcall	.+128    	; 0x7da <fputc>
 75a:	81 10       	cpse	r8, r1
 75c:	f6 cf       	rjmp	.-20     	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 75e:	22 20       	and	r2, r2
 760:	09 f4       	brne	.+2      	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 762:	4e ce       	rjmp	.-868    	; 0x400 <__LOCK_REGION_LENGTH__>
 764:	b6 01       	movw	r22, r12
 766:	80 e2       	ldi	r24, 0x20	; 32
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	37 d0       	rcall	.+110    	; 0x7da <fputc>
 76c:	2a 94       	dec	r2
 76e:	f7 cf       	rjmp	.-18     	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 770:	f6 01       	movw	r30, r12
 772:	86 81       	ldd	r24, Z+6	; 0x06
 774:	97 81       	ldd	r25, Z+7	; 0x07
 776:	02 c0       	rjmp	.+4      	; 0x77c <__LOCK_REGION_LENGTH__+0x37c>
 778:	8f ef       	ldi	r24, 0xFF	; 255
 77a:	9f ef       	ldi	r25, 0xFF	; 255
 77c:	2b 96       	adiw	r28, 0x0b	; 11
 77e:	0f b6       	in	r0, 0x3f	; 63
 780:	f8 94       	cli
 782:	de bf       	out	0x3e, r29	; 62
 784:	0f be       	out	0x3f, r0	; 63
 786:	cd bf       	out	0x3d, r28	; 61
 788:	df 91       	pop	r29
 78a:	cf 91       	pop	r28
 78c:	1f 91       	pop	r17
 78e:	0f 91       	pop	r16
 790:	ff 90       	pop	r15
 792:	ef 90       	pop	r14
 794:	df 90       	pop	r13
 796:	cf 90       	pop	r12
 798:	bf 90       	pop	r11
 79a:	af 90       	pop	r10
 79c:	9f 90       	pop	r9
 79e:	8f 90       	pop	r8
 7a0:	7f 90       	pop	r7
 7a2:	6f 90       	pop	r6
 7a4:	5f 90       	pop	r5
 7a6:	4f 90       	pop	r4
 7a8:	3f 90       	pop	r3
 7aa:	2f 90       	pop	r2
 7ac:	08 95       	ret

000007ae <strnlen_P>:
 7ae:	fc 01       	movw	r30, r24
 7b0:	05 90       	lpm	r0, Z+
 7b2:	61 50       	subi	r22, 0x01	; 1
 7b4:	70 40       	sbci	r23, 0x00	; 0
 7b6:	01 10       	cpse	r0, r1
 7b8:	d8 f7       	brcc	.-10     	; 0x7b0 <strnlen_P+0x2>
 7ba:	80 95       	com	r24
 7bc:	90 95       	com	r25
 7be:	8e 0f       	add	r24, r30
 7c0:	9f 1f       	adc	r25, r31
 7c2:	08 95       	ret

000007c4 <strnlen>:
 7c4:	fc 01       	movw	r30, r24
 7c6:	61 50       	subi	r22, 0x01	; 1
 7c8:	70 40       	sbci	r23, 0x00	; 0
 7ca:	01 90       	ld	r0, Z+
 7cc:	01 10       	cpse	r0, r1
 7ce:	d8 f7       	brcc	.-10     	; 0x7c6 <strnlen+0x2>
 7d0:	80 95       	com	r24
 7d2:	90 95       	com	r25
 7d4:	8e 0f       	add	r24, r30
 7d6:	9f 1f       	adc	r25, r31
 7d8:	08 95       	ret

000007da <fputc>:
 7da:	0f 93       	push	r16
 7dc:	1f 93       	push	r17
 7de:	cf 93       	push	r28
 7e0:	df 93       	push	r29
 7e2:	fb 01       	movw	r30, r22
 7e4:	23 81       	ldd	r18, Z+3	; 0x03
 7e6:	21 fd       	sbrc	r18, 1
 7e8:	03 c0       	rjmp	.+6      	; 0x7f0 <fputc+0x16>
 7ea:	8f ef       	ldi	r24, 0xFF	; 255
 7ec:	9f ef       	ldi	r25, 0xFF	; 255
 7ee:	2c c0       	rjmp	.+88     	; 0x848 <fputc+0x6e>
 7f0:	22 ff       	sbrs	r18, 2
 7f2:	16 c0       	rjmp	.+44     	; 0x820 <fputc+0x46>
 7f4:	46 81       	ldd	r20, Z+6	; 0x06
 7f6:	57 81       	ldd	r21, Z+7	; 0x07
 7f8:	24 81       	ldd	r18, Z+4	; 0x04
 7fa:	35 81       	ldd	r19, Z+5	; 0x05
 7fc:	42 17       	cp	r20, r18
 7fe:	53 07       	cpc	r21, r19
 800:	44 f4       	brge	.+16     	; 0x812 <fputc+0x38>
 802:	a0 81       	ld	r26, Z
 804:	b1 81       	ldd	r27, Z+1	; 0x01
 806:	9d 01       	movw	r18, r26
 808:	2f 5f       	subi	r18, 0xFF	; 255
 80a:	3f 4f       	sbci	r19, 0xFF	; 255
 80c:	31 83       	std	Z+1, r19	; 0x01
 80e:	20 83       	st	Z, r18
 810:	8c 93       	st	X, r24
 812:	26 81       	ldd	r18, Z+6	; 0x06
 814:	37 81       	ldd	r19, Z+7	; 0x07
 816:	2f 5f       	subi	r18, 0xFF	; 255
 818:	3f 4f       	sbci	r19, 0xFF	; 255
 81a:	37 83       	std	Z+7, r19	; 0x07
 81c:	26 83       	std	Z+6, r18	; 0x06
 81e:	14 c0       	rjmp	.+40     	; 0x848 <fputc+0x6e>
 820:	8b 01       	movw	r16, r22
 822:	ec 01       	movw	r28, r24
 824:	fb 01       	movw	r30, r22
 826:	00 84       	ldd	r0, Z+8	; 0x08
 828:	f1 85       	ldd	r31, Z+9	; 0x09
 82a:	e0 2d       	mov	r30, r0
 82c:	09 95       	icall
 82e:	89 2b       	or	r24, r25
 830:	e1 f6       	brne	.-72     	; 0x7ea <fputc+0x10>
 832:	d8 01       	movw	r26, r16
 834:	16 96       	adiw	r26, 0x06	; 6
 836:	8d 91       	ld	r24, X+
 838:	9c 91       	ld	r25, X
 83a:	17 97       	sbiw	r26, 0x07	; 7
 83c:	01 96       	adiw	r24, 0x01	; 1
 83e:	17 96       	adiw	r26, 0x07	; 7
 840:	9c 93       	st	X, r25
 842:	8e 93       	st	-X, r24
 844:	16 97       	sbiw	r26, 0x06	; 6
 846:	ce 01       	movw	r24, r28
 848:	df 91       	pop	r29
 84a:	cf 91       	pop	r28
 84c:	1f 91       	pop	r17
 84e:	0f 91       	pop	r16
 850:	08 95       	ret

00000852 <__ultoa_invert>:
 852:	fa 01       	movw	r30, r20
 854:	aa 27       	eor	r26, r26
 856:	28 30       	cpi	r18, 0x08	; 8
 858:	51 f1       	breq	.+84     	; 0x8ae <__ultoa_invert+0x5c>
 85a:	20 31       	cpi	r18, 0x10	; 16
 85c:	81 f1       	breq	.+96     	; 0x8be <__ultoa_invert+0x6c>
 85e:	e8 94       	clt
 860:	6f 93       	push	r22
 862:	6e 7f       	andi	r22, 0xFE	; 254
 864:	6e 5f       	subi	r22, 0xFE	; 254
 866:	7f 4f       	sbci	r23, 0xFF	; 255
 868:	8f 4f       	sbci	r24, 0xFF	; 255
 86a:	9f 4f       	sbci	r25, 0xFF	; 255
 86c:	af 4f       	sbci	r26, 0xFF	; 255
 86e:	b1 e0       	ldi	r27, 0x01	; 1
 870:	3e d0       	rcall	.+124    	; 0x8ee <__ultoa_invert+0x9c>
 872:	b4 e0       	ldi	r27, 0x04	; 4
 874:	3c d0       	rcall	.+120    	; 0x8ee <__ultoa_invert+0x9c>
 876:	67 0f       	add	r22, r23
 878:	78 1f       	adc	r23, r24
 87a:	89 1f       	adc	r24, r25
 87c:	9a 1f       	adc	r25, r26
 87e:	a1 1d       	adc	r26, r1
 880:	68 0f       	add	r22, r24
 882:	79 1f       	adc	r23, r25
 884:	8a 1f       	adc	r24, r26
 886:	91 1d       	adc	r25, r1
 888:	a1 1d       	adc	r26, r1
 88a:	6a 0f       	add	r22, r26
 88c:	71 1d       	adc	r23, r1
 88e:	81 1d       	adc	r24, r1
 890:	91 1d       	adc	r25, r1
 892:	a1 1d       	adc	r26, r1
 894:	20 d0       	rcall	.+64     	; 0x8d6 <__ultoa_invert+0x84>
 896:	09 f4       	brne	.+2      	; 0x89a <__ultoa_invert+0x48>
 898:	68 94       	set
 89a:	3f 91       	pop	r19
 89c:	2a e0       	ldi	r18, 0x0A	; 10
 89e:	26 9f       	mul	r18, r22
 8a0:	11 24       	eor	r1, r1
 8a2:	30 19       	sub	r19, r0
 8a4:	30 5d       	subi	r19, 0xD0	; 208
 8a6:	31 93       	st	Z+, r19
 8a8:	de f6       	brtc	.-74     	; 0x860 <__ultoa_invert+0xe>
 8aa:	cf 01       	movw	r24, r30
 8ac:	08 95       	ret
 8ae:	46 2f       	mov	r20, r22
 8b0:	47 70       	andi	r20, 0x07	; 7
 8b2:	40 5d       	subi	r20, 0xD0	; 208
 8b4:	41 93       	st	Z+, r20
 8b6:	b3 e0       	ldi	r27, 0x03	; 3
 8b8:	0f d0       	rcall	.+30     	; 0x8d8 <__ultoa_invert+0x86>
 8ba:	c9 f7       	brne	.-14     	; 0x8ae <__ultoa_invert+0x5c>
 8bc:	f6 cf       	rjmp	.-20     	; 0x8aa <__ultoa_invert+0x58>
 8be:	46 2f       	mov	r20, r22
 8c0:	4f 70       	andi	r20, 0x0F	; 15
 8c2:	40 5d       	subi	r20, 0xD0	; 208
 8c4:	4a 33       	cpi	r20, 0x3A	; 58
 8c6:	18 f0       	brcs	.+6      	; 0x8ce <__ultoa_invert+0x7c>
 8c8:	49 5d       	subi	r20, 0xD9	; 217
 8ca:	31 fd       	sbrc	r19, 1
 8cc:	40 52       	subi	r20, 0x20	; 32
 8ce:	41 93       	st	Z+, r20
 8d0:	02 d0       	rcall	.+4      	; 0x8d6 <__ultoa_invert+0x84>
 8d2:	a9 f7       	brne	.-22     	; 0x8be <__ultoa_invert+0x6c>
 8d4:	ea cf       	rjmp	.-44     	; 0x8aa <__ultoa_invert+0x58>
 8d6:	b4 e0       	ldi	r27, 0x04	; 4
 8d8:	a6 95       	lsr	r26
 8da:	97 95       	ror	r25
 8dc:	87 95       	ror	r24
 8de:	77 95       	ror	r23
 8e0:	67 95       	ror	r22
 8e2:	ba 95       	dec	r27
 8e4:	c9 f7       	brne	.-14     	; 0x8d8 <__ultoa_invert+0x86>
 8e6:	00 97       	sbiw	r24, 0x00	; 0
 8e8:	61 05       	cpc	r22, r1
 8ea:	71 05       	cpc	r23, r1
 8ec:	08 95       	ret
 8ee:	9b 01       	movw	r18, r22
 8f0:	ac 01       	movw	r20, r24
 8f2:	0a 2e       	mov	r0, r26
 8f4:	06 94       	lsr	r0
 8f6:	57 95       	ror	r21
 8f8:	47 95       	ror	r20
 8fa:	37 95       	ror	r19
 8fc:	27 95       	ror	r18
 8fe:	ba 95       	dec	r27
 900:	c9 f7       	brne	.-14     	; 0x8f4 <__ultoa_invert+0xa2>
 902:	62 0f       	add	r22, r18
 904:	73 1f       	adc	r23, r19
 906:	84 1f       	adc	r24, r20
 908:	95 1f       	adc	r25, r21
 90a:	a0 1d       	adc	r26, r0
 90c:	08 95       	ret

0000090e <_exit>:
 90e:	f8 94       	cli

00000910 <__stop_program>:
 910:	ff cf       	rjmp	.-2      	; 0x910 <__stop_program>
