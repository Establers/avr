
interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000196  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000142  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000834  00000000  00000000  00000228  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078f  00000000  00000000  00000a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000261  00000000  00000000  000011eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000144c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ac  00000000  00000000  00001480  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  0000182c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001874  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	51 c0       	rjmp	.+162    	; 0x13e <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>

int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	00 d0       	rcall	.+0      	; 0xa4 <main+0x6>
  a4:	00 d0       	rcall	.+0      	; 0xa6 <main+0x8>
  a6:	cd b7       	in	r28, 0x3d	; 61
  a8:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0xff;
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	8a bb       	out	0x1a, r24	; 26

    while (1) 
    {
		volatile int i, j;
		PORTA = 0xff;
  ae:	2f ef       	ldi	r18, 0xFF	; 255
  b0:	2b bb       	out	0x1b, r18	; 27
		for(i=0; i<1000; i++) for(j=0; j<1000; j++) {}
  b2:	1c 82       	std	Y+4, r1	; 0x04
  b4:	1b 82       	std	Y+3, r1	; 0x03
  b6:	8b 81       	ldd	r24, Y+3	; 0x03
  b8:	9c 81       	ldd	r25, Y+4	; 0x04
  ba:	88 3e       	cpi	r24, 0xE8	; 232
  bc:	93 40       	sbci	r25, 0x03	; 3
  be:	dc f4       	brge	.+54     	; 0xf6 <main+0x58>
  c0:	1a 82       	std	Y+2, r1	; 0x02
  c2:	19 82       	std	Y+1, r1	; 0x01
  c4:	89 81       	ldd	r24, Y+1	; 0x01
  c6:	9a 81       	ldd	r25, Y+2	; 0x02
  c8:	88 3e       	cpi	r24, 0xE8	; 232
  ca:	93 40       	sbci	r25, 0x03	; 3
  cc:	54 f4       	brge	.+20     	; 0xe2 <main+0x44>
  ce:	89 81       	ldd	r24, Y+1	; 0x01
  d0:	9a 81       	ldd	r25, Y+2	; 0x02
  d2:	01 96       	adiw	r24, 0x01	; 1
  d4:	9a 83       	std	Y+2, r25	; 0x02
  d6:	89 83       	std	Y+1, r24	; 0x01
  d8:	89 81       	ldd	r24, Y+1	; 0x01
  da:	9a 81       	ldd	r25, Y+2	; 0x02
  dc:	88 3e       	cpi	r24, 0xE8	; 232
  de:	93 40       	sbci	r25, 0x03	; 3
  e0:	b4 f3       	brlt	.-20     	; 0xce <main+0x30>
  e2:	8b 81       	ldd	r24, Y+3	; 0x03
  e4:	9c 81       	ldd	r25, Y+4	; 0x04
  e6:	01 96       	adiw	r24, 0x01	; 1
  e8:	9c 83       	std	Y+4, r25	; 0x04
  ea:	8b 83       	std	Y+3, r24	; 0x03
  ec:	8b 81       	ldd	r24, Y+3	; 0x03
  ee:	9c 81       	ldd	r25, Y+4	; 0x04
  f0:	88 3e       	cpi	r24, 0xE8	; 232
  f2:	93 40       	sbci	r25, 0x03	; 3
  f4:	2c f3       	brlt	.-54     	; 0xc0 <main+0x22>
		PORTA = 0x00;
  f6:	1b ba       	out	0x1b, r1	; 27
		for(i=0; i<1000; i++) for(j=0; j<1000; j++) {}
  f8:	1c 82       	std	Y+4, r1	; 0x04
  fa:	1b 82       	std	Y+3, r1	; 0x03
  fc:	8b 81       	ldd	r24, Y+3	; 0x03
  fe:	9c 81       	ldd	r25, Y+4	; 0x04
 100:	88 3e       	cpi	r24, 0xE8	; 232
 102:	93 40       	sbci	r25, 0x03	; 3
 104:	ac f6       	brge	.-86     	; 0xb0 <main+0x12>
 106:	1a 82       	std	Y+2, r1	; 0x02
 108:	19 82       	std	Y+1, r1	; 0x01
 10a:	89 81       	ldd	r24, Y+1	; 0x01
 10c:	9a 81       	ldd	r25, Y+2	; 0x02
 10e:	88 3e       	cpi	r24, 0xE8	; 232
 110:	93 40       	sbci	r25, 0x03	; 3
 112:	54 f4       	brge	.+20     	; 0x128 <main+0x8a>
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	9a 81       	ldd	r25, Y+2	; 0x02
 118:	01 96       	adiw	r24, 0x01	; 1
 11a:	9a 83       	std	Y+2, r25	; 0x02
 11c:	89 83       	std	Y+1, r24	; 0x01
 11e:	89 81       	ldd	r24, Y+1	; 0x01
 120:	9a 81       	ldd	r25, Y+2	; 0x02
 122:	88 3e       	cpi	r24, 0xE8	; 232
 124:	93 40       	sbci	r25, 0x03	; 3
 126:	b4 f3       	brlt	.-20     	; 0x114 <main+0x76>
 128:	8b 81       	ldd	r24, Y+3	; 0x03
 12a:	9c 81       	ldd	r25, Y+4	; 0x04
 12c:	01 96       	adiw	r24, 0x01	; 1
 12e:	9c 83       	std	Y+4, r25	; 0x04
 130:	8b 83       	std	Y+3, r24	; 0x03
 132:	8b 81       	ldd	r24, Y+3	; 0x03
 134:	9c 81       	ldd	r25, Y+4	; 0x04
 136:	88 3e       	cpi	r24, 0xE8	; 232
 138:	93 40       	sbci	r25, 0x03	; 3
 13a:	2c f3       	brlt	.-54     	; 0x106 <main+0x68>
 13c:	b9 cf       	rjmp	.-142    	; 0xb0 <main+0x12>

0000013e <_exit>:
 13e:	f8 94       	cli

00000140 <__stop_program>:
 140:	ff cf       	rjmp	.-2      	; 0x140 <__stop_program>
