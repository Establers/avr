
forclass.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00000958  000009ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000958  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800130  00800130  00000a1c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cb3  00000000  00000000  00000b48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8a  00000000  00000000  000017fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005d3  00000000  00000000  00002285  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  00002858  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000509  00000000  00000000  000029ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002d2  00000000  00000000  00002eb5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003187  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	91 c0       	rjmp	.+290    	; 0x130 <__vector_3>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c1       	rjmp	.+610    	; 0x2ac <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e5       	ldi	r30, 0x58	; 88
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 33       	cpi	r26, 0x30	; 48
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e3       	ldi	r26, 0x30	; 48
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 34       	cpi	r26, 0x40	; 64
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	47 c4       	rjmp	.+2190   	; 0x954 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:

extern volatile int bcnt;

int main(void)
{
	uart0_init();
  c8:	3d d1       	rcall	.+634    	; 0x344 <uart0_init>
	TCCR0 |= (1<<CS02) | (1<<CS01) | (1<<CS00);
  ca:	83 b7       	in	r24, 0x33	; 51
  cc:	87 60       	ori	r24, 0x07	; 7
	exit3_init();
  ce:	83 bf       	out	0x33, r24	; 51
  d0:	07 d0       	rcall	.+14     	; 0xe0 <exit3_init>
	bcnt = 32;
  d2:	80 e2       	ldi	r24, 0x20	; 32
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <bcnt+0x1>
  da:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <bcnt>
  de:	ff cf       	rjmp	.-2      	; 0xde <main+0x16>

000000e0 <exit3_init>:
	TCNT0 = 0;
}

void exit3_init(void)
{
	EIMSK |= (1<<INT2);
  e0:	89 b7       	in	r24, 0x39	; 57
  e2:	84 60       	ori	r24, 0x04	; 4
  e4:	89 bf       	out	0x39, r24	; 57
	EICRA |= (1<<ISC21);
  e6:	ea e6       	ldi	r30, 0x6A	; 106
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	80 62       	ori	r24, 0x20	; 32
  ee:	80 83       	st	Z, r24
	sei();
  f0:	78 94       	sei
  f2:	08 95       	ret

000000f4 <print_receive_data>:
}

void print_receive_data(int repeat)
{
	if(repeat) {
  f4:	89 2b       	or	r24, r25
  f6:	21 f0       	breq	.+8      	; 0x100 <print_receive_data+0xc>
		printf("repeat...\r\n");
  f8:	8c e1       	ldi	r24, 0x1C	; 28
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	4e c1       	rjmp	.+668    	; 0x39a <puts>
  fe:	08 95       	ret
	}
	else {
		printf("0x%lX\r\n", receiveData);
 100:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
 104:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <__data_end+0x1>
 108:	a0 91 32 01 	lds	r26, 0x0132	; 0x800132 <__data_end+0x2>
 10c:	b0 91 33 01 	lds	r27, 0x0133	; 0x800133 <__data_end+0x3>
 110:	bf 93       	push	r27
 112:	af 93       	push	r26
 114:	9f 93       	push	r25
 116:	8f 93       	push	r24
 118:	87 e2       	ldi	r24, 0x27	; 39
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	9f 93       	push	r25
 11e:	8f 93       	push	r24
 120:	29 d1       	rcall	.+594    	; 0x374 <printf>
 122:	0f 90       	pop	r0
 124:	0f 90       	pop	r0
 126:	0f 90       	pop	r0
 128:	0f 90       	pop	r0
 12a:	0f 90       	pop	r0
 12c:	0f 90       	pop	r0
 12e:	08 95       	ret

00000130 <__vector_3>:

volatile int bcnt;
volatile unsigned long receiveData;

ISR(INT2_vect)
{
 130:	1f 92       	push	r1
 132:	0f 92       	push	r0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
 13a:	0b b6       	in	r0, 0x3b	; 59
 13c:	0f 92       	push	r0
 13e:	2f 93       	push	r18
 140:	3f 93       	push	r19
 142:	4f 93       	push	r20
 144:	5f 93       	push	r21
 146:	6f 93       	push	r22
 148:	7f 93       	push	r23
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
 14e:	af 93       	push	r26
 150:	bf 93       	push	r27
 152:	ef 93       	push	r30
 154:	ff 93       	push	r31
	int tcnt = TCNT0;
 156:	82 b7       	in	r24, 0x32	; 50
	int isOVF = TIFR & (1<<TOV0);
 158:	96 b7       	in	r25, 0x36	; 54
 15a:	29 2f       	mov	r18, r25
 15c:	21 70       	andi	r18, 0x01	; 1
 15e:	30 e0       	ldi	r19, 0x00	; 0

	if(bcnt == 32) {
 160:	40 91 34 01 	lds	r20, 0x0134	; 0x800134 <bcnt>
 164:	50 91 35 01 	lds	r21, 0x0135	; 0x800135 <bcnt+0x1>
 168:	40 32       	cpi	r20, 0x20	; 32
 16a:	51 05       	cpc	r21, r1
 16c:	39 f5       	brne	.+78     	; 0x1bc <__vector_3+0x8c>
		if((tcnt > 201) && (tcnt < 221) && (isOVF == 0)) {
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	ac 01       	movw	r20, r24
 172:	4a 5c       	subi	r20, 0xCA	; 202
 174:	51 09       	sbc	r21, r1
 176:	43 31       	cpi	r20, 0x13	; 19
 178:	51 05       	cpc	r21, r1
 17a:	78 f4       	brcc	.+30     	; 0x19a <__vector_3+0x6a>
 17c:	23 2b       	or	r18, r19
 17e:	b9 f4       	brne	.+46     	; 0x1ae <__vector_3+0x7e>
			bcnt = 0;
 180:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <bcnt+0x1>
 184:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <bcnt>
			receiveData = 0;
 188:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__data_end>
 18c:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <__data_end+0x1>
 190:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <__data_end+0x2>
 194:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <__data_end+0x3>
 198:	6a c0       	rjmp	.+212    	; 0x26e <__vector_3+0x13e>
		}
		else if((tcnt > 166) && (tcnt < 186) && (isOVF == 0)) {
 19a:	87 5a       	subi	r24, 0xA7	; 167
 19c:	91 09       	sbc	r25, r1
 19e:	43 97       	sbiw	r24, 0x13	; 19
 1a0:	30 f4       	brcc	.+12     	; 0x1ae <__vector_3+0x7e>
 1a2:	23 2b       	or	r18, r19
 1a4:	21 f4       	brne	.+8      	; 0x1ae <__vector_3+0x7e>
			print_receive_data(1);
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	a4 df       	rcall	.-184    	; 0xf4 <print_receive_data>
 1ac:	60 c0       	rjmp	.+192    	; 0x26e <__vector_3+0x13e>
		}
		else {
			bcnt = 32;
 1ae:	80 e2       	ldi	r24, 0x20	; 32
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <bcnt+0x1>
 1b6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <bcnt>
 1ba:	59 c0       	rjmp	.+178    	; 0x26e <__vector_3+0x13e>
volatile int bcnt;
volatile unsigned long receiveData;

ISR(INT2_vect)
{
	int tcnt = TCNT0;
 1bc:	90 e0       	ldi	r25, 0x00	; 0
		else {
			bcnt = 32;
		}
	}
	else {
		if(tcnt > 40 || (isOVF != 0)) {
 1be:	89 32       	cpi	r24, 0x29	; 41
 1c0:	91 05       	cpc	r25, r1
 1c2:	14 f4       	brge	.+4      	; 0x1c8 <__vector_3+0x98>
 1c4:	23 2b       	or	r18, r19
 1c6:	39 f0       	breq	.+14     	; 0x1d6 <__vector_3+0xa6>
			bcnt = 32;
 1c8:	80 e2       	ldi	r24, 0x20	; 32
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <bcnt+0x1>
 1d0:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <bcnt>
 1d4:	4c c0       	rjmp	.+152    	; 0x26e <__vector_3+0x13e>
		}
		else {
			if(tcnt > 26) { 
 1d6:	4b 97       	sbiw	r24, 0x1b	; 27
 1d8:	c4 f0       	brlt	.+48     	; 0x20a <__vector_3+0xda>
				receiveData = (receiveData << 1) + 1;
 1da:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
 1de:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <__data_end+0x1>
 1e2:	a0 91 32 01 	lds	r26, 0x0132	; 0x800132 <__data_end+0x2>
 1e6:	b0 91 33 01 	lds	r27, 0x0133	; 0x800133 <__data_end+0x3>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	aa 1f       	adc	r26, r26
 1f0:	bb 1f       	adc	r27, r27
 1f2:	01 96       	adiw	r24, 0x01	; 1
 1f4:	a1 1d       	adc	r26, r1
 1f6:	b1 1d       	adc	r27, r1
 1f8:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
 1fc:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <__data_end+0x1>
 200:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <__data_end+0x2>
 204:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <__data_end+0x3>
 208:	14 c0       	rjmp	.+40     	; 0x232 <__vector_3+0x102>
			}
			else {
				receiveData = (receiveData << 1);
 20a:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
 20e:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <__data_end+0x1>
 212:	a0 91 32 01 	lds	r26, 0x0132	; 0x800132 <__data_end+0x2>
 216:	b0 91 33 01 	lds	r27, 0x0133	; 0x800133 <__data_end+0x3>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	aa 1f       	adc	r26, r26
 220:	bb 1f       	adc	r27, r27
 222:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
 226:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <__data_end+0x1>
 22a:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <__data_end+0x2>
 22e:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <__data_end+0x3>
			}

			if(bcnt == 31) {
 232:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <bcnt>
 236:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <bcnt+0x1>
 23a:	4f 97       	sbiw	r24, 0x1f	; 31
 23c:	79 f4       	brne	.+30     	; 0x25c <__vector_3+0x12c>
				print_receive_data(0);
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	58 df       	rcall	.-336    	; 0xf4 <print_receive_data>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 244:	2f ef       	ldi	r18, 0xFF	; 255
 246:	80 e7       	ldi	r24, 0x70	; 112
 248:	92 e0       	ldi	r25, 0x02	; 2
 24a:	21 50       	subi	r18, 0x01	; 1
 24c:	80 40       	sbci	r24, 0x00	; 0
 24e:	90 40       	sbci	r25, 0x00	; 0
 250:	e1 f7       	brne	.-8      	; 0x24a <__vector_3+0x11a>
 252:	00 c0       	rjmp	.+0      	; 0x254 <__vector_3+0x124>
 254:	00 00       	nop
				_delay_ms(50);
				EIFR |= (1<<INTF2);		
 256:	88 b7       	in	r24, 0x38	; 56
 258:	84 60       	ori	r24, 0x04	; 4
 25a:	88 bf       	out	0x38, r24	; 56
			}

			bcnt += 1;
 25c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <bcnt>
 260:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <bcnt+0x1>
 264:	01 96       	adiw	r24, 0x01	; 1
 266:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <bcnt+0x1>
 26a:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <bcnt>
		}
	}

	TIFR |= (1<<TOV0);
 26e:	86 b7       	in	r24, 0x36	; 54
 270:	81 60       	ori	r24, 0x01	; 1
 272:	86 bf       	out	0x36, r24	; 54
	TCNT0 = 0;
 274:	12 be       	out	0x32, r1	; 50
}
 276:	ff 91       	pop	r31
 278:	ef 91       	pop	r30
 27a:	bf 91       	pop	r27
 27c:	af 91       	pop	r26
 27e:	9f 91       	pop	r25
 280:	8f 91       	pop	r24
 282:	7f 91       	pop	r23
 284:	6f 91       	pop	r22
 286:	5f 91       	pop	r21
 288:	4f 91       	pop	r20
 28a:	3f 91       	pop	r19
 28c:	2f 91       	pop	r18
 28e:	0f 90       	pop	r0
 290:	0b be       	out	0x3b, r0	; 59
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <uart0_trasnmit>:
	 stdin = &INPUT;
	 stdout = &OUTPUT;
 }

 void uart0_trasnmit(char data) {
	 while(!(UCSR0A & (1 << UDRE0)));
 29c:	5d 9b       	sbis	0x0b, 5	; 11
 29e:	fe cf       	rjmp	.-4      	; 0x29c <uart0_trasnmit>
	 UDR0 = data;
 2a0:	8c b9       	out	0x0c, r24	; 12
 2a2:	08 95       	ret

000002a4 <uart0_receive>:
 }

 unsigned char uart0_receive(void) {
	 while(!(UCSR0A & (1 << RXC0)));
 2a4:	5f 9b       	sbis	0x0b, 7	; 11
 2a6:	fe cf       	rjmp	.-4      	; 0x2a4 <uart0_receive>
	 return UDR0;
 2a8:	8c b1       	in	r24, 0x0c	; 12
 }
 2aa:	08 95       	ret

000002ac <__vector_18>:
FILE INPUT = FDEV_SETUP_STREAM(NULL, uart0_receive, _FDEV_SETUP_READ);

volatile int flag;
volatile int rxdata;

ISR(USART0_RX_vect) {
 2ac:	1f 92       	push	r1
 2ae:	0f 92       	push	r0
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	0f 92       	push	r0
 2b4:	11 24       	eor	r1, r1
 2b6:	2f 93       	push	r18
 2b8:	3f 93       	push	r19
 2ba:	4f 93       	push	r20
 2bc:	5f 93       	push	r21
 2be:	8f 93       	push	r24
 2c0:	9f 93       	push	r25
	unsigned char tmp = UDR0;
 2c2:	8c b1       	in	r24, 0x0c	; 12
	if(tmp >= '0' && tmp <= '9') {
 2c4:	90 ed       	ldi	r25, 0xD0	; 208
 2c6:	98 0f       	add	r25, r24
 2c8:	9a 30       	cpi	r25, 0x0A	; 10
 2ca:	58 f5       	brcc	.+86     	; 0x322 <__vector_18+0x76>
		if(flag) {
 2cc:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <flag>
 2d0:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <flag+0x1>
 2d4:	23 2b       	or	r18, r19
 2d6:	c1 f0       	breq	.+48     	; 0x308 <__vector_18+0x5c>
			rxdata = rxdata * 10 + tmp - '0';
 2d8:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <rxdata>
 2dc:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <rxdata+0x1>
 2e0:	a9 01       	movw	r20, r18
 2e2:	44 0f       	add	r20, r20
 2e4:	55 1f       	adc	r21, r21
 2e6:	22 0f       	add	r18, r18
 2e8:	33 1f       	adc	r19, r19
 2ea:	22 0f       	add	r18, r18
 2ec:	33 1f       	adc	r19, r19
 2ee:	22 0f       	add	r18, r18
 2f0:	33 1f       	adc	r19, r19
 2f2:	24 0f       	add	r18, r20
 2f4:	35 1f       	adc	r19, r21
 2f6:	28 0f       	add	r18, r24
 2f8:	31 1d       	adc	r19, r1
 2fa:	20 53       	subi	r18, 0x30	; 48
 2fc:	31 09       	sbc	r19, r1
 2fe:	30 93 39 01 	sts	0x0139, r19	; 0x800139 <rxdata+0x1>
 302:	20 93 38 01 	sts	0x0138, r18	; 0x800138 <rxdata>
 306:	13 c0       	rjmp	.+38     	; 0x32e <__vector_18+0x82>
		}
		else {
			rxdata = tmp - '0';
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	c0 97       	sbiw	r24, 0x30	; 48
 30c:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <rxdata+0x1>
 310:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <rxdata>
			flag = 1;
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <flag+0x1>
 31c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <flag>
 320:	06 c0       	rjmp	.+12     	; 0x32e <__vector_18+0x82>
		}
	}
	else if(tmp == '\r') {
 322:	8d 30       	cpi	r24, 0x0D	; 13
 324:	21 f4       	brne	.+8      	; 0x32e <__vector_18+0x82>
		flag = 0;
 326:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <flag+0x1>
 32a:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <flag>
	}
}
 32e:	9f 91       	pop	r25
 330:	8f 91       	pop	r24
 332:	5f 91       	pop	r21
 334:	4f 91       	pop	r20
 336:	3f 91       	pop	r19
 338:	2f 91       	pop	r18
 33a:	0f 90       	pop	r0
 33c:	0f be       	out	0x3f, r0	; 63
 33e:	0f 90       	pop	r0
 340:	1f 90       	pop	r1
 342:	18 95       	reti

00000344 <uart0_init>:

 void uart0_init(void) {
	 UBRR0H = 0x00;
 344:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	 UBRR0L = 16;
 348:	80 e1       	ldi	r24, 0x10	; 16
 34a:	89 b9       	out	0x09, r24	; 9
	 
	 UCSR0A |= (1<<U2X0);
 34c:	59 9a       	sbi	0x0b, 1	; 11
	 UCSR0C |= 0x06;
 34e:	e5 e9       	ldi	r30, 0x95	; 149
 350:	f0 e0       	ldi	r31, 0x00	; 0
 352:	80 81       	ld	r24, Z
 354:	86 60       	ori	r24, 0x06	; 6
 356:	80 83       	st	Z, r24

	 UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
 358:	8a b1       	in	r24, 0x0a	; 10
 35a:	88 61       	ori	r24, 0x18	; 24
 35c:	8a b9       	out	0x0a, r24	; 10

	 stdin = &INPUT;
 35e:	ea e3       	ldi	r30, 0x3A	; 58
 360:	f1 e0       	ldi	r31, 0x01	; 1
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	91 e0       	ldi	r25, 0x01	; 1
 366:	91 83       	std	Z+1, r25	; 0x01
 368:	80 83       	st	Z, r24
	 stdout = &OUTPUT;
 36a:	8e e0       	ldi	r24, 0x0E	; 14
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	93 83       	std	Z+3, r25	; 0x03
 370:	82 83       	std	Z+2, r24	; 0x02
 372:	08 95       	ret

00000374 <printf>:
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	cd b7       	in	r28, 0x3d	; 61
 37a:	de b7       	in	r29, 0x3e	; 62
 37c:	ae 01       	movw	r20, r28
 37e:	4b 5f       	subi	r20, 0xFB	; 251
 380:	5f 4f       	sbci	r21, 0xFF	; 255
 382:	fa 01       	movw	r30, r20
 384:	61 91       	ld	r22, Z+
 386:	71 91       	ld	r23, Z+
 388:	af 01       	movw	r20, r30
 38a:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__iob+0x2>
 38e:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <__iob+0x3>
 392:	33 d0       	rcall	.+102    	; 0x3fa <vfprintf>
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	08 95       	ret

0000039a <puts>:
 39a:	0f 93       	push	r16
 39c:	1f 93       	push	r17
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <__iob+0x2>
 3a6:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <__iob+0x3>
 3aa:	23 81       	ldd	r18, Z+3	; 0x03
 3ac:	21 ff       	sbrs	r18, 1
 3ae:	1b c0       	rjmp	.+54     	; 0x3e6 <puts+0x4c>
 3b0:	8c 01       	movw	r16, r24
 3b2:	d0 e0       	ldi	r29, 0x00	; 0
 3b4:	c0 e0       	ldi	r28, 0x00	; 0
 3b6:	f8 01       	movw	r30, r16
 3b8:	81 91       	ld	r24, Z+
 3ba:	8f 01       	movw	r16, r30
 3bc:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <__iob+0x2>
 3c0:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <__iob+0x3>
 3c4:	db 01       	movw	r26, r22
 3c6:	18 96       	adiw	r26, 0x08	; 8
 3c8:	ed 91       	ld	r30, X+
 3ca:	fc 91       	ld	r31, X
 3cc:	19 97       	sbiw	r26, 0x09	; 9
 3ce:	88 23       	and	r24, r24
 3d0:	31 f0       	breq	.+12     	; 0x3de <puts+0x44>
 3d2:	09 95       	icall
 3d4:	89 2b       	or	r24, r25
 3d6:	79 f3       	breq	.-34     	; 0x3b6 <puts+0x1c>
 3d8:	df ef       	ldi	r29, 0xFF	; 255
 3da:	cf ef       	ldi	r28, 0xFF	; 255
 3dc:	ec cf       	rjmp	.-40     	; 0x3b6 <puts+0x1c>
 3de:	8a e0       	ldi	r24, 0x0A	; 10
 3e0:	09 95       	icall
 3e2:	89 2b       	or	r24, r25
 3e4:	19 f0       	breq	.+6      	; 0x3ec <puts+0x52>
 3e6:	8f ef       	ldi	r24, 0xFF	; 255
 3e8:	9f ef       	ldi	r25, 0xFF	; 255
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <puts+0x56>
 3ec:	8d 2f       	mov	r24, r29
 3ee:	9c 2f       	mov	r25, r28
 3f0:	df 91       	pop	r29
 3f2:	cf 91       	pop	r28
 3f4:	1f 91       	pop	r17
 3f6:	0f 91       	pop	r16
 3f8:	08 95       	ret

000003fa <vfprintf>:
 3fa:	2f 92       	push	r2
 3fc:	3f 92       	push	r3
 3fe:	4f 92       	push	r4
 400:	5f 92       	push	r5
 402:	6f 92       	push	r6
 404:	7f 92       	push	r7
 406:	8f 92       	push	r8
 408:	9f 92       	push	r9
 40a:	af 92       	push	r10
 40c:	bf 92       	push	r11
 40e:	cf 92       	push	r12
 410:	df 92       	push	r13
 412:	ef 92       	push	r14
 414:	ff 92       	push	r15
 416:	0f 93       	push	r16
 418:	1f 93       	push	r17
 41a:	cf 93       	push	r28
 41c:	df 93       	push	r29
 41e:	cd b7       	in	r28, 0x3d	; 61
 420:	de b7       	in	r29, 0x3e	; 62
 422:	2b 97       	sbiw	r28, 0x0b	; 11
 424:	0f b6       	in	r0, 0x3f	; 63
 426:	f8 94       	cli
 428:	de bf       	out	0x3e, r29	; 62
 42a:	0f be       	out	0x3f, r0	; 63
 42c:	cd bf       	out	0x3d, r28	; 61
 42e:	6c 01       	movw	r12, r24
 430:	7b 01       	movw	r14, r22
 432:	8a 01       	movw	r16, r20
 434:	fc 01       	movw	r30, r24
 436:	17 82       	std	Z+7, r1	; 0x07
 438:	16 82       	std	Z+6, r1	; 0x06
 43a:	83 81       	ldd	r24, Z+3	; 0x03
 43c:	81 ff       	sbrs	r24, 1
 43e:	bf c1       	rjmp	.+894    	; 0x7be <__LOCK_REGION_LENGTH__+0x3be>
 440:	ce 01       	movw	r24, r28
 442:	01 96       	adiw	r24, 0x01	; 1
 444:	3c 01       	movw	r6, r24
 446:	f6 01       	movw	r30, r12
 448:	93 81       	ldd	r25, Z+3	; 0x03
 44a:	f7 01       	movw	r30, r14
 44c:	93 fd       	sbrc	r25, 3
 44e:	85 91       	lpm	r24, Z+
 450:	93 ff       	sbrs	r25, 3
 452:	81 91       	ld	r24, Z+
 454:	7f 01       	movw	r14, r30
 456:	88 23       	and	r24, r24
 458:	09 f4       	brne	.+2      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 45a:	ad c1       	rjmp	.+858    	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
 45c:	85 32       	cpi	r24, 0x25	; 37
 45e:	39 f4       	brne	.+14     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 460:	93 fd       	sbrc	r25, 3
 462:	85 91       	lpm	r24, Z+
 464:	93 ff       	sbrs	r25, 3
 466:	81 91       	ld	r24, Z+
 468:	7f 01       	movw	r14, r30
 46a:	85 32       	cpi	r24, 0x25	; 37
 46c:	21 f4       	brne	.+8      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46e:	b6 01       	movw	r22, r12
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	d6 d1       	rcall	.+940    	; 0x820 <fputc>
 474:	e8 cf       	rjmp	.-48     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 476:	91 2c       	mov	r9, r1
 478:	21 2c       	mov	r2, r1
 47a:	31 2c       	mov	r3, r1
 47c:	ff e1       	ldi	r31, 0x1F	; 31
 47e:	f3 15       	cp	r31, r3
 480:	d8 f0       	brcs	.+54     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 482:	8b 32       	cpi	r24, 0x2B	; 43
 484:	79 f0       	breq	.+30     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 486:	38 f4       	brcc	.+14     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 488:	80 32       	cpi	r24, 0x20	; 32
 48a:	79 f0       	breq	.+30     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 48c:	83 32       	cpi	r24, 0x23	; 35
 48e:	a1 f4       	brne	.+40     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 490:	23 2d       	mov	r18, r3
 492:	20 61       	ori	r18, 0x10	; 16
 494:	1d c0       	rjmp	.+58     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 496:	8d 32       	cpi	r24, 0x2D	; 45
 498:	61 f0       	breq	.+24     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 49a:	80 33       	cpi	r24, 0x30	; 48
 49c:	69 f4       	brne	.+26     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 49e:	23 2d       	mov	r18, r3
 4a0:	21 60       	ori	r18, 0x01	; 1
 4a2:	16 c0       	rjmp	.+44     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4a4:	83 2d       	mov	r24, r3
 4a6:	82 60       	ori	r24, 0x02	; 2
 4a8:	38 2e       	mov	r3, r24
 4aa:	e3 2d       	mov	r30, r3
 4ac:	e4 60       	ori	r30, 0x04	; 4
 4ae:	3e 2e       	mov	r3, r30
 4b0:	2a c0       	rjmp	.+84     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4b2:	f3 2d       	mov	r31, r3
 4b4:	f8 60       	ori	r31, 0x08	; 8
 4b6:	1d c0       	rjmp	.+58     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4b8:	37 fc       	sbrc	r3, 7
 4ba:	2d c0       	rjmp	.+90     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 4bc:	20 ed       	ldi	r18, 0xD0	; 208
 4be:	28 0f       	add	r18, r24
 4c0:	2a 30       	cpi	r18, 0x0A	; 10
 4c2:	40 f0       	brcs	.+16     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c4:	8e 32       	cpi	r24, 0x2E	; 46
 4c6:	b9 f4       	brne	.+46     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4c8:	36 fc       	sbrc	r3, 6
 4ca:	75 c1       	rjmp	.+746    	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
 4cc:	23 2d       	mov	r18, r3
 4ce:	20 64       	ori	r18, 0x40	; 64
 4d0:	32 2e       	mov	r3, r18
 4d2:	19 c0       	rjmp	.+50     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4d4:	36 fe       	sbrs	r3, 6
 4d6:	06 c0       	rjmp	.+12     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4d8:	8a e0       	ldi	r24, 0x0A	; 10
 4da:	98 9e       	mul	r9, r24
 4dc:	20 0d       	add	r18, r0
 4de:	11 24       	eor	r1, r1
 4e0:	92 2e       	mov	r9, r18
 4e2:	11 c0       	rjmp	.+34     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4e4:	ea e0       	ldi	r30, 0x0A	; 10
 4e6:	2e 9e       	mul	r2, r30
 4e8:	20 0d       	add	r18, r0
 4ea:	11 24       	eor	r1, r1
 4ec:	22 2e       	mov	r2, r18
 4ee:	f3 2d       	mov	r31, r3
 4f0:	f0 62       	ori	r31, 0x20	; 32
 4f2:	3f 2e       	mov	r3, r31
 4f4:	08 c0       	rjmp	.+16     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4f6:	8c 36       	cpi	r24, 0x6C	; 108
 4f8:	21 f4       	brne	.+8      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fa:	83 2d       	mov	r24, r3
 4fc:	80 68       	ori	r24, 0x80	; 128
 4fe:	38 2e       	mov	r3, r24
 500:	02 c0       	rjmp	.+4      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 502:	88 36       	cpi	r24, 0x68	; 104
 504:	41 f4       	brne	.+16     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 506:	f7 01       	movw	r30, r14
 508:	93 fd       	sbrc	r25, 3
 50a:	85 91       	lpm	r24, Z+
 50c:	93 ff       	sbrs	r25, 3
 50e:	81 91       	ld	r24, Z+
 510:	7f 01       	movw	r14, r30
 512:	81 11       	cpse	r24, r1
 514:	b3 cf       	rjmp	.-154    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 516:	98 2f       	mov	r25, r24
 518:	9f 7d       	andi	r25, 0xDF	; 223
 51a:	95 54       	subi	r25, 0x45	; 69
 51c:	93 30       	cpi	r25, 0x03	; 3
 51e:	28 f4       	brcc	.+10     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 520:	0c 5f       	subi	r16, 0xFC	; 252
 522:	1f 4f       	sbci	r17, 0xFF	; 255
 524:	9f e3       	ldi	r25, 0x3F	; 63
 526:	99 83       	std	Y+1, r25	; 0x01
 528:	0d c0       	rjmp	.+26     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 52a:	83 36       	cpi	r24, 0x63	; 99
 52c:	31 f0       	breq	.+12     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 52e:	83 37       	cpi	r24, 0x73	; 115
 530:	71 f0       	breq	.+28     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 532:	83 35       	cpi	r24, 0x53	; 83
 534:	09 f0       	breq	.+2      	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 536:	55 c0       	rjmp	.+170    	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 538:	20 c0       	rjmp	.+64     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 53a:	f8 01       	movw	r30, r16
 53c:	80 81       	ld	r24, Z
 53e:	89 83       	std	Y+1, r24	; 0x01
 540:	0e 5f       	subi	r16, 0xFE	; 254
 542:	1f 4f       	sbci	r17, 0xFF	; 255
 544:	88 24       	eor	r8, r8
 546:	83 94       	inc	r8
 548:	91 2c       	mov	r9, r1
 54a:	53 01       	movw	r10, r6
 54c:	12 c0       	rjmp	.+36     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 54e:	28 01       	movw	r4, r16
 550:	f2 e0       	ldi	r31, 0x02	; 2
 552:	4f 0e       	add	r4, r31
 554:	51 1c       	adc	r5, r1
 556:	f8 01       	movw	r30, r16
 558:	a0 80       	ld	r10, Z
 55a:	b1 80       	ldd	r11, Z+1	; 0x01
 55c:	36 fe       	sbrs	r3, 6
 55e:	03 c0       	rjmp	.+6      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 560:	69 2d       	mov	r22, r9
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	02 c0       	rjmp	.+4      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 566:	6f ef       	ldi	r22, 0xFF	; 255
 568:	7f ef       	ldi	r23, 0xFF	; 255
 56a:	c5 01       	movw	r24, r10
 56c:	4e d1       	rcall	.+668    	; 0x80a <strnlen>
 56e:	4c 01       	movw	r8, r24
 570:	82 01       	movw	r16, r4
 572:	f3 2d       	mov	r31, r3
 574:	ff 77       	andi	r31, 0x7F	; 127
 576:	3f 2e       	mov	r3, r31
 578:	15 c0       	rjmp	.+42     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 57a:	28 01       	movw	r4, r16
 57c:	22 e0       	ldi	r18, 0x02	; 2
 57e:	42 0e       	add	r4, r18
 580:	51 1c       	adc	r5, r1
 582:	f8 01       	movw	r30, r16
 584:	a0 80       	ld	r10, Z
 586:	b1 80       	ldd	r11, Z+1	; 0x01
 588:	36 fe       	sbrs	r3, 6
 58a:	03 c0       	rjmp	.+6      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 58c:	69 2d       	mov	r22, r9
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	02 c0       	rjmp	.+4      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 592:	6f ef       	ldi	r22, 0xFF	; 255
 594:	7f ef       	ldi	r23, 0xFF	; 255
 596:	c5 01       	movw	r24, r10
 598:	2d d1       	rcall	.+602    	; 0x7f4 <strnlen_P>
 59a:	4c 01       	movw	r8, r24
 59c:	f3 2d       	mov	r31, r3
 59e:	f0 68       	ori	r31, 0x80	; 128
 5a0:	3f 2e       	mov	r3, r31
 5a2:	82 01       	movw	r16, r4
 5a4:	33 fc       	sbrc	r3, 3
 5a6:	19 c0       	rjmp	.+50     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5a8:	82 2d       	mov	r24, r2
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	88 16       	cp	r8, r24
 5ae:	99 06       	cpc	r9, r25
 5b0:	a0 f4       	brcc	.+40     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5b2:	b6 01       	movw	r22, r12
 5b4:	80 e2       	ldi	r24, 0x20	; 32
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	33 d1       	rcall	.+614    	; 0x820 <fputc>
 5ba:	2a 94       	dec	r2
 5bc:	f5 cf       	rjmp	.-22     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5be:	f5 01       	movw	r30, r10
 5c0:	37 fc       	sbrc	r3, 7
 5c2:	85 91       	lpm	r24, Z+
 5c4:	37 fe       	sbrs	r3, 7
 5c6:	81 91       	ld	r24, Z+
 5c8:	5f 01       	movw	r10, r30
 5ca:	b6 01       	movw	r22, r12
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	28 d1       	rcall	.+592    	; 0x820 <fputc>
 5d0:	21 10       	cpse	r2, r1
 5d2:	2a 94       	dec	r2
 5d4:	21 e0       	ldi	r18, 0x01	; 1
 5d6:	82 1a       	sub	r8, r18
 5d8:	91 08       	sbc	r9, r1
 5da:	81 14       	cp	r8, r1
 5dc:	91 04       	cpc	r9, r1
 5de:	79 f7       	brne	.-34     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5e0:	e1 c0       	rjmp	.+450    	; 0x7a4 <__LOCK_REGION_LENGTH__+0x3a4>
 5e2:	84 36       	cpi	r24, 0x64	; 100
 5e4:	11 f0       	breq	.+4      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e6:	89 36       	cpi	r24, 0x69	; 105
 5e8:	39 f5       	brne	.+78     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 5ea:	f8 01       	movw	r30, r16
 5ec:	37 fe       	sbrs	r3, 7
 5ee:	07 c0       	rjmp	.+14     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5f0:	60 81       	ld	r22, Z
 5f2:	71 81       	ldd	r23, Z+1	; 0x01
 5f4:	82 81       	ldd	r24, Z+2	; 0x02
 5f6:	93 81       	ldd	r25, Z+3	; 0x03
 5f8:	0c 5f       	subi	r16, 0xFC	; 252
 5fa:	1f 4f       	sbci	r17, 0xFF	; 255
 5fc:	08 c0       	rjmp	.+16     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5fe:	60 81       	ld	r22, Z
 600:	71 81       	ldd	r23, Z+1	; 0x01
 602:	07 2e       	mov	r0, r23
 604:	00 0c       	add	r0, r0
 606:	88 0b       	sbc	r24, r24
 608:	99 0b       	sbc	r25, r25
 60a:	0e 5f       	subi	r16, 0xFE	; 254
 60c:	1f 4f       	sbci	r17, 0xFF	; 255
 60e:	f3 2d       	mov	r31, r3
 610:	ff 76       	andi	r31, 0x6F	; 111
 612:	3f 2e       	mov	r3, r31
 614:	97 ff       	sbrs	r25, 7
 616:	09 c0       	rjmp	.+18     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 618:	90 95       	com	r25
 61a:	80 95       	com	r24
 61c:	70 95       	com	r23
 61e:	61 95       	neg	r22
 620:	7f 4f       	sbci	r23, 0xFF	; 255
 622:	8f 4f       	sbci	r24, 0xFF	; 255
 624:	9f 4f       	sbci	r25, 0xFF	; 255
 626:	f0 68       	ori	r31, 0x80	; 128
 628:	3f 2e       	mov	r3, r31
 62a:	2a e0       	ldi	r18, 0x0A	; 10
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	a3 01       	movw	r20, r6
 630:	33 d1       	rcall	.+614    	; 0x898 <__ultoa_invert>
 632:	88 2e       	mov	r8, r24
 634:	86 18       	sub	r8, r6
 636:	44 c0       	rjmp	.+136    	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 638:	85 37       	cpi	r24, 0x75	; 117
 63a:	31 f4       	brne	.+12     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 63c:	23 2d       	mov	r18, r3
 63e:	2f 7e       	andi	r18, 0xEF	; 239
 640:	b2 2e       	mov	r11, r18
 642:	2a e0       	ldi	r18, 0x0A	; 10
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	25 c0       	rjmp	.+74     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 648:	93 2d       	mov	r25, r3
 64a:	99 7f       	andi	r25, 0xF9	; 249
 64c:	b9 2e       	mov	r11, r25
 64e:	8f 36       	cpi	r24, 0x6F	; 111
 650:	c1 f0       	breq	.+48     	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 652:	18 f4       	brcc	.+6      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 654:	88 35       	cpi	r24, 0x58	; 88
 656:	79 f0       	breq	.+30     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 658:	ae c0       	rjmp	.+348    	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
 65a:	80 37       	cpi	r24, 0x70	; 112
 65c:	19 f0       	breq	.+6      	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 65e:	88 37       	cpi	r24, 0x78	; 120
 660:	21 f0       	breq	.+8      	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 662:	a9 c0       	rjmp	.+338    	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
 664:	e9 2f       	mov	r30, r25
 666:	e0 61       	ori	r30, 0x10	; 16
 668:	be 2e       	mov	r11, r30
 66a:	b4 fe       	sbrs	r11, 4
 66c:	0d c0       	rjmp	.+26     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 66e:	fb 2d       	mov	r31, r11
 670:	f4 60       	ori	r31, 0x04	; 4
 672:	bf 2e       	mov	r11, r31
 674:	09 c0       	rjmp	.+18     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 676:	34 fe       	sbrs	r3, 4
 678:	0a c0       	rjmp	.+20     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 67a:	29 2f       	mov	r18, r25
 67c:	26 60       	ori	r18, 0x06	; 6
 67e:	b2 2e       	mov	r11, r18
 680:	06 c0       	rjmp	.+12     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 682:	28 e0       	ldi	r18, 0x08	; 8
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	05 c0       	rjmp	.+10     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 688:	20 e1       	ldi	r18, 0x10	; 16
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	02 c0       	rjmp	.+4      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 68e:	20 e1       	ldi	r18, 0x10	; 16
 690:	32 e0       	ldi	r19, 0x02	; 2
 692:	f8 01       	movw	r30, r16
 694:	b7 fe       	sbrs	r11, 7
 696:	07 c0       	rjmp	.+14     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 698:	60 81       	ld	r22, Z
 69a:	71 81       	ldd	r23, Z+1	; 0x01
 69c:	82 81       	ldd	r24, Z+2	; 0x02
 69e:	93 81       	ldd	r25, Z+3	; 0x03
 6a0:	0c 5f       	subi	r16, 0xFC	; 252
 6a2:	1f 4f       	sbci	r17, 0xFF	; 255
 6a4:	06 c0       	rjmp	.+12     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 6a6:	60 81       	ld	r22, Z
 6a8:	71 81       	ldd	r23, Z+1	; 0x01
 6aa:	80 e0       	ldi	r24, 0x00	; 0
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	0e 5f       	subi	r16, 0xFE	; 254
 6b0:	1f 4f       	sbci	r17, 0xFF	; 255
 6b2:	a3 01       	movw	r20, r6
 6b4:	f1 d0       	rcall	.+482    	; 0x898 <__ultoa_invert>
 6b6:	88 2e       	mov	r8, r24
 6b8:	86 18       	sub	r8, r6
 6ba:	fb 2d       	mov	r31, r11
 6bc:	ff 77       	andi	r31, 0x7F	; 127
 6be:	3f 2e       	mov	r3, r31
 6c0:	36 fe       	sbrs	r3, 6
 6c2:	0d c0       	rjmp	.+26     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6c4:	23 2d       	mov	r18, r3
 6c6:	2e 7f       	andi	r18, 0xFE	; 254
 6c8:	a2 2e       	mov	r10, r18
 6ca:	89 14       	cp	r8, r9
 6cc:	58 f4       	brcc	.+22     	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6ce:	34 fe       	sbrs	r3, 4
 6d0:	0b c0       	rjmp	.+22     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6d2:	32 fc       	sbrc	r3, 2
 6d4:	09 c0       	rjmp	.+18     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6d6:	83 2d       	mov	r24, r3
 6d8:	8e 7e       	andi	r24, 0xEE	; 238
 6da:	a8 2e       	mov	r10, r24
 6dc:	05 c0       	rjmp	.+10     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6de:	b8 2c       	mov	r11, r8
 6e0:	a3 2c       	mov	r10, r3
 6e2:	03 c0       	rjmp	.+6      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e4:	b8 2c       	mov	r11, r8
 6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e8:	b9 2c       	mov	r11, r9
 6ea:	a4 fe       	sbrs	r10, 4
 6ec:	0f c0       	rjmp	.+30     	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 6ee:	fe 01       	movw	r30, r28
 6f0:	e8 0d       	add	r30, r8
 6f2:	f1 1d       	adc	r31, r1
 6f4:	80 81       	ld	r24, Z
 6f6:	80 33       	cpi	r24, 0x30	; 48
 6f8:	21 f4       	brne	.+8      	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 6fa:	9a 2d       	mov	r25, r10
 6fc:	99 7e       	andi	r25, 0xE9	; 233
 6fe:	a9 2e       	mov	r10, r25
 700:	09 c0       	rjmp	.+18     	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 702:	a2 fe       	sbrs	r10, 2
 704:	06 c0       	rjmp	.+12     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 706:	b3 94       	inc	r11
 708:	b3 94       	inc	r11
 70a:	04 c0       	rjmp	.+8      	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 70c:	8a 2d       	mov	r24, r10
 70e:	86 78       	andi	r24, 0x86	; 134
 710:	09 f0       	breq	.+2      	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 712:	b3 94       	inc	r11
 714:	a3 fc       	sbrc	r10, 3
 716:	10 c0       	rjmp	.+32     	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 718:	a0 fe       	sbrs	r10, 0
 71a:	06 c0       	rjmp	.+12     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 71c:	b2 14       	cp	r11, r2
 71e:	80 f4       	brcc	.+32     	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 720:	28 0c       	add	r2, r8
 722:	92 2c       	mov	r9, r2
 724:	9b 18       	sub	r9, r11
 726:	0d c0       	rjmp	.+26     	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
 728:	b2 14       	cp	r11, r2
 72a:	58 f4       	brcc	.+22     	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
 72c:	b6 01       	movw	r22, r12
 72e:	80 e2       	ldi	r24, 0x20	; 32
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	76 d0       	rcall	.+236    	; 0x820 <fputc>
 734:	b3 94       	inc	r11
 736:	f8 cf       	rjmp	.-16     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 738:	b2 14       	cp	r11, r2
 73a:	18 f4       	brcc	.+6      	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
 73c:	2b 18       	sub	r2, r11
 73e:	02 c0       	rjmp	.+4      	; 0x744 <__LOCK_REGION_LENGTH__+0x344>
 740:	98 2c       	mov	r9, r8
 742:	21 2c       	mov	r2, r1
 744:	a4 fe       	sbrs	r10, 4
 746:	0f c0       	rjmp	.+30     	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 748:	b6 01       	movw	r22, r12
 74a:	80 e3       	ldi	r24, 0x30	; 48
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	68 d0       	rcall	.+208    	; 0x820 <fputc>
 750:	a2 fe       	sbrs	r10, 2
 752:	16 c0       	rjmp	.+44     	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 754:	a1 fc       	sbrc	r10, 1
 756:	03 c0       	rjmp	.+6      	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 758:	88 e7       	ldi	r24, 0x78	; 120
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	02 c0       	rjmp	.+4      	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
 75e:	88 e5       	ldi	r24, 0x58	; 88
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	b6 01       	movw	r22, r12
 764:	0c c0       	rjmp	.+24     	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
 766:	8a 2d       	mov	r24, r10
 768:	86 78       	andi	r24, 0x86	; 134
 76a:	51 f0       	breq	.+20     	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 76c:	a1 fe       	sbrs	r10, 1
 76e:	02 c0       	rjmp	.+4      	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 770:	8b e2       	ldi	r24, 0x2B	; 43
 772:	01 c0       	rjmp	.+2      	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
 774:	80 e2       	ldi	r24, 0x20	; 32
 776:	a7 fc       	sbrc	r10, 7
 778:	8d e2       	ldi	r24, 0x2D	; 45
 77a:	b6 01       	movw	r22, r12
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	50 d0       	rcall	.+160    	; 0x820 <fputc>
 780:	89 14       	cp	r8, r9
 782:	30 f4       	brcc	.+12     	; 0x790 <__LOCK_REGION_LENGTH__+0x390>
 784:	b6 01       	movw	r22, r12
 786:	80 e3       	ldi	r24, 0x30	; 48
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	4a d0       	rcall	.+148    	; 0x820 <fputc>
 78c:	9a 94       	dec	r9
 78e:	f8 cf       	rjmp	.-16     	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 790:	8a 94       	dec	r8
 792:	f3 01       	movw	r30, r6
 794:	e8 0d       	add	r30, r8
 796:	f1 1d       	adc	r31, r1
 798:	80 81       	ld	r24, Z
 79a:	b6 01       	movw	r22, r12
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	40 d0       	rcall	.+128    	; 0x820 <fputc>
 7a0:	81 10       	cpse	r8, r1
 7a2:	f6 cf       	rjmp	.-20     	; 0x790 <__LOCK_REGION_LENGTH__+0x390>
 7a4:	22 20       	and	r2, r2
 7a6:	09 f4       	brne	.+2      	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
 7a8:	4e ce       	rjmp	.-868    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 7aa:	b6 01       	movw	r22, r12
 7ac:	80 e2       	ldi	r24, 0x20	; 32
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	37 d0       	rcall	.+110    	; 0x820 <fputc>
 7b2:	2a 94       	dec	r2
 7b4:	f7 cf       	rjmp	.-18     	; 0x7a4 <__LOCK_REGION_LENGTH__+0x3a4>
 7b6:	f6 01       	movw	r30, r12
 7b8:	86 81       	ldd	r24, Z+6	; 0x06
 7ba:	97 81       	ldd	r25, Z+7	; 0x07
 7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
 7be:	8f ef       	ldi	r24, 0xFF	; 255
 7c0:	9f ef       	ldi	r25, 0xFF	; 255
 7c2:	2b 96       	adiw	r28, 0x0b	; 11
 7c4:	0f b6       	in	r0, 0x3f	; 63
 7c6:	f8 94       	cli
 7c8:	de bf       	out	0x3e, r29	; 62
 7ca:	0f be       	out	0x3f, r0	; 63
 7cc:	cd bf       	out	0x3d, r28	; 61
 7ce:	df 91       	pop	r29
 7d0:	cf 91       	pop	r28
 7d2:	1f 91       	pop	r17
 7d4:	0f 91       	pop	r16
 7d6:	ff 90       	pop	r15
 7d8:	ef 90       	pop	r14
 7da:	df 90       	pop	r13
 7dc:	cf 90       	pop	r12
 7de:	bf 90       	pop	r11
 7e0:	af 90       	pop	r10
 7e2:	9f 90       	pop	r9
 7e4:	8f 90       	pop	r8
 7e6:	7f 90       	pop	r7
 7e8:	6f 90       	pop	r6
 7ea:	5f 90       	pop	r5
 7ec:	4f 90       	pop	r4
 7ee:	3f 90       	pop	r3
 7f0:	2f 90       	pop	r2
 7f2:	08 95       	ret

000007f4 <strnlen_P>:
 7f4:	fc 01       	movw	r30, r24
 7f6:	05 90       	lpm	r0, Z+
 7f8:	61 50       	subi	r22, 0x01	; 1
 7fa:	70 40       	sbci	r23, 0x00	; 0
 7fc:	01 10       	cpse	r0, r1
 7fe:	d8 f7       	brcc	.-10     	; 0x7f6 <strnlen_P+0x2>
 800:	80 95       	com	r24
 802:	90 95       	com	r25
 804:	8e 0f       	add	r24, r30
 806:	9f 1f       	adc	r25, r31
 808:	08 95       	ret

0000080a <strnlen>:
 80a:	fc 01       	movw	r30, r24
 80c:	61 50       	subi	r22, 0x01	; 1
 80e:	70 40       	sbci	r23, 0x00	; 0
 810:	01 90       	ld	r0, Z+
 812:	01 10       	cpse	r0, r1
 814:	d8 f7       	brcc	.-10     	; 0x80c <strnlen+0x2>
 816:	80 95       	com	r24
 818:	90 95       	com	r25
 81a:	8e 0f       	add	r24, r30
 81c:	9f 1f       	adc	r25, r31
 81e:	08 95       	ret

00000820 <fputc>:
 820:	0f 93       	push	r16
 822:	1f 93       	push	r17
 824:	cf 93       	push	r28
 826:	df 93       	push	r29
 828:	fb 01       	movw	r30, r22
 82a:	23 81       	ldd	r18, Z+3	; 0x03
 82c:	21 fd       	sbrc	r18, 1
 82e:	03 c0       	rjmp	.+6      	; 0x836 <fputc+0x16>
 830:	8f ef       	ldi	r24, 0xFF	; 255
 832:	9f ef       	ldi	r25, 0xFF	; 255
 834:	2c c0       	rjmp	.+88     	; 0x88e <fputc+0x6e>
 836:	22 ff       	sbrs	r18, 2
 838:	16 c0       	rjmp	.+44     	; 0x866 <fputc+0x46>
 83a:	46 81       	ldd	r20, Z+6	; 0x06
 83c:	57 81       	ldd	r21, Z+7	; 0x07
 83e:	24 81       	ldd	r18, Z+4	; 0x04
 840:	35 81       	ldd	r19, Z+5	; 0x05
 842:	42 17       	cp	r20, r18
 844:	53 07       	cpc	r21, r19
 846:	44 f4       	brge	.+16     	; 0x858 <fputc+0x38>
 848:	a0 81       	ld	r26, Z
 84a:	b1 81       	ldd	r27, Z+1	; 0x01
 84c:	9d 01       	movw	r18, r26
 84e:	2f 5f       	subi	r18, 0xFF	; 255
 850:	3f 4f       	sbci	r19, 0xFF	; 255
 852:	31 83       	std	Z+1, r19	; 0x01
 854:	20 83       	st	Z, r18
 856:	8c 93       	st	X, r24
 858:	26 81       	ldd	r18, Z+6	; 0x06
 85a:	37 81       	ldd	r19, Z+7	; 0x07
 85c:	2f 5f       	subi	r18, 0xFF	; 255
 85e:	3f 4f       	sbci	r19, 0xFF	; 255
 860:	37 83       	std	Z+7, r19	; 0x07
 862:	26 83       	std	Z+6, r18	; 0x06
 864:	14 c0       	rjmp	.+40     	; 0x88e <fputc+0x6e>
 866:	8b 01       	movw	r16, r22
 868:	ec 01       	movw	r28, r24
 86a:	fb 01       	movw	r30, r22
 86c:	00 84       	ldd	r0, Z+8	; 0x08
 86e:	f1 85       	ldd	r31, Z+9	; 0x09
 870:	e0 2d       	mov	r30, r0
 872:	09 95       	icall
 874:	89 2b       	or	r24, r25
 876:	e1 f6       	brne	.-72     	; 0x830 <fputc+0x10>
 878:	d8 01       	movw	r26, r16
 87a:	16 96       	adiw	r26, 0x06	; 6
 87c:	8d 91       	ld	r24, X+
 87e:	9c 91       	ld	r25, X
 880:	17 97       	sbiw	r26, 0x07	; 7
 882:	01 96       	adiw	r24, 0x01	; 1
 884:	17 96       	adiw	r26, 0x07	; 7
 886:	9c 93       	st	X, r25
 888:	8e 93       	st	-X, r24
 88a:	16 97       	sbiw	r26, 0x06	; 6
 88c:	ce 01       	movw	r24, r28
 88e:	df 91       	pop	r29
 890:	cf 91       	pop	r28
 892:	1f 91       	pop	r17
 894:	0f 91       	pop	r16
 896:	08 95       	ret

00000898 <__ultoa_invert>:
 898:	fa 01       	movw	r30, r20
 89a:	aa 27       	eor	r26, r26
 89c:	28 30       	cpi	r18, 0x08	; 8
 89e:	51 f1       	breq	.+84     	; 0x8f4 <__ultoa_invert+0x5c>
 8a0:	20 31       	cpi	r18, 0x10	; 16
 8a2:	81 f1       	breq	.+96     	; 0x904 <__ultoa_invert+0x6c>
 8a4:	e8 94       	clt
 8a6:	6f 93       	push	r22
 8a8:	6e 7f       	andi	r22, 0xFE	; 254
 8aa:	6e 5f       	subi	r22, 0xFE	; 254
 8ac:	7f 4f       	sbci	r23, 0xFF	; 255
 8ae:	8f 4f       	sbci	r24, 0xFF	; 255
 8b0:	9f 4f       	sbci	r25, 0xFF	; 255
 8b2:	af 4f       	sbci	r26, 0xFF	; 255
 8b4:	b1 e0       	ldi	r27, 0x01	; 1
 8b6:	3e d0       	rcall	.+124    	; 0x934 <__ultoa_invert+0x9c>
 8b8:	b4 e0       	ldi	r27, 0x04	; 4
 8ba:	3c d0       	rcall	.+120    	; 0x934 <__ultoa_invert+0x9c>
 8bc:	67 0f       	add	r22, r23
 8be:	78 1f       	adc	r23, r24
 8c0:	89 1f       	adc	r24, r25
 8c2:	9a 1f       	adc	r25, r26
 8c4:	a1 1d       	adc	r26, r1
 8c6:	68 0f       	add	r22, r24
 8c8:	79 1f       	adc	r23, r25
 8ca:	8a 1f       	adc	r24, r26
 8cc:	91 1d       	adc	r25, r1
 8ce:	a1 1d       	adc	r26, r1
 8d0:	6a 0f       	add	r22, r26
 8d2:	71 1d       	adc	r23, r1
 8d4:	81 1d       	adc	r24, r1
 8d6:	91 1d       	adc	r25, r1
 8d8:	a1 1d       	adc	r26, r1
 8da:	20 d0       	rcall	.+64     	; 0x91c <__ultoa_invert+0x84>
 8dc:	09 f4       	brne	.+2      	; 0x8e0 <__ultoa_invert+0x48>
 8de:	68 94       	set
 8e0:	3f 91       	pop	r19
 8e2:	2a e0       	ldi	r18, 0x0A	; 10
 8e4:	26 9f       	mul	r18, r22
 8e6:	11 24       	eor	r1, r1
 8e8:	30 19       	sub	r19, r0
 8ea:	30 5d       	subi	r19, 0xD0	; 208
 8ec:	31 93       	st	Z+, r19
 8ee:	de f6       	brtc	.-74     	; 0x8a6 <__ultoa_invert+0xe>
 8f0:	cf 01       	movw	r24, r30
 8f2:	08 95       	ret
 8f4:	46 2f       	mov	r20, r22
 8f6:	47 70       	andi	r20, 0x07	; 7
 8f8:	40 5d       	subi	r20, 0xD0	; 208
 8fa:	41 93       	st	Z+, r20
 8fc:	b3 e0       	ldi	r27, 0x03	; 3
 8fe:	0f d0       	rcall	.+30     	; 0x91e <__ultoa_invert+0x86>
 900:	c9 f7       	brne	.-14     	; 0x8f4 <__ultoa_invert+0x5c>
 902:	f6 cf       	rjmp	.-20     	; 0x8f0 <__ultoa_invert+0x58>
 904:	46 2f       	mov	r20, r22
 906:	4f 70       	andi	r20, 0x0F	; 15
 908:	40 5d       	subi	r20, 0xD0	; 208
 90a:	4a 33       	cpi	r20, 0x3A	; 58
 90c:	18 f0       	brcs	.+6      	; 0x914 <__ultoa_invert+0x7c>
 90e:	49 5d       	subi	r20, 0xD9	; 217
 910:	31 fd       	sbrc	r19, 1
 912:	40 52       	subi	r20, 0x20	; 32
 914:	41 93       	st	Z+, r20
 916:	02 d0       	rcall	.+4      	; 0x91c <__ultoa_invert+0x84>
 918:	a9 f7       	brne	.-22     	; 0x904 <__ultoa_invert+0x6c>
 91a:	ea cf       	rjmp	.-44     	; 0x8f0 <__ultoa_invert+0x58>
 91c:	b4 e0       	ldi	r27, 0x04	; 4
 91e:	a6 95       	lsr	r26
 920:	97 95       	ror	r25
 922:	87 95       	ror	r24
 924:	77 95       	ror	r23
 926:	67 95       	ror	r22
 928:	ba 95       	dec	r27
 92a:	c9 f7       	brne	.-14     	; 0x91e <__ultoa_invert+0x86>
 92c:	00 97       	sbiw	r24, 0x00	; 0
 92e:	61 05       	cpc	r22, r1
 930:	71 05       	cpc	r23, r1
 932:	08 95       	ret
 934:	9b 01       	movw	r18, r22
 936:	ac 01       	movw	r20, r24
 938:	0a 2e       	mov	r0, r26
 93a:	06 94       	lsr	r0
 93c:	57 95       	ror	r21
 93e:	47 95       	ror	r20
 940:	37 95       	ror	r19
 942:	27 95       	ror	r18
 944:	ba 95       	dec	r27
 946:	c9 f7       	brne	.-14     	; 0x93a <__ultoa_invert+0xa2>
 948:	62 0f       	add	r22, r18
 94a:	73 1f       	adc	r23, r19
 94c:	84 1f       	adc	r24, r20
 94e:	95 1f       	adc	r25, r21
 950:	a0 1d       	adc	r26, r0
 952:	08 95       	ret

00000954 <_exit>:
 954:	f8 94       	cli

00000956 <__stop_program>:
 956:	ff cf       	rjmp	.-2      	; 0x956 <__stop_program>
